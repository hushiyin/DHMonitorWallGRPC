// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MonitorWall.proto
// Protobuf C++ Version: 5.27.2

#include "MonitorWall.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace MonitorWall {

inline constexpr windowStreamInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : resolution_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        compression_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        window_id_{0},
        bit_rate_{0},
        frame_rate_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR windowStreamInfo::windowStreamInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct windowStreamInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR windowStreamInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~windowStreamInfoDefaultTypeInternal() {}
  union {
    windowStreamInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 windowStreamInfoDefaultTypeInternal _windowStreamInfo_default_instance_;

inline constexpr tvList::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_tv_id_{0},
        is_bind_{false},
        block_line_{0},
        block_col_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR tvList::tvList(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct tvListDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tvListDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~tvListDefaultTypeInternal() {}
  union {
    tvList _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tvListDefaultTypeInternal _tvList_default_instance_;

inline constexpr sourceCommonRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : channel_id_{0},
        window_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR sourceCommonRequest::sourceCommonRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct sourceCommonRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR sourceCommonRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~sourceCommonRequestDefaultTypeInternal() {}
  union {
    sourceCommonRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 sourceCommonRequestDefaultTypeInternal _sourceCommonRequest_default_instance_;

inline constexpr outTV::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : tv_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cnannel_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR outTV::outTV(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct outTVDefaultTypeInternal {
  PROTOBUF_CONSTEXPR outTVDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~outTVDefaultTypeInternal() {}
  union {
    outTV _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 outTVDefaultTypeInternal _outTV_default_instance_;

inline constexpr loginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : decoder_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decoder_username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decoder_pwd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        decoder_port_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR loginRequest::loginRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct loginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR loginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~loginRequestDefaultTypeInternal() {}
  union {
    loginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 loginRequestDefaultTypeInternal _loginRequest_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR empty::empty(::_pbi::ConstantInitialized) {}
struct emptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR emptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~emptyDefaultTypeInternal() {}
  union {
    empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 emptyDefaultTypeInternal _empty_default_instance_;

inline constexpr devMes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : dev_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dev_user_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dev_pwd_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dev_port_{0},
        dev_channel_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR devMes::devMes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct devMesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR devMesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~devMesDefaultTypeInternal() {}
  union {
    devMes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 devMesDefaultTypeInternal _devMes_default_instance_;

inline constexpr codeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_describe_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR codeResponse::codeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct codeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR codeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~codeResponseDefaultTypeInternal() {}
  union {
    codeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 codeResponseDefaultTypeInternal _codeResponse_default_instance_;

inline constexpr cameraMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : camera_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        camera_ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        stream_type_{0},
        camera_channel_{0},
        win_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR cameraMessage::cameraMessage(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct cameraMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR cameraMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~cameraMessageDefaultTypeInternal() {}
  union {
    cameraMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 cameraMessageDefaultTypeInternal _cameraMessage_default_instance_;

inline constexpr blockMes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : bind_line_{0},
        bind_col_{0},
        bind_ch_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR blockMes::blockMes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct blockMesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR blockMesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~blockMesDefaultTypeInternal() {}
  union {
    blockMes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 blockMesDefaultTypeInternal _blockMes_default_instance_;

inline constexpr wallConfigRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_{},
        login_res_{nullptr},
        block_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR wallConfigRequest::wallConfigRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct wallConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR wallConfigRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~wallConfigRequestDefaultTypeInternal() {}
  union {
    wallConfigRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 wallConfigRequestDefaultTypeInternal _wallConfigRequest_default_instance_;

inline constexpr tvMesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tv_list_{},
        code_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR tvMesResponse::tvMesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct tvMesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR tvMesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~tvMesResponseDefaultTypeInternal() {}
  union {
    tvMesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 tvMesResponseDefaultTypeInternal _tvMesResponse_default_instance_;

inline constexpr splitWindowRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        login_res_{nullptr},
        tv_id_{0},
        spilt_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR splitWindowRequest::splitWindowRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct splitWindowRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR splitWindowRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~splitWindowRequestDefaultTypeInternal() {}
  union {
    splitWindowRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 splitWindowRequestDefaultTypeInternal _splitWindowRequest_default_instance_;

inline constexpr setSourceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        login_res_{nullptr},
        source_res_{nullptr},
        dev_mes_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR setSourceRequest::setSourceRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct setSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR setSourceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~setSourceRequestDefaultTypeInternal() {}
  union {
    setSourceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 setSourceRequestDefaultTypeInternal _setSourceRequest_default_instance_;

inline constexpr searchDevRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        dev_mes_{},
        code_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR searchDevRequest::searchDevRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct searchDevRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR searchDevRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~searchDevRequestDefaultTypeInternal() {}
  union {
    searchDevRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 searchDevRequestDefaultTypeInternal _searchDevRequest_default_instance_;

inline constexpr oneWindeosDispalyMes::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cam_mes_{},
        out_tv_id_{0},
        win_num_{0},
        is_bind_{false},
        block_line_{0},
        block_col_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR oneWindeosDispalyMes::oneWindeosDispalyMes(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct oneWindeosDispalyMesDefaultTypeInternal {
  PROTOBUF_CONSTEXPR oneWindeosDispalyMesDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~oneWindeosDispalyMesDefaultTypeInternal() {}
  union {
    oneWindeosDispalyMes _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 oneWindeosDispalyMesDefaultTypeInternal _oneWindeosDispalyMes_default_instance_;

inline constexpr delSourceRequset::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        source_res_{nullptr},
        login_res_{nullptr},
        del_mode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR delSourceRequset::delSourceRequset(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct delSourceRequsetDefaultTypeInternal {
  PROTOBUF_CONSTEXPR delSourceRequsetDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~delSourceRequsetDefaultTypeInternal() {}
  union {
    delSourceRequset _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 delSourceRequsetDefaultTypeInternal _delSourceRequset_default_instance_;

inline constexpr decoderOutTVNumResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        tv_info_{},
        code_info_{nullptr},
        tv_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR decoderOutTVNumResponse::decoderOutTVNumResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct decoderOutTVNumResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR decoderOutTVNumResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~decoderOutTVNumResponseDefaultTypeInternal() {}
  union {
    decoderOutTVNumResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 decoderOutTVNumResponseDefaultTypeInternal _decoderOutTVNumResponse_default_instance_;

inline constexpr blockStreamInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : win_stream_info_{},
        tv_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR blockStreamInfo::blockStreamInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct blockStreamInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR blockStreamInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~blockStreamInfoDefaultTypeInternal() {}
  union {
    blockStreamInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 blockStreamInfoDefaultTypeInternal _blockStreamInfo_default_instance_;

inline constexpr windowSreamInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        block_stream_info_{},
        code_info_{nullptr},
        login_res_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR windowSreamInfoResponse::windowSreamInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct windowSreamInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR windowSreamInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~windowSreamInfoResponseDefaultTypeInternal() {}
  union {
    windowSreamInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 windowSreamInfoResponseDefaultTypeInternal _windowSreamInfoResponse_default_instance_;

inline constexpr allWindowDisplayMesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        one_win_mes_{},
        code_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR allWindowDisplayMesResponse::allWindowDisplayMesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct allWindowDisplayMesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR allWindowDisplayMesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~allWindowDisplayMesResponseDefaultTypeInternal() {}
  union {
    allWindowDisplayMesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 allWindowDisplayMesResponseDefaultTypeInternal _allWindowDisplayMesResponse_default_instance_;
}  // namespace MonitorWall
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_MonitorWall_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_MonitorWall_2eproto = nullptr;
const ::uint32_t
    TableStruct_MonitorWall_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::empty, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::codeResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::codeResponse, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::codeResponse, _impl_.code_describe_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::loginRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::loginRequest, _impl_.decoder_ip_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::loginRequest, _impl_.decoder_port_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::loginRequest, _impl_.decoder_username_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::loginRequest, _impl_.decoder_pwd_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::outTV, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::outTV, _impl_.tv_name_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::outTV, _impl_.cnannel_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::decoderOutTVNumResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::decoderOutTVNumResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::decoderOutTVNumResponse, _impl_.tv_num_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::decoderOutTVNumResponse, _impl_.tv_info_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::decoderOutTVNumResponse, _impl_.code_info_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockMes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockMes, _impl_.bind_line_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockMes, _impl_.bind_col_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockMes, _impl_.bind_ch_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::wallConfigRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::wallConfigRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::wallConfigRequest, _impl_.block_num_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::wallConfigRequest, _impl_.block_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::wallConfigRequest, _impl_.login_res_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvList, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvList, _impl_.out_tv_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvList, _impl_.is_bind_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvList, _impl_.block_line_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvList, _impl_.block_col_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvMesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvMesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvMesResponse, _impl_.tv_list_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::tvMesResponse, _impl_.code_info_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::sourceCommonRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::sourceCommonRequest, _impl_.channel_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::sourceCommonRequest, _impl_.window_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _impl_.dev_ip_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _impl_.dev_port_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _impl_.dev_user_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _impl_.dev_pwd_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::devMes, _impl_.dev_channel_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::setSourceRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::setSourceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::setSourceRequest, _impl_.login_res_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::setSourceRequest, _impl_.source_res_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::setSourceRequest, _impl_.dev_mes_),
        0,
        1,
        2,
        PROTOBUF_FIELD_OFFSET(::MonitorWall::delSourceRequset, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::delSourceRequset, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::delSourceRequset, _impl_.source_res_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::delSourceRequset, _impl_.del_mode_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::delSourceRequset, _impl_.login_res_),
        0,
        ~0u,
        1,
        PROTOBUF_FIELD_OFFSET(::MonitorWall::searchDevRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::searchDevRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::searchDevRequest, _impl_.dev_mes_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::searchDevRequest, _impl_.code_info_),
        ~0u,
        0,
        PROTOBUF_FIELD_OFFSET(::MonitorWall::splitWindowRequest, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::splitWindowRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::splitWindowRequest, _impl_.tv_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::splitWindowRequest, _impl_.spilt_num_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::splitWindowRequest, _impl_.login_res_),
        ~0u,
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _impl_.camera_name_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _impl_.stream_type_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _impl_.camera_ip_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _impl_.camera_channel_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::cameraMessage, _impl_.win_id_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.out_tv_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.win_num_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.is_bind_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.block_line_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.block_col_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::oneWindeosDispalyMes, _impl_.cam_mes_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::allWindowDisplayMesResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::allWindowDisplayMesResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::allWindowDisplayMesResponse, _impl_.one_win_mes_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::allWindowDisplayMesResponse, _impl_.code_info_),
        ~0u,
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _impl_.window_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _impl_.bit_rate_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _impl_.frame_rate_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _impl_.resolution_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowStreamInfo, _impl_.compression_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockStreamInfo, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockStreamInfo, _impl_.tv_id_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::blockStreamInfo, _impl_.win_stream_info_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowSreamInfoResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowSreamInfoResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowSreamInfoResponse, _impl_.block_stream_info_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowSreamInfoResponse, _impl_.code_info_),
        PROTOBUF_FIELD_OFFSET(::MonitorWall::windowSreamInfoResponse, _impl_.login_res_),
        ~0u,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::MonitorWall::empty)},
        {8, -1, -1, sizeof(::MonitorWall::codeResponse)},
        {18, -1, -1, sizeof(::MonitorWall::loginRequest)},
        {30, -1, -1, sizeof(::MonitorWall::outTV)},
        {40, 51, -1, sizeof(::MonitorWall::decoderOutTVNumResponse)},
        {54, -1, -1, sizeof(::MonitorWall::blockMes)},
        {65, 76, -1, sizeof(::MonitorWall::wallConfigRequest)},
        {79, -1, -1, sizeof(::MonitorWall::tvList)},
        {91, 101, -1, sizeof(::MonitorWall::tvMesResponse)},
        {103, -1, -1, sizeof(::MonitorWall::sourceCommonRequest)},
        {113, -1, -1, sizeof(::MonitorWall::devMes)},
        {126, 137, -1, sizeof(::MonitorWall::setSourceRequest)},
        {140, 151, -1, sizeof(::MonitorWall::delSourceRequset)},
        {154, 164, -1, sizeof(::MonitorWall::searchDevRequest)},
        {166, 177, -1, sizeof(::MonitorWall::splitWindowRequest)},
        {180, -1, -1, sizeof(::MonitorWall::cameraMessage)},
        {193, -1, -1, sizeof(::MonitorWall::oneWindeosDispalyMes)},
        {207, 217, -1, sizeof(::MonitorWall::allWindowDisplayMesResponse)},
        {219, -1, -1, sizeof(::MonitorWall::windowStreamInfo)},
        {232, -1, -1, sizeof(::MonitorWall::blockStreamInfo)},
        {242, 253, -1, sizeof(::MonitorWall::windowSreamInfoResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::MonitorWall::_empty_default_instance_._instance,
    &::MonitorWall::_codeResponse_default_instance_._instance,
    &::MonitorWall::_loginRequest_default_instance_._instance,
    &::MonitorWall::_outTV_default_instance_._instance,
    &::MonitorWall::_decoderOutTVNumResponse_default_instance_._instance,
    &::MonitorWall::_blockMes_default_instance_._instance,
    &::MonitorWall::_wallConfigRequest_default_instance_._instance,
    &::MonitorWall::_tvList_default_instance_._instance,
    &::MonitorWall::_tvMesResponse_default_instance_._instance,
    &::MonitorWall::_sourceCommonRequest_default_instance_._instance,
    &::MonitorWall::_devMes_default_instance_._instance,
    &::MonitorWall::_setSourceRequest_default_instance_._instance,
    &::MonitorWall::_delSourceRequset_default_instance_._instance,
    &::MonitorWall::_searchDevRequest_default_instance_._instance,
    &::MonitorWall::_splitWindowRequest_default_instance_._instance,
    &::MonitorWall::_cameraMessage_default_instance_._instance,
    &::MonitorWall::_oneWindeosDispalyMes_default_instance_._instance,
    &::MonitorWall::_allWindowDisplayMesResponse_default_instance_._instance,
    &::MonitorWall::_windowStreamInfo_default_instance_._instance,
    &::MonitorWall::_blockStreamInfo_default_instance_._instance,
    &::MonitorWall::_windowSreamInfoResponse_default_instance_._instance,
};
const char descriptor_table_protodef_MonitorWall_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\021MonitorWall.proto\022\013MonitorWall\"\007\n\005empt"
    "y\"3\n\014codeResponse\022\014\n\004code\030\001 \001(\005\022\025\n\rcode_"
    "describe\030\002 \001(\t\"g\n\014loginRequest\022\022\n\ndecode"
    "r_ip\030\001 \001(\t\022\024\n\014decoder_port\030\002 \001(\r\022\030\n\020deco"
    "der_username\030\003 \001(\t\022\023\n\013decoder_pwd\030\004 \001(\t\""
    ",\n\005outTV\022\017\n\007tv_name\030\001 \001(\t\022\022\n\ncnannel_id\030"
    "\002 \001(\005\"|\n\027decoderOutTVNumResponse\022\016\n\006tv_n"
    "um\030\001 \001(\005\022#\n\007tv_info\030\002 \003(\0132\022.MonitorWall."
    "outTV\022,\n\tcode_info\030\003 \001(\0132\031.MonitorWall.c"
    "odeResponse\"@\n\010blockMes\022\021\n\tbind_line\030\001 \001"
    "(\005\022\020\n\010bind_col\030\002 \001(\005\022\017\n\007bind_ch\030\003 \001(\005\"z\n"
    "\021wallConfigRequest\022\021\n\tblock_num\030\001 \001(\005\022$\n"
    "\005block\030\002 \003(\0132\025.MonitorWall.blockMes\022,\n\tl"
    "ogin_res\030\003 \001(\0132\031.MonitorWall.loginReques"
    "t\"S\n\006tvList\022\021\n\tout_tv_id\030\001 \001(\005\022\017\n\007is_bin"
    "d\030\002 \001(\010\022\022\n\nblock_line\030\003 \001(\005\022\021\n\tblock_col"
    "\030\004 \001(\005\"c\n\rtvMesResponse\022$\n\007tv_list\030\001 \003(\013"
    "2\023.MonitorWall.tvList\022,\n\tcode_info\030\002 \001(\013"
    "2\031.MonitorWall.codeResponse\"<\n\023sourceCom"
    "monRequest\022\022\n\nchannel_id\030\001 \001(\005\022\021\n\twindow"
    "_id\030\002 \001(\005\"e\n\006devMes\022\016\n\006dev_ip\030\001 \001(\t\022\020\n\010d"
    "ev_port\030\002 \001(\005\022\020\n\010dev_user\030\003 \001(\t\022\017\n\007dev_p"
    "wd\030\004 \001(\t\022\026\n\016dev_channel_id\030\005 \001(\005\"\234\001\n\020set"
    "SourceRequest\022,\n\tlogin_res\030\001 \001(\0132\031.Monit"
    "orWall.loginRequest\0224\n\nsource_res\030\002 \001(\0132"
    " .MonitorWall.sourceCommonRequest\022$\n\007dev"
    "_mes\030\003 \001(\0132\023.MonitorWall.devMes\"\210\001\n\020delS"
    "ourceRequset\0224\n\nsource_res\030\001 \001(\0132 .Monit"
    "orWall.sourceCommonRequest\022\020\n\010del_mode\030\002"
    " \001(\005\022,\n\tlogin_res\030\003 \001(\0132\031.MonitorWall.lo"
    "ginRequest\"f\n\020searchDevRequest\022$\n\007dev_me"
    "s\030\001 \003(\0132\023.MonitorWall.devMes\022,\n\tcode_inf"
    "o\030\002 \001(\0132\031.MonitorWall.codeResponse\"d\n\022sp"
    "litWindowRequest\022\r\n\005tv_id\030\001 \001(\005\022\021\n\tspilt"
    "_num\030\002 \001(\005\022,\n\tlogin_res\030\003 \001(\0132\031.MonitorW"
    "all.loginRequest\"t\n\rcameraMessage\022\023\n\013cam"
    "era_name\030\001 \001(\t\022\023\n\013stream_type\030\002 \001(\005\022\021\n\tc"
    "amera_ip\030\003 \001(\t\022\026\n\016camera_channel\030\004 \001(\005\022\016"
    "\n\006win_id\030\005 \001(\005\"\237\001\n\024oneWindeosDispalyMes\022"
    "\021\n\tout_tv_id\030\001 \001(\005\022\017\n\007win_num\030\002 \001(\005\022\017\n\007i"
    "s_bind\030\003 \001(\010\022\022\n\nblock_line\030\004 \001(\005\022\021\n\tbloc"
    "k_col\030\005 \001(\005\022+\n\007cam_mes\030\006 \003(\0132\032.MonitorWa"
    "ll.cameraMessage\"\203\001\n\033allWindowDisplayMes"
    "Response\0226\n\013one_win_mes\030\001 \003(\0132!.MonitorW"
    "all.oneWindeosDispalyMes\022,\n\tcode_info\030\002 "
    "\001(\0132\031.MonitorWall.codeResponse\"t\n\020window"
    "StreamInfo\022\021\n\twindow_id\030\001 \001(\005\022\020\n\010bit_rat"
    "e\030\002 \001(\005\022\022\n\nframe_rate\030\003 \001(\005\022\022\n\nresolutio"
    "n\030\004 \001(\t\022\023\n\013compression\030\005 \001(\t\"X\n\017blockStr"
    "eamInfo\022\r\n\005tv_id\030\001 \001(\005\0226\n\017win_stream_inf"
    "o\030\002 \003(\0132\035.MonitorWall.windowStreamInfo\"\256"
    "\001\n\027windowSreamInfoResponse\0227\n\021block_stre"
    "am_info\030\001 \003(\0132\034.MonitorWall.blockStreamI"
    "nfo\022,\n\tcode_info\030\002 \001(\0132\031.MonitorWall.cod"
    "eResponse\022,\n\tlogin_res\030\003 \001(\0132\031.MonitorWa"
    "ll.loginRequest2\332\006\n\017SWKJMonitorWall\022\?\n\005l"
    "ogin\022\031.MonitorWall.loginRequest\032\031.Monito"
    "rWall.codeResponse\"\000\022D\n\ncheckLogin\022\031.Mon"
    "itorWall.loginRequest\032\031.MonitorWall.code"
    "Response\"\000\022M\n\010getTVNum\022\031.MonitorWall.log"
    "inRequest\032$.MonitorWall.decoderOutTVNumR"
    "esponse\"\000\022J\n\ncreateWall\022\036.MonitorWall.wa"
    "llConfigRequest\032\032.MonitorWall.tvMesRespo"
    "nse\"\000\022L\n\016setVideoSource\022\035.MonitorWall.se"
    "tSourceRequest\032\031.MonitorWall.codeRespons"
    "e\"\000\022L\n\016delVideoSource\022\035.MonitorWall.delS"
    "ourceRequset\032\031.MonitorWall.codeResponse\""
    "\000\022@\n\tsearchDev\022\022.MonitorWall.empty\032\035.Mon"
    "itorWall.searchDevRequest\"\000\022V\n\rgetDispla"
    "yMes\022\031.MonitorWall.loginRequest\032(.Monito"
    "rWall.allWindowDisplayMesResponse\"\000\022F\n\013g"
    "etTVStatus\022\031.MonitorWall.loginRequest\032\032."
    "MonitorWall.tvMesResponse\"\000\022K\n\013splitWind"
    "ow\022\037.MonitorWall.splitWindowRequest\032\031.Mo"
    "nitorWall.codeResponse\"\000\022Z\n\025queryWindowS"
    "treamInfo\022\031.MonitorWall.loginRequest\032$.M"
    "onitorWall.windowSreamInfoResponse\"\000b\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_MonitorWall_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_MonitorWall_2eproto = {
    false,
    false,
    3084,
    descriptor_table_protodef_MonitorWall_2eproto,
    "MonitorWall.proto",
    &descriptor_table_MonitorWall_2eproto_once,
    nullptr,
    0,
    21,
    schemas,
    file_default_instances,
    TableStruct_MonitorWall_2eproto::offsets,
    file_level_enum_descriptors_MonitorWall_2eproto,
    file_level_service_descriptors_MonitorWall_2eproto,
};
namespace MonitorWall {
// ===================================================================

class empty::_Internal {
 public:
};

empty::empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:MonitorWall.empty)
}
empty::empty(
    ::google::protobuf::Arena* arena,
    const empty& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:MonitorWall.empty)
}

const ::google::protobuf::MessageLite::ClassData*
empty::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(empty, _impl_._cached_size_),
              false,
          },
          &empty::MergeImpl,
          &empty::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2> empty::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_empty_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::empty>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }},
  // no field_entries, or aux_entries
  {{
  }},
};









::google::protobuf::Metadata empty::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class codeResponse::_Internal {
 public:
};

codeResponse::codeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.codeResponse)
}
inline PROTOBUF_NDEBUG_INLINE codeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::codeResponse& from_msg)
      : code_describe_(arena, from.code_describe_),
        _cached_size_{0} {}

codeResponse::codeResponse(
    ::google::protobuf::Arena* arena,
    const codeResponse& from)
    : ::google::protobuf::Message(arena) {
  codeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.codeResponse)
}
inline PROTOBUF_NDEBUG_INLINE codeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_describe_(arena),
        _cached_size_{0} {}

inline void codeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_ = {};
}
codeResponse::~codeResponse() {
  // @@protoc_insertion_point(destructor:MonitorWall.codeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void codeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_describe_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
codeResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(codeResponse, _impl_._cached_size_),
              false,
          },
          &codeResponse::MergeImpl,
          &codeResponse::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 46, 2> codeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_codeResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string code_describe = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(codeResponse, _impl_.code_describe_)}},
    // int32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(codeResponse, _impl_.code_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(codeResponse, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 code = 1;
    {PROTOBUF_FIELD_OFFSET(codeResponse, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string code_describe = 2;
    {PROTOBUF_FIELD_OFFSET(codeResponse, _impl_.code_describe_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\0\15\0\0\0\0\0"
    "MonitorWall.codeResponse"
    "code_describe"
  }},
};

PROTOBUF_NOINLINE void codeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.codeResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_describe_.ClearToEmpty();
  _impl_.code_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* codeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.codeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_code(), target);
  }

  // string code_describe = 2;
  if (!this->_internal_code_describe().empty()) {
    const std::string& _s = this->_internal_code_describe();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.codeResponse.code_describe");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.codeResponse)
  return target;
}

::size_t codeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.codeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string code_describe = 2;
  if (!this->_internal_code_describe().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code_describe());
  }

  // int32 code = 1;
  if (this->_internal_code() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void codeResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<codeResponse*>(&to_msg);
  auto& from = static_cast<const codeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.codeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code_describe().empty()) {
    _this->_internal_set_code_describe(from._internal_code_describe());
  }
  if (from._internal_code() != 0) {
    _this->_impl_.code_ = from._impl_.code_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void codeResponse::CopyFrom(const codeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.codeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void codeResponse::InternalSwap(codeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_describe_, &other->_impl_.code_describe_, arena);
        swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata codeResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class loginRequest::_Internal {
 public:
};

loginRequest::loginRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.loginRequest)
}
inline PROTOBUF_NDEBUG_INLINE loginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::loginRequest& from_msg)
      : decoder_ip_(arena, from.decoder_ip_),
        decoder_username_(arena, from.decoder_username_),
        decoder_pwd_(arena, from.decoder_pwd_),
        _cached_size_{0} {}

loginRequest::loginRequest(
    ::google::protobuf::Arena* arena,
    const loginRequest& from)
    : ::google::protobuf::Message(arena) {
  loginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.decoder_port_ = from._impl_.decoder_port_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.loginRequest)
}
inline PROTOBUF_NDEBUG_INLINE loginRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : decoder_ip_(arena),
        decoder_username_(arena),
        decoder_pwd_(arena),
        _cached_size_{0} {}

inline void loginRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.decoder_port_ = {};
}
loginRequest::~loginRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.loginRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void loginRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.decoder_ip_.Destroy();
  _impl_.decoder_username_.Destroy();
  _impl_.decoder_pwd_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
loginRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(loginRequest, _impl_._cached_size_),
              false,
          },
          &loginRequest::MergeImpl,
          &loginRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 70, 2> loginRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_loginRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string decoder_pwd = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_pwd_)}},
    // string decoder_ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_ip_)}},
    // uint32 decoder_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(loginRequest, _impl_.decoder_port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_port_)}},
    // string decoder_username = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_username_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string decoder_ip = 1;
    {PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 decoder_port = 2;
    {PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string decoder_username = 3;
    {PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string decoder_pwd = 4;
    {PROTOBUF_FIELD_OFFSET(loginRequest, _impl_.decoder_pwd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\30\12\0\20\13\0\0\0"
    "MonitorWall.loginRequest"
    "decoder_ip"
    "decoder_username"
    "decoder_pwd"
  }},
};

PROTOBUF_NOINLINE void loginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.loginRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.decoder_ip_.ClearToEmpty();
  _impl_.decoder_username_.ClearToEmpty();
  _impl_.decoder_pwd_.ClearToEmpty();
  _impl_.decoder_port_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* loginRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.loginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string decoder_ip = 1;
  if (!this->_internal_decoder_ip().empty()) {
    const std::string& _s = this->_internal_decoder_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.loginRequest.decoder_ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // uint32 decoder_port = 2;
  if (this->_internal_decoder_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        2, this->_internal_decoder_port(), target);
  }

  // string decoder_username = 3;
  if (!this->_internal_decoder_username().empty()) {
    const std::string& _s = this->_internal_decoder_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.loginRequest.decoder_username");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string decoder_pwd = 4;
  if (!this->_internal_decoder_pwd().empty()) {
    const std::string& _s = this->_internal_decoder_pwd();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.loginRequest.decoder_pwd");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.loginRequest)
  return target;
}

::size_t loginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.loginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string decoder_ip = 1;
  if (!this->_internal_decoder_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_decoder_ip());
  }

  // string decoder_username = 3;
  if (!this->_internal_decoder_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_decoder_username());
  }

  // string decoder_pwd = 4;
  if (!this->_internal_decoder_pwd().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_decoder_pwd());
  }

  // uint32 decoder_port = 2;
  if (this->_internal_decoder_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_decoder_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void loginRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<loginRequest*>(&to_msg);
  auto& from = static_cast<const loginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.loginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_decoder_ip().empty()) {
    _this->_internal_set_decoder_ip(from._internal_decoder_ip());
  }
  if (!from._internal_decoder_username().empty()) {
    _this->_internal_set_decoder_username(from._internal_decoder_username());
  }
  if (!from._internal_decoder_pwd().empty()) {
    _this->_internal_set_decoder_pwd(from._internal_decoder_pwd());
  }
  if (from._internal_decoder_port() != 0) {
    _this->_impl_.decoder_port_ = from._impl_.decoder_port_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void loginRequest::CopyFrom(const loginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.loginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void loginRequest::InternalSwap(loginRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.decoder_ip_, &other->_impl_.decoder_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.decoder_username_, &other->_impl_.decoder_username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.decoder_pwd_, &other->_impl_.decoder_pwd_, arena);
        swap(_impl_.decoder_port_, other->_impl_.decoder_port_);
}

::google::protobuf::Metadata loginRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class outTV::_Internal {
 public:
};

outTV::outTV(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.outTV)
}
inline PROTOBUF_NDEBUG_INLINE outTV::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::outTV& from_msg)
      : tv_name_(arena, from.tv_name_),
        _cached_size_{0} {}

outTV::outTV(
    ::google::protobuf::Arena* arena,
    const outTV& from)
    : ::google::protobuf::Message(arena) {
  outTV* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.cnannel_id_ = from._impl_.cnannel_id_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.outTV)
}
inline PROTOBUF_NDEBUG_INLINE outTV::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : tv_name_(arena),
        _cached_size_{0} {}

inline void outTV::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.cnannel_id_ = {};
}
outTV::~outTV() {
  // @@protoc_insertion_point(destructor:MonitorWall.outTV)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void outTV::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.tv_name_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
outTV::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(outTV, _impl_._cached_size_),
              false,
          },
          &outTV::MergeImpl,
          &outTV::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 33, 2> outTV::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_outTV_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::outTV>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 cnannel_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(outTV, _impl_.cnannel_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(outTV, _impl_.cnannel_id_)}},
    // string tv_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(outTV, _impl_.tv_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string tv_name = 1;
    {PROTOBUF_FIELD_OFFSET(outTV, _impl_.tv_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 cnannel_id = 2;
    {PROTOBUF_FIELD_OFFSET(outTV, _impl_.cnannel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\21\7\0\0\0\0\0\0"
    "MonitorWall.outTV"
    "tv_name"
  }},
};

PROTOBUF_NOINLINE void outTV::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.outTV)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tv_name_.ClearToEmpty();
  _impl_.cnannel_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* outTV::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.outTV)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string tv_name = 1;
  if (!this->_internal_tv_name().empty()) {
    const std::string& _s = this->_internal_tv_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.outTV.tv_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 cnannel_id = 2;
  if (this->_internal_cnannel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_cnannel_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.outTV)
  return target;
}

::size_t outTV::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.outTV)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string tv_name = 1;
  if (!this->_internal_tv_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_tv_name());
  }

  // int32 cnannel_id = 2;
  if (this->_internal_cnannel_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_cnannel_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void outTV::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<outTV*>(&to_msg);
  auto& from = static_cast<const outTV&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.outTV)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_tv_name().empty()) {
    _this->_internal_set_tv_name(from._internal_tv_name());
  }
  if (from._internal_cnannel_id() != 0) {
    _this->_impl_.cnannel_id_ = from._impl_.cnannel_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void outTV::CopyFrom(const outTV& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.outTV)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void outTV::InternalSwap(outTV* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.tv_name_, &other->_impl_.tv_name_, arena);
        swap(_impl_.cnannel_id_, other->_impl_.cnannel_id_);
}

::google::protobuf::Metadata outTV::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class decoderOutTVNumResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<decoderOutTVNumResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_._has_bits_);
};

decoderOutTVNumResponse::decoderOutTVNumResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.decoderOutTVNumResponse)
}
inline PROTOBUF_NDEBUG_INLINE decoderOutTVNumResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::decoderOutTVNumResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tv_info_{visibility, arena, from.tv_info_} {}

decoderOutTVNumResponse::decoderOutTVNumResponse(
    ::google::protobuf::Arena* arena,
    const decoderOutTVNumResponse& from)
    : ::google::protobuf::Message(arena) {
  decoderOutTVNumResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(
                              arena, *from._impl_.code_info_)
                        : nullptr;
  _impl_.tv_num_ = from._impl_.tv_num_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.decoderOutTVNumResponse)
}
inline PROTOBUF_NDEBUG_INLINE decoderOutTVNumResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tv_info_{visibility, arena} {}

inline void decoderOutTVNumResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_info_),
           0,
           offsetof(Impl_, tv_num_) -
               offsetof(Impl_, code_info_) +
               sizeof(Impl_::tv_num_));
}
decoderOutTVNumResponse::~decoderOutTVNumResponse() {
  // @@protoc_insertion_point(destructor:MonitorWall.decoderOutTVNumResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void decoderOutTVNumResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.code_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
decoderOutTVNumResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_._cached_size_),
              false,
          },
          &decoderOutTVNumResponse::MergeImpl,
          &decoderOutTVNumResponse::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> decoderOutTVNumResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_decoderOutTVNumResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::decoderOutTVNumResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 tv_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(decoderOutTVNumResponse, _impl_.tv_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.tv_num_)}},
    // repeated .MonitorWall.outTV tv_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.tv_info_)}},
    // .MonitorWall.codeResponse code_info = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.code_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tv_num = 1;
    {PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.tv_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .MonitorWall.outTV tv_info = 2;
    {PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.tv_info_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.codeResponse code_info = 3;
    {PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::outTV>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void decoderOutTVNumResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.decoderOutTVNumResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tv_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_info_ != nullptr);
    _impl_.code_info_->Clear();
  }
  _impl_.tv_num_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* decoderOutTVNumResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.decoderOutTVNumResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tv_num = 1;
  if (this->_internal_tv_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tv_num(), target);
  }

  // repeated .MonitorWall.outTV tv_info = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_tv_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_tv_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.codeResponse code_info = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.code_info_, _impl_.code_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.decoderOutTVNumResponse)
  return target;
}

::size_t decoderOutTVNumResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.decoderOutTVNumResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.outTV tv_info = 2;
  total_size += 1UL * this->_internal_tv_info_size();
  for (const auto& msg : this->_internal_tv_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .MonitorWall.codeResponse code_info = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.code_info_);
  }

  // int32 tv_num = 1;
  if (this->_internal_tv_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tv_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void decoderOutTVNumResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<decoderOutTVNumResponse*>(&to_msg);
  auto& from = static_cast<const decoderOutTVNumResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.decoderOutTVNumResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tv_info()->MergeFrom(
      from._internal_tv_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_info_ != nullptr);
    if (_this->_impl_.code_info_ == nullptr) {
      _this->_impl_.code_info_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(arena, *from._impl_.code_info_);
    } else {
      _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
    }
  }
  if (from._internal_tv_num() != 0) {
    _this->_impl_.tv_num_ = from._impl_.tv_num_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void decoderOutTVNumResponse::CopyFrom(const decoderOutTVNumResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.decoderOutTVNumResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void decoderOutTVNumResponse::InternalSwap(decoderOutTVNumResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tv_info_.InternalSwap(&other->_impl_.tv_info_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.tv_num_)
      + sizeof(decoderOutTVNumResponse::_impl_.tv_num_)
      - PROTOBUF_FIELD_OFFSET(decoderOutTVNumResponse, _impl_.code_info_)>(
          reinterpret_cast<char*>(&_impl_.code_info_),
          reinterpret_cast<char*>(&other->_impl_.code_info_));
}

::google::protobuf::Metadata decoderOutTVNumResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class blockMes::_Internal {
 public:
};

blockMes::blockMes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.blockMes)
}
blockMes::blockMes(
    ::google::protobuf::Arena* arena, const blockMes& from)
    : blockMes(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE blockMes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void blockMes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bind_line_),
           0,
           offsetof(Impl_, bind_ch_) -
               offsetof(Impl_, bind_line_) +
               sizeof(Impl_::bind_ch_));
}
blockMes::~blockMes() {
  // @@protoc_insertion_point(destructor:MonitorWall.blockMes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void blockMes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
blockMes::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(blockMes, _impl_._cached_size_),
              false,
          },
          &blockMes::MergeImpl,
          &blockMes::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> blockMes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_blockMes_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::blockMes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 bind_line = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(blockMes, _impl_.bind_line_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_line_)}},
    // int32 bind_col = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(blockMes, _impl_.bind_col_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_col_)}},
    // int32 bind_ch = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(blockMes, _impl_.bind_ch_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_ch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 bind_line = 1;
    {PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bind_col = 2;
    {PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_col_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bind_ch = 3;
    {PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_ch_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void blockMes::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.blockMes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.bind_line_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.bind_ch_) -
      reinterpret_cast<char*>(&_impl_.bind_line_)) + sizeof(_impl_.bind_ch_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* blockMes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.blockMes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 bind_line = 1;
  if (this->_internal_bind_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_bind_line(), target);
  }

  // int32 bind_col = 2;
  if (this->_internal_bind_col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_bind_col(), target);
  }

  // int32 bind_ch = 3;
  if (this->_internal_bind_ch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_bind_ch(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.blockMes)
  return target;
}

::size_t blockMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.blockMes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 bind_line = 1;
  if (this->_internal_bind_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bind_line());
  }

  // int32 bind_col = 2;
  if (this->_internal_bind_col() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bind_col());
  }

  // int32 bind_ch = 3;
  if (this->_internal_bind_ch() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bind_ch());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void blockMes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<blockMes*>(&to_msg);
  auto& from = static_cast<const blockMes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.blockMes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_bind_line() != 0) {
    _this->_impl_.bind_line_ = from._impl_.bind_line_;
  }
  if (from._internal_bind_col() != 0) {
    _this->_impl_.bind_col_ = from._impl_.bind_col_;
  }
  if (from._internal_bind_ch() != 0) {
    _this->_impl_.bind_ch_ = from._impl_.bind_ch_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void blockMes::CopyFrom(const blockMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.blockMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void blockMes::InternalSwap(blockMes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_ch_)
      + sizeof(blockMes::_impl_.bind_ch_)
      - PROTOBUF_FIELD_OFFSET(blockMes, _impl_.bind_line_)>(
          reinterpret_cast<char*>(&_impl_.bind_line_),
          reinterpret_cast<char*>(&other->_impl_.bind_line_));
}

::google::protobuf::Metadata blockMes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class wallConfigRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<wallConfigRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_._has_bits_);
};

wallConfigRequest::wallConfigRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.wallConfigRequest)
}
inline PROTOBUF_NDEBUG_INLINE wallConfigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::wallConfigRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        block_{visibility, arena, from.block_} {}

wallConfigRequest::wallConfigRequest(
    ::google::protobuf::Arena* arena,
    const wallConfigRequest& from)
    : ::google::protobuf::Message(arena) {
  wallConfigRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.login_res_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(
                              arena, *from._impl_.login_res_)
                        : nullptr;
  _impl_.block_num_ = from._impl_.block_num_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.wallConfigRequest)
}
inline PROTOBUF_NDEBUG_INLINE wallConfigRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        block_{visibility, arena} {}

inline void wallConfigRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, login_res_),
           0,
           offsetof(Impl_, block_num_) -
               offsetof(Impl_, login_res_) +
               sizeof(Impl_::block_num_));
}
wallConfigRequest::~wallConfigRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.wallConfigRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void wallConfigRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.login_res_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
wallConfigRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_._cached_size_),
              false,
          },
          &wallConfigRequest::MergeImpl,
          &wallConfigRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> wallConfigRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_wallConfigRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::wallConfigRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 block_num = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(wallConfigRequest, _impl_.block_num_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.block_num_)}},
    // repeated .MonitorWall.blockMes block = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.block_)}},
    // .MonitorWall.loginRequest login_res = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 1, PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.login_res_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 block_num = 1;
    {PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.block_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .MonitorWall.blockMes block = 2;
    {PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.block_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.loginRequest login_res = 3;
    {PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.login_res_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::blockMes>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void wallConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.wallConfigRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.login_res_ != nullptr);
    _impl_.login_res_->Clear();
  }
  _impl_.block_num_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* wallConfigRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.wallConfigRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 block_num = 1;
  if (this->_internal_block_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_block_num(), target);
  }

  // repeated .MonitorWall.blockMes block = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_block_size());
       i < n; i++) {
    const auto& repfield = this->_internal_block().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.loginRequest login_res = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.login_res_, _impl_.login_res_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.wallConfigRequest)
  return target;
}

::size_t wallConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.wallConfigRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.blockMes block = 2;
  total_size += 1UL * this->_internal_block_size();
  for (const auto& msg : this->_internal_block()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .MonitorWall.loginRequest login_res = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_res_);
  }

  // int32 block_num = 1;
  if (this->_internal_block_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void wallConfigRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<wallConfigRequest*>(&to_msg);
  auto& from = static_cast<const wallConfigRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.wallConfigRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_block()->MergeFrom(
      from._internal_block());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.login_res_ != nullptr);
    if (_this->_impl_.login_res_ == nullptr) {
      _this->_impl_.login_res_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(arena, *from._impl_.login_res_);
    } else {
      _this->_impl_.login_res_->MergeFrom(*from._impl_.login_res_);
    }
  }
  if (from._internal_block_num() != 0) {
    _this->_impl_.block_num_ = from._impl_.block_num_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void wallConfigRequest::CopyFrom(const wallConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.wallConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void wallConfigRequest::InternalSwap(wallConfigRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.block_.InternalSwap(&other->_impl_.block_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.block_num_)
      + sizeof(wallConfigRequest::_impl_.block_num_)
      - PROTOBUF_FIELD_OFFSET(wallConfigRequest, _impl_.login_res_)>(
          reinterpret_cast<char*>(&_impl_.login_res_),
          reinterpret_cast<char*>(&other->_impl_.login_res_));
}

::google::protobuf::Metadata wallConfigRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class tvList::_Internal {
 public:
};

tvList::tvList(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.tvList)
}
tvList::tvList(
    ::google::protobuf::Arena* arena, const tvList& from)
    : tvList(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE tvList::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void tvList::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, out_tv_id_),
           0,
           offsetof(Impl_, block_col_) -
               offsetof(Impl_, out_tv_id_) +
               sizeof(Impl_::block_col_));
}
tvList::~tvList() {
  // @@protoc_insertion_point(destructor:MonitorWall.tvList)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void tvList::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
tvList::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(tvList, _impl_._cached_size_),
              false,
          },
          &tvList::MergeImpl,
          &tvList::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> tvList::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_tvList_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::tvList>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 block_col = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(tvList, _impl_.block_col_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(tvList, _impl_.block_col_)}},
    // int32 out_tv_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(tvList, _impl_.out_tv_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(tvList, _impl_.out_tv_id_)}},
    // bool is_bind = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(tvList, _impl_.is_bind_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(tvList, _impl_.is_bind_)}},
    // int32 block_line = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(tvList, _impl_.block_line_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(tvList, _impl_.block_line_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 out_tv_id = 1;
    {PROTOBUF_FIELD_OFFSET(tvList, _impl_.out_tv_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool is_bind = 2;
    {PROTOBUF_FIELD_OFFSET(tvList, _impl_.is_bind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 block_line = 3;
    {PROTOBUF_FIELD_OFFSET(tvList, _impl_.block_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 block_col = 4;
    {PROTOBUF_FIELD_OFFSET(tvList, _impl_.block_col_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void tvList::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.tvList)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.out_tv_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.block_col_) -
      reinterpret_cast<char*>(&_impl_.out_tv_id_)) + sizeof(_impl_.block_col_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* tvList::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.tvList)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 out_tv_id = 1;
  if (this->_internal_out_tv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_out_tv_id(), target);
  }

  // bool is_bind = 2;
  if (this->_internal_is_bind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_is_bind(), target);
  }

  // int32 block_line = 3;
  if (this->_internal_block_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_block_line(), target);
  }

  // int32 block_col = 4;
  if (this->_internal_block_col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_block_col(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.tvList)
  return target;
}

::size_t tvList::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.tvList)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 out_tv_id = 1;
  if (this->_internal_out_tv_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_out_tv_id());
  }

  // bool is_bind = 2;
  if (this->_internal_is_bind() != 0) {
    total_size += 2;
  }

  // int32 block_line = 3;
  if (this->_internal_block_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_line());
  }

  // int32 block_col = 4;
  if (this->_internal_block_col() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_col());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void tvList::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<tvList*>(&to_msg);
  auto& from = static_cast<const tvList&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.tvList)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_out_tv_id() != 0) {
    _this->_impl_.out_tv_id_ = from._impl_.out_tv_id_;
  }
  if (from._internal_is_bind() != 0) {
    _this->_impl_.is_bind_ = from._impl_.is_bind_;
  }
  if (from._internal_block_line() != 0) {
    _this->_impl_.block_line_ = from._impl_.block_line_;
  }
  if (from._internal_block_col() != 0) {
    _this->_impl_.block_col_ = from._impl_.block_col_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void tvList::CopyFrom(const tvList& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.tvList)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void tvList::InternalSwap(tvList* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(tvList, _impl_.block_col_)
      + sizeof(tvList::_impl_.block_col_)
      - PROTOBUF_FIELD_OFFSET(tvList, _impl_.out_tv_id_)>(
          reinterpret_cast<char*>(&_impl_.out_tv_id_),
          reinterpret_cast<char*>(&other->_impl_.out_tv_id_));
}

::google::protobuf::Metadata tvList::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class tvMesResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<tvMesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_._has_bits_);
};

tvMesResponse::tvMesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.tvMesResponse)
}
inline PROTOBUF_NDEBUG_INLINE tvMesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::tvMesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        tv_list_{visibility, arena, from.tv_list_} {}

tvMesResponse::tvMesResponse(
    ::google::protobuf::Arena* arena,
    const tvMesResponse& from)
    : ::google::protobuf::Message(arena) {
  tvMesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(
                              arena, *from._impl_.code_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.tvMesResponse)
}
inline PROTOBUF_NDEBUG_INLINE tvMesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        tv_list_{visibility, arena} {}

inline void tvMesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_info_ = {};
}
tvMesResponse::~tvMesResponse() {
  // @@protoc_insertion_point(destructor:MonitorWall.tvMesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void tvMesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.code_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
tvMesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_._cached_size_),
              false,
          },
          &tvMesResponse::MergeImpl,
          &tvMesResponse::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> tvMesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_tvMesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::tvMesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .MonitorWall.codeResponse code_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_.code_info_)}},
    // repeated .MonitorWall.tvList tv_list = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_.tv_list_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .MonitorWall.tvList tv_list = 1;
    {PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_.tv_list_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.codeResponse code_info = 2;
    {PROTOBUF_FIELD_OFFSET(tvMesResponse, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::tvList>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void tvMesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.tvMesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.tv_list_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_info_ != nullptr);
    _impl_.code_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* tvMesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.tvMesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .MonitorWall.tvList tv_list = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_tv_list_size());
       i < n; i++) {
    const auto& repfield = this->_internal_tv_list().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.codeResponse code_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.code_info_, _impl_.code_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.tvMesResponse)
  return target;
}

::size_t tvMesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.tvMesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.tvList tv_list = 1;
  total_size += 1UL * this->_internal_tv_list_size();
  for (const auto& msg : this->_internal_tv_list()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .MonitorWall.codeResponse code_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.code_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void tvMesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<tvMesResponse*>(&to_msg);
  auto& from = static_cast<const tvMesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.tvMesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_tv_list()->MergeFrom(
      from._internal_tv_list());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_info_ != nullptr);
    if (_this->_impl_.code_info_ == nullptr) {
      _this->_impl_.code_info_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(arena, *from._impl_.code_info_);
    } else {
      _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void tvMesResponse::CopyFrom(const tvMesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.tvMesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void tvMesResponse::InternalSwap(tvMesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.tv_list_.InternalSwap(&other->_impl_.tv_list_);
  swap(_impl_.code_info_, other->_impl_.code_info_);
}

::google::protobuf::Metadata tvMesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class sourceCommonRequest::_Internal {
 public:
};

sourceCommonRequest::sourceCommonRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.sourceCommonRequest)
}
sourceCommonRequest::sourceCommonRequest(
    ::google::protobuf::Arena* arena, const sourceCommonRequest& from)
    : sourceCommonRequest(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE sourceCommonRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void sourceCommonRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, channel_id_),
           0,
           offsetof(Impl_, window_id_) -
               offsetof(Impl_, channel_id_) +
               sizeof(Impl_::window_id_));
}
sourceCommonRequest::~sourceCommonRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.sourceCommonRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void sourceCommonRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
sourceCommonRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_._cached_size_),
              false,
          },
          &sourceCommonRequest::MergeImpl,
          &sourceCommonRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> sourceCommonRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_sourceCommonRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::sourceCommonRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 window_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(sourceCommonRequest, _impl_.window_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.window_id_)}},
    // int32 channel_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(sourceCommonRequest, _impl_.channel_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.channel_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 channel_id = 1;
    {PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 window_id = 2;
    {PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.window_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

PROTOBUF_NOINLINE void sourceCommonRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.sourceCommonRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.channel_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.window_id_) -
      reinterpret_cast<char*>(&_impl_.channel_id_)) + sizeof(_impl_.window_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* sourceCommonRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.sourceCommonRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 channel_id = 1;
  if (this->_internal_channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_channel_id(), target);
  }

  // int32 window_id = 2;
  if (this->_internal_window_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_window_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.sourceCommonRequest)
  return target;
}

::size_t sourceCommonRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.sourceCommonRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // int32 channel_id = 1;
  if (this->_internal_channel_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_channel_id());
  }

  // int32 window_id = 2;
  if (this->_internal_window_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_window_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void sourceCommonRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<sourceCommonRequest*>(&to_msg);
  auto& from = static_cast<const sourceCommonRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.sourceCommonRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_channel_id() != 0) {
    _this->_impl_.channel_id_ = from._impl_.channel_id_;
  }
  if (from._internal_window_id() != 0) {
    _this->_impl_.window_id_ = from._impl_.window_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void sourceCommonRequest::CopyFrom(const sourceCommonRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.sourceCommonRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void sourceCommonRequest::InternalSwap(sourceCommonRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.window_id_)
      + sizeof(sourceCommonRequest::_impl_.window_id_)
      - PROTOBUF_FIELD_OFFSET(sourceCommonRequest, _impl_.channel_id_)>(
          reinterpret_cast<char*>(&_impl_.channel_id_),
          reinterpret_cast<char*>(&other->_impl_.channel_id_));
}

::google::protobuf::Metadata sourceCommonRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class devMes::_Internal {
 public:
};

devMes::devMes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.devMes)
}
inline PROTOBUF_NDEBUG_INLINE devMes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::devMes& from_msg)
      : dev_ip_(arena, from.dev_ip_),
        dev_user_(arena, from.dev_user_),
        dev_pwd_(arena, from.dev_pwd_),
        _cached_size_{0} {}

devMes::devMes(
    ::google::protobuf::Arena* arena,
    const devMes& from)
    : ::google::protobuf::Message(arena) {
  devMes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dev_port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, dev_port_),
           offsetof(Impl_, dev_channel_id_) -
               offsetof(Impl_, dev_port_) +
               sizeof(Impl_::dev_channel_id_));

  // @@protoc_insertion_point(copy_constructor:MonitorWall.devMes)
}
inline PROTOBUF_NDEBUG_INLINE devMes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : dev_ip_(arena),
        dev_user_(arena),
        dev_pwd_(arena),
        _cached_size_{0} {}

inline void devMes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, dev_port_),
           0,
           offsetof(Impl_, dev_channel_id_) -
               offsetof(Impl_, dev_port_) +
               sizeof(Impl_::dev_channel_id_));
}
devMes::~devMes() {
  // @@protoc_insertion_point(destructor:MonitorWall.devMes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void devMes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.dev_ip_.Destroy();
  _impl_.dev_user_.Destroy();
  _impl_.dev_pwd_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
devMes::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(devMes, _impl_._cached_size_),
              false,
          },
          &devMes::MergeImpl,
          &devMes::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 48, 2> devMes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_devMes_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::devMes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string dev_ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_ip_)}},
    // int32 dev_port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(devMes, _impl_.dev_port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_port_)}},
    // string dev_user = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_user_)}},
    // string dev_pwd = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_pwd_)}},
    // int32 dev_channel_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(devMes, _impl_.dev_channel_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_channel_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string dev_ip = 1;
    {PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 dev_port = 2;
    {PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string dev_user = 3;
    {PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_user_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dev_pwd = 4;
    {PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_pwd_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 dev_channel_id = 5;
    {PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_channel_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\22\6\0\10\7\0\0\0"
    "MonitorWall.devMes"
    "dev_ip"
    "dev_user"
    "dev_pwd"
  }},
};

PROTOBUF_NOINLINE void devMes::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.devMes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dev_ip_.ClearToEmpty();
  _impl_.dev_user_.ClearToEmpty();
  _impl_.dev_pwd_.ClearToEmpty();
  ::memset(&_impl_.dev_port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dev_channel_id_) -
      reinterpret_cast<char*>(&_impl_.dev_port_)) + sizeof(_impl_.dev_channel_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* devMes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.devMes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string dev_ip = 1;
  if (!this->_internal_dev_ip().empty()) {
    const std::string& _s = this->_internal_dev_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.devMes.dev_ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 dev_port = 2;
  if (this->_internal_dev_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_dev_port(), target);
  }

  // string dev_user = 3;
  if (!this->_internal_dev_user().empty()) {
    const std::string& _s = this->_internal_dev_user();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.devMes.dev_user");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string dev_pwd = 4;
  if (!this->_internal_dev_pwd().empty()) {
    const std::string& _s = this->_internal_dev_pwd();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.devMes.dev_pwd");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // int32 dev_channel_id = 5;
  if (this->_internal_dev_channel_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_dev_channel_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.devMes)
  return target;
}

::size_t devMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.devMes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string dev_ip = 1;
  if (!this->_internal_dev_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dev_ip());
  }

  // string dev_user = 3;
  if (!this->_internal_dev_user().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dev_user());
  }

  // string dev_pwd = 4;
  if (!this->_internal_dev_pwd().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dev_pwd());
  }

  // int32 dev_port = 2;
  if (this->_internal_dev_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dev_port());
  }

  // int32 dev_channel_id = 5;
  if (this->_internal_dev_channel_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_dev_channel_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void devMes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<devMes*>(&to_msg);
  auto& from = static_cast<const devMes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.devMes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dev_ip().empty()) {
    _this->_internal_set_dev_ip(from._internal_dev_ip());
  }
  if (!from._internal_dev_user().empty()) {
    _this->_internal_set_dev_user(from._internal_dev_user());
  }
  if (!from._internal_dev_pwd().empty()) {
    _this->_internal_set_dev_pwd(from._internal_dev_pwd());
  }
  if (from._internal_dev_port() != 0) {
    _this->_impl_.dev_port_ = from._impl_.dev_port_;
  }
  if (from._internal_dev_channel_id() != 0) {
    _this->_impl_.dev_channel_id_ = from._impl_.dev_channel_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void devMes::CopyFrom(const devMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.devMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void devMes::InternalSwap(devMes* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dev_ip_, &other->_impl_.dev_ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dev_user_, &other->_impl_.dev_user_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dev_pwd_, &other->_impl_.dev_pwd_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_channel_id_)
      + sizeof(devMes::_impl_.dev_channel_id_)
      - PROTOBUF_FIELD_OFFSET(devMes, _impl_.dev_port_)>(
          reinterpret_cast<char*>(&_impl_.dev_port_),
          reinterpret_cast<char*>(&other->_impl_.dev_port_));
}

::google::protobuf::Metadata devMes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class setSourceRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<setSourceRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_._has_bits_);
};

setSourceRequest::setSourceRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.setSourceRequest)
}
inline PROTOBUF_NDEBUG_INLINE setSourceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::setSourceRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

setSourceRequest::setSourceRequest(
    ::google::protobuf::Arena* arena,
    const setSourceRequest& from)
    : ::google::protobuf::Message(arena) {
  setSourceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.login_res_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(
                              arena, *from._impl_.login_res_)
                        : nullptr;
  _impl_.source_res_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::sourceCommonRequest>(
                              arena, *from._impl_.source_res_)
                        : nullptr;
  _impl_.dev_mes_ = (cached_has_bits & 0x00000004u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::devMes>(
                              arena, *from._impl_.dev_mes_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.setSourceRequest)
}
inline PROTOBUF_NDEBUG_INLINE setSourceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void setSourceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, login_res_),
           0,
           offsetof(Impl_, dev_mes_) -
               offsetof(Impl_, login_res_) +
               sizeof(Impl_::dev_mes_));
}
setSourceRequest::~setSourceRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.setSourceRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void setSourceRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.login_res_;
  delete _impl_.source_res_;
  delete _impl_.dev_mes_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
setSourceRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_._cached_size_),
              false,
          },
          &setSourceRequest::MergeImpl,
          &setSourceRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> setSourceRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_setSourceRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::setSourceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .MonitorWall.loginRequest login_res = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.login_res_)}},
    // .MonitorWall.sourceCommonRequest source_res = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.source_res_)}},
    // .MonitorWall.devMes dev_mes = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.dev_mes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MonitorWall.loginRequest login_res = 1;
    {PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.login_res_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.sourceCommonRequest source_res = 2;
    {PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.source_res_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.devMes dev_mes = 3;
    {PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.dev_mes_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::sourceCommonRequest>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::devMes>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void setSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.setSourceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.login_res_ != nullptr);
      _impl_.login_res_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.source_res_ != nullptr);
      _impl_.source_res_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.dev_mes_ != nullptr);
      _impl_.dev_mes_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* setSourceRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.setSourceRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.loginRequest login_res = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.login_res_, _impl_.login_res_->GetCachedSize(), target, stream);
  }

  // .MonitorWall.sourceCommonRequest source_res = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.source_res_, _impl_.source_res_->GetCachedSize(), target, stream);
  }

  // .MonitorWall.devMes dev_mes = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.dev_mes_, _impl_.dev_mes_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.setSourceRequest)
  return target;
}

::size_t setSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.setSourceRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .MonitorWall.loginRequest login_res = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_res_);
    }

    // .MonitorWall.sourceCommonRequest source_res = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_res_);
    }

    // .MonitorWall.devMes dev_mes = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.dev_mes_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void setSourceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<setSourceRequest*>(&to_msg);
  auto& from = static_cast<const setSourceRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.setSourceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.login_res_ != nullptr);
      if (_this->_impl_.login_res_ == nullptr) {
        _this->_impl_.login_res_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(arena, *from._impl_.login_res_);
      } else {
        _this->_impl_.login_res_->MergeFrom(*from._impl_.login_res_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.source_res_ != nullptr);
      if (_this->_impl_.source_res_ == nullptr) {
        _this->_impl_.source_res_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::sourceCommonRequest>(arena, *from._impl_.source_res_);
      } else {
        _this->_impl_.source_res_->MergeFrom(*from._impl_.source_res_);
      }
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(from._impl_.dev_mes_ != nullptr);
      if (_this->_impl_.dev_mes_ == nullptr) {
        _this->_impl_.dev_mes_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::devMes>(arena, *from._impl_.dev_mes_);
      } else {
        _this->_impl_.dev_mes_->MergeFrom(*from._impl_.dev_mes_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void setSourceRequest::CopyFrom(const setSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.setSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void setSourceRequest::InternalSwap(setSourceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.dev_mes_)
      + sizeof(setSourceRequest::_impl_.dev_mes_)
      - PROTOBUF_FIELD_OFFSET(setSourceRequest, _impl_.login_res_)>(
          reinterpret_cast<char*>(&_impl_.login_res_),
          reinterpret_cast<char*>(&other->_impl_.login_res_));
}

::google::protobuf::Metadata setSourceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class delSourceRequset::_Internal {
 public:
  using HasBits =
      decltype(std::declval<delSourceRequset>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_._has_bits_);
};

delSourceRequset::delSourceRequset(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.delSourceRequset)
}
inline PROTOBUF_NDEBUG_INLINE delSourceRequset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::delSourceRequset& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

delSourceRequset::delSourceRequset(
    ::google::protobuf::Arena* arena,
    const delSourceRequset& from)
    : ::google::protobuf::Message(arena) {
  delSourceRequset* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.source_res_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::sourceCommonRequest>(
                              arena, *from._impl_.source_res_)
                        : nullptr;
  _impl_.login_res_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(
                              arena, *from._impl_.login_res_)
                        : nullptr;
  _impl_.del_mode_ = from._impl_.del_mode_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.delSourceRequset)
}
inline PROTOBUF_NDEBUG_INLINE delSourceRequset::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void delSourceRequset::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, source_res_),
           0,
           offsetof(Impl_, del_mode_) -
               offsetof(Impl_, source_res_) +
               sizeof(Impl_::del_mode_));
}
delSourceRequset::~delSourceRequset() {
  // @@protoc_insertion_point(destructor:MonitorWall.delSourceRequset)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void delSourceRequset::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.source_res_;
  delete _impl_.login_res_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
delSourceRequset::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_._cached_size_),
              false,
          },
          &delSourceRequset::MergeImpl,
          &delSourceRequset::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 2, 0, 2> delSourceRequset::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_delSourceRequset_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::delSourceRequset>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .MonitorWall.sourceCommonRequest source_res = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.source_res_)}},
    // int32 del_mode = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(delSourceRequset, _impl_.del_mode_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.del_mode_)}},
    // .MonitorWall.loginRequest login_res = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 1, PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.login_res_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .MonitorWall.sourceCommonRequest source_res = 1;
    {PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.source_res_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // int32 del_mode = 2;
    {PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.del_mode_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .MonitorWall.loginRequest login_res = 3;
    {PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.login_res_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::sourceCommonRequest>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void delSourceRequset::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.delSourceRequset)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.source_res_ != nullptr);
      _impl_.source_res_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.login_res_ != nullptr);
      _impl_.login_res_->Clear();
    }
  }
  _impl_.del_mode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* delSourceRequset::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.delSourceRequset)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.sourceCommonRequest source_res = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *_impl_.source_res_, _impl_.source_res_->GetCachedSize(), target, stream);
  }

  // int32 del_mode = 2;
  if (this->_internal_del_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_del_mode(), target);
  }

  // .MonitorWall.loginRequest login_res = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.login_res_, _impl_.login_res_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.delSourceRequset)
  return target;
}

::size_t delSourceRequset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.delSourceRequset)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MonitorWall.sourceCommonRequest source_res = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.source_res_);
    }

    // .MonitorWall.loginRequest login_res = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_res_);
    }

  }
  // int32 del_mode = 2;
  if (this->_internal_del_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_del_mode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void delSourceRequset::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<delSourceRequset*>(&to_msg);
  auto& from = static_cast<const delSourceRequset&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.delSourceRequset)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.source_res_ != nullptr);
      if (_this->_impl_.source_res_ == nullptr) {
        _this->_impl_.source_res_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::sourceCommonRequest>(arena, *from._impl_.source_res_);
      } else {
        _this->_impl_.source_res_->MergeFrom(*from._impl_.source_res_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.login_res_ != nullptr);
      if (_this->_impl_.login_res_ == nullptr) {
        _this->_impl_.login_res_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(arena, *from._impl_.login_res_);
      } else {
        _this->_impl_.login_res_->MergeFrom(*from._impl_.login_res_);
      }
    }
  }
  if (from._internal_del_mode() != 0) {
    _this->_impl_.del_mode_ = from._impl_.del_mode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void delSourceRequset::CopyFrom(const delSourceRequset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.delSourceRequset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void delSourceRequset::InternalSwap(delSourceRequset* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.del_mode_)
      + sizeof(delSourceRequset::_impl_.del_mode_)
      - PROTOBUF_FIELD_OFFSET(delSourceRequset, _impl_.source_res_)>(
          reinterpret_cast<char*>(&_impl_.source_res_),
          reinterpret_cast<char*>(&other->_impl_.source_res_));
}

::google::protobuf::Metadata delSourceRequset::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class searchDevRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<searchDevRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_._has_bits_);
};

searchDevRequest::searchDevRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.searchDevRequest)
}
inline PROTOBUF_NDEBUG_INLINE searchDevRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::searchDevRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        dev_mes_{visibility, arena, from.dev_mes_} {}

searchDevRequest::searchDevRequest(
    ::google::protobuf::Arena* arena,
    const searchDevRequest& from)
    : ::google::protobuf::Message(arena) {
  searchDevRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(
                              arena, *from._impl_.code_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.searchDevRequest)
}
inline PROTOBUF_NDEBUG_INLINE searchDevRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        dev_mes_{visibility, arena} {}

inline void searchDevRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_info_ = {};
}
searchDevRequest::~searchDevRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.searchDevRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void searchDevRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.code_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
searchDevRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_._cached_size_),
              false,
          },
          &searchDevRequest::MergeImpl,
          &searchDevRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> searchDevRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_searchDevRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::searchDevRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .MonitorWall.codeResponse code_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_.code_info_)}},
    // repeated .MonitorWall.devMes dev_mes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_.dev_mes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .MonitorWall.devMes dev_mes = 1;
    {PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_.dev_mes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.codeResponse code_info = 2;
    {PROTOBUF_FIELD_OFFSET(searchDevRequest, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::devMes>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void searchDevRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.searchDevRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dev_mes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_info_ != nullptr);
    _impl_.code_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* searchDevRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.searchDevRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .MonitorWall.devMes dev_mes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_dev_mes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_dev_mes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.codeResponse code_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.code_info_, _impl_.code_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.searchDevRequest)
  return target;
}

::size_t searchDevRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.searchDevRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.devMes dev_mes = 1;
  total_size += 1UL * this->_internal_dev_mes_size();
  for (const auto& msg : this->_internal_dev_mes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .MonitorWall.codeResponse code_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.code_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void searchDevRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<searchDevRequest*>(&to_msg);
  auto& from = static_cast<const searchDevRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.searchDevRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_dev_mes()->MergeFrom(
      from._internal_dev_mes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_info_ != nullptr);
    if (_this->_impl_.code_info_ == nullptr) {
      _this->_impl_.code_info_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(arena, *from._impl_.code_info_);
    } else {
      _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void searchDevRequest::CopyFrom(const searchDevRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.searchDevRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void searchDevRequest::InternalSwap(searchDevRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.dev_mes_.InternalSwap(&other->_impl_.dev_mes_);
  swap(_impl_.code_info_, other->_impl_.code_info_);
}

::google::protobuf::Metadata searchDevRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class splitWindowRequest::_Internal {
 public:
  using HasBits =
      decltype(std::declval<splitWindowRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_._has_bits_);
};

splitWindowRequest::splitWindowRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.splitWindowRequest)
}
inline PROTOBUF_NDEBUG_INLINE splitWindowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::splitWindowRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

splitWindowRequest::splitWindowRequest(
    ::google::protobuf::Arena* arena,
    const splitWindowRequest& from)
    : ::google::protobuf::Message(arena) {
  splitWindowRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.login_res_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(
                              arena, *from._impl_.login_res_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, tv_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, tv_id_),
           offsetof(Impl_, spilt_num_) -
               offsetof(Impl_, tv_id_) +
               sizeof(Impl_::spilt_num_));

  // @@protoc_insertion_point(copy_constructor:MonitorWall.splitWindowRequest)
}
inline PROTOBUF_NDEBUG_INLINE splitWindowRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void splitWindowRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, login_res_),
           0,
           offsetof(Impl_, spilt_num_) -
               offsetof(Impl_, login_res_) +
               sizeof(Impl_::spilt_num_));
}
splitWindowRequest::~splitWindowRequest() {
  // @@protoc_insertion_point(destructor:MonitorWall.splitWindowRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void splitWindowRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.login_res_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
splitWindowRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_._cached_size_),
              false,
          },
          &splitWindowRequest::MergeImpl,
          &splitWindowRequest::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2> splitWindowRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_splitWindowRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::splitWindowRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 tv_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(splitWindowRequest, _impl_.tv_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.tv_id_)}},
    // int32 spilt_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(splitWindowRequest, _impl_.spilt_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.spilt_num_)}},
    // .MonitorWall.loginRequest login_res = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.login_res_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tv_id = 1;
    {PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.tv_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 spilt_num = 2;
    {PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.spilt_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .MonitorWall.loginRequest login_res = 3;
    {PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.login_res_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void splitWindowRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.splitWindowRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.login_res_ != nullptr);
    _impl_.login_res_->Clear();
  }
  ::memset(&_impl_.tv_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.spilt_num_) -
      reinterpret_cast<char*>(&_impl_.tv_id_)) + sizeof(_impl_.spilt_num_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* splitWindowRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.splitWindowRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tv_id = 1;
  if (this->_internal_tv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tv_id(), target);
  }

  // int32 spilt_num = 2;
  if (this->_internal_spilt_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_spilt_num(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.loginRequest login_res = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.login_res_, _impl_.login_res_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.splitWindowRequest)
  return target;
}

::size_t splitWindowRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.splitWindowRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // .MonitorWall.loginRequest login_res = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_res_);
  }

  // int32 tv_id = 1;
  if (this->_internal_tv_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tv_id());
  }

  // int32 spilt_num = 2;
  if (this->_internal_spilt_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_spilt_num());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void splitWindowRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<splitWindowRequest*>(&to_msg);
  auto& from = static_cast<const splitWindowRequest&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.splitWindowRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.login_res_ != nullptr);
    if (_this->_impl_.login_res_ == nullptr) {
      _this->_impl_.login_res_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(arena, *from._impl_.login_res_);
    } else {
      _this->_impl_.login_res_->MergeFrom(*from._impl_.login_res_);
    }
  }
  if (from._internal_tv_id() != 0) {
    _this->_impl_.tv_id_ = from._impl_.tv_id_;
  }
  if (from._internal_spilt_num() != 0) {
    _this->_impl_.spilt_num_ = from._impl_.spilt_num_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void splitWindowRequest::CopyFrom(const splitWindowRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.splitWindowRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void splitWindowRequest::InternalSwap(splitWindowRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.spilt_num_)
      + sizeof(splitWindowRequest::_impl_.spilt_num_)
      - PROTOBUF_FIELD_OFFSET(splitWindowRequest, _impl_.login_res_)>(
          reinterpret_cast<char*>(&_impl_.login_res_),
          reinterpret_cast<char*>(&other->_impl_.login_res_));
}

::google::protobuf::Metadata splitWindowRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class cameraMessage::_Internal {
 public:
};

cameraMessage::cameraMessage(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.cameraMessage)
}
inline PROTOBUF_NDEBUG_INLINE cameraMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::cameraMessage& from_msg)
      : camera_name_(arena, from.camera_name_),
        camera_ip_(arena, from.camera_ip_),
        _cached_size_{0} {}

cameraMessage::cameraMessage(
    ::google::protobuf::Arena* arena,
    const cameraMessage& from)
    : ::google::protobuf::Message(arena) {
  cameraMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stream_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, stream_type_),
           offsetof(Impl_, win_id_) -
               offsetof(Impl_, stream_type_) +
               sizeof(Impl_::win_id_));

  // @@protoc_insertion_point(copy_constructor:MonitorWall.cameraMessage)
}
inline PROTOBUF_NDEBUG_INLINE cameraMessage::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : camera_name_(arena),
        camera_ip_(arena),
        _cached_size_{0} {}

inline void cameraMessage::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, stream_type_),
           0,
           offsetof(Impl_, win_id_) -
               offsetof(Impl_, stream_type_) +
               sizeof(Impl_::win_id_));
}
cameraMessage::~cameraMessage() {
  // @@protoc_insertion_point(destructor:MonitorWall.cameraMessage)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void cameraMessage::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.camera_name_.Destroy();
  _impl_.camera_ip_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
cameraMessage::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_._cached_size_),
              false,
          },
          &cameraMessage::MergeImpl,
          &cameraMessage::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 54, 2> cameraMessage::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_cameraMessage_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::cameraMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string camera_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_name_)}},
    // int32 stream_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(cameraMessage, _impl_.stream_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.stream_type_)}},
    // string camera_ip = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_ip_)}},
    // int32 camera_channel = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(cameraMessage, _impl_.camera_channel_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_channel_)}},
    // int32 win_id = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(cameraMessage, _impl_.win_id_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.win_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string camera_name = 1;
    {PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 stream_type = 2;
    {PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.stream_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string camera_ip = 3;
    {PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 camera_channel = 4;
    {PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.camera_channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 win_id = 5;
    {PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.win_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\31\13\0\11\0\0\0\0"
    "MonitorWall.cameraMessage"
    "camera_name"
    "camera_ip"
  }},
};

PROTOBUF_NOINLINE void cameraMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.cameraMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.camera_name_.ClearToEmpty();
  _impl_.camera_ip_.ClearToEmpty();
  ::memset(&_impl_.stream_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.win_id_) -
      reinterpret_cast<char*>(&_impl_.stream_type_)) + sizeof(_impl_.win_id_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* cameraMessage::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.cameraMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string camera_name = 1;
  if (!this->_internal_camera_name().empty()) {
    const std::string& _s = this->_internal_camera_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.cameraMessage.camera_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 stream_type = 2;
  if (this->_internal_stream_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_stream_type(), target);
  }

  // string camera_ip = 3;
  if (!this->_internal_camera_ip().empty()) {
    const std::string& _s = this->_internal_camera_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.cameraMessage.camera_ip");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // int32 camera_channel = 4;
  if (this->_internal_camera_channel() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_camera_channel(), target);
  }

  // int32 win_id = 5;
  if (this->_internal_win_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_win_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.cameraMessage)
  return target;
}

::size_t cameraMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.cameraMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string camera_name = 1;
  if (!this->_internal_camera_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_camera_name());
  }

  // string camera_ip = 3;
  if (!this->_internal_camera_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_camera_ip());
  }

  // int32 stream_type = 2;
  if (this->_internal_stream_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_stream_type());
  }

  // int32 camera_channel = 4;
  if (this->_internal_camera_channel() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_camera_channel());
  }

  // int32 win_id = 5;
  if (this->_internal_win_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_win_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void cameraMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<cameraMessage*>(&to_msg);
  auto& from = static_cast<const cameraMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.cameraMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_camera_name().empty()) {
    _this->_internal_set_camera_name(from._internal_camera_name());
  }
  if (!from._internal_camera_ip().empty()) {
    _this->_internal_set_camera_ip(from._internal_camera_ip());
  }
  if (from._internal_stream_type() != 0) {
    _this->_impl_.stream_type_ = from._impl_.stream_type_;
  }
  if (from._internal_camera_channel() != 0) {
    _this->_impl_.camera_channel_ = from._impl_.camera_channel_;
  }
  if (from._internal_win_id() != 0) {
    _this->_impl_.win_id_ = from._impl_.win_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void cameraMessage::CopyFrom(const cameraMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.cameraMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void cameraMessage::InternalSwap(cameraMessage* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_name_, &other->_impl_.camera_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.camera_ip_, &other->_impl_.camera_ip_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.win_id_)
      + sizeof(cameraMessage::_impl_.win_id_)
      - PROTOBUF_FIELD_OFFSET(cameraMessage, _impl_.stream_type_)>(
          reinterpret_cast<char*>(&_impl_.stream_type_),
          reinterpret_cast<char*>(&other->_impl_.stream_type_));
}

::google::protobuf::Metadata cameraMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class oneWindeosDispalyMes::_Internal {
 public:
};

oneWindeosDispalyMes::oneWindeosDispalyMes(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.oneWindeosDispalyMes)
}
inline PROTOBUF_NDEBUG_INLINE oneWindeosDispalyMes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::oneWindeosDispalyMes& from_msg)
      : cam_mes_{visibility, arena, from.cam_mes_},
        _cached_size_{0} {}

oneWindeosDispalyMes::oneWindeosDispalyMes(
    ::google::protobuf::Arena* arena,
    const oneWindeosDispalyMes& from)
    : ::google::protobuf::Message(arena) {
  oneWindeosDispalyMes* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, out_tv_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, out_tv_id_),
           offsetof(Impl_, block_col_) -
               offsetof(Impl_, out_tv_id_) +
               sizeof(Impl_::block_col_));

  // @@protoc_insertion_point(copy_constructor:MonitorWall.oneWindeosDispalyMes)
}
inline PROTOBUF_NDEBUG_INLINE oneWindeosDispalyMes::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : cam_mes_{visibility, arena},
        _cached_size_{0} {}

inline void oneWindeosDispalyMes::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, out_tv_id_),
           0,
           offsetof(Impl_, block_col_) -
               offsetof(Impl_, out_tv_id_) +
               sizeof(Impl_::block_col_));
}
oneWindeosDispalyMes::~oneWindeosDispalyMes() {
  // @@protoc_insertion_point(destructor:MonitorWall.oneWindeosDispalyMes)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void oneWindeosDispalyMes::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
oneWindeosDispalyMes::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_._cached_size_),
              false,
          },
          &oneWindeosDispalyMes::MergeImpl,
          &oneWindeosDispalyMes::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 1, 0, 2> oneWindeosDispalyMes::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_oneWindeosDispalyMes_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::oneWindeosDispalyMes>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 out_tv_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(oneWindeosDispalyMes, _impl_.out_tv_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.out_tv_id_)}},
    // int32 win_num = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(oneWindeosDispalyMes, _impl_.win_num_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.win_num_)}},
    // bool is_bind = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(oneWindeosDispalyMes, _impl_.is_bind_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.is_bind_)}},
    // int32 block_line = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(oneWindeosDispalyMes, _impl_.block_line_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.block_line_)}},
    // int32 block_col = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(oneWindeosDispalyMes, _impl_.block_col_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.block_col_)}},
    // repeated .MonitorWall.cameraMessage cam_mes = 6;
    {::_pbi::TcParser::FastMtR1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.cam_mes_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 out_tv_id = 1;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.out_tv_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 win_num = 2;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.win_num_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool is_bind = 3;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.is_bind_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // int32 block_line = 4;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.block_line_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 block_col = 5;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.block_col_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .MonitorWall.cameraMessage cam_mes = 6;
    {PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.cam_mes_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::cameraMessage>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void oneWindeosDispalyMes::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.oneWindeosDispalyMes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.cam_mes_.Clear();
  ::memset(&_impl_.out_tv_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.block_col_) -
      reinterpret_cast<char*>(&_impl_.out_tv_id_)) + sizeof(_impl_.block_col_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* oneWindeosDispalyMes::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.oneWindeosDispalyMes)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 out_tv_id = 1;
  if (this->_internal_out_tv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_out_tv_id(), target);
  }

  // int32 win_num = 2;
  if (this->_internal_win_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_win_num(), target);
  }

  // bool is_bind = 3;
  if (this->_internal_is_bind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this->_internal_is_bind(), target);
  }

  // int32 block_line = 4;
  if (this->_internal_block_line() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<4>(
            stream, this->_internal_block_line(), target);
  }

  // int32 block_col = 5;
  if (this->_internal_block_col() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<5>(
            stream, this->_internal_block_col(), target);
  }

  // repeated .MonitorWall.cameraMessage cam_mes = 6;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_cam_mes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_cam_mes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            6, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.oneWindeosDispalyMes)
  return target;
}

::size_t oneWindeosDispalyMes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.oneWindeosDispalyMes)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.cameraMessage cam_mes = 6;
  total_size += 1UL * this->_internal_cam_mes_size();
  for (const auto& msg : this->_internal_cam_mes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 out_tv_id = 1;
  if (this->_internal_out_tv_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_out_tv_id());
  }

  // int32 win_num = 2;
  if (this->_internal_win_num() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_win_num());
  }

  // bool is_bind = 3;
  if (this->_internal_is_bind() != 0) {
    total_size += 2;
  }

  // int32 block_line = 4;
  if (this->_internal_block_line() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_line());
  }

  // int32 block_col = 5;
  if (this->_internal_block_col() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_block_col());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void oneWindeosDispalyMes::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<oneWindeosDispalyMes*>(&to_msg);
  auto& from = static_cast<const oneWindeosDispalyMes&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.oneWindeosDispalyMes)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_cam_mes()->MergeFrom(
      from._internal_cam_mes());
  if (from._internal_out_tv_id() != 0) {
    _this->_impl_.out_tv_id_ = from._impl_.out_tv_id_;
  }
  if (from._internal_win_num() != 0) {
    _this->_impl_.win_num_ = from._impl_.win_num_;
  }
  if (from._internal_is_bind() != 0) {
    _this->_impl_.is_bind_ = from._impl_.is_bind_;
  }
  if (from._internal_block_line() != 0) {
    _this->_impl_.block_line_ = from._impl_.block_line_;
  }
  if (from._internal_block_col() != 0) {
    _this->_impl_.block_col_ = from._impl_.block_col_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void oneWindeosDispalyMes::CopyFrom(const oneWindeosDispalyMes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.oneWindeosDispalyMes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void oneWindeosDispalyMes::InternalSwap(oneWindeosDispalyMes* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.cam_mes_.InternalSwap(&other->_impl_.cam_mes_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.block_col_)
      + sizeof(oneWindeosDispalyMes::_impl_.block_col_)
      - PROTOBUF_FIELD_OFFSET(oneWindeosDispalyMes, _impl_.out_tv_id_)>(
          reinterpret_cast<char*>(&_impl_.out_tv_id_),
          reinterpret_cast<char*>(&other->_impl_.out_tv_id_));
}

::google::protobuf::Metadata oneWindeosDispalyMes::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class allWindowDisplayMesResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<allWindowDisplayMesResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_._has_bits_);
};

allWindowDisplayMesResponse::allWindowDisplayMesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.allWindowDisplayMesResponse)
}
inline PROTOBUF_NDEBUG_INLINE allWindowDisplayMesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::allWindowDisplayMesResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        one_win_mes_{visibility, arena, from.one_win_mes_} {}

allWindowDisplayMesResponse::allWindowDisplayMesResponse(
    ::google::protobuf::Arena* arena,
    const allWindowDisplayMesResponse& from)
    : ::google::protobuf::Message(arena) {
  allWindowDisplayMesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(
                              arena, *from._impl_.code_info_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.allWindowDisplayMesResponse)
}
inline PROTOBUF_NDEBUG_INLINE allWindowDisplayMesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        one_win_mes_{visibility, arena} {}

inline void allWindowDisplayMesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_info_ = {};
}
allWindowDisplayMesResponse::~allWindowDisplayMesResponse() {
  // @@protoc_insertion_point(destructor:MonitorWall.allWindowDisplayMesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void allWindowDisplayMesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.code_info_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
allWindowDisplayMesResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_._cached_size_),
              false,
          },
          &allWindowDisplayMesResponse::MergeImpl,
          &allWindowDisplayMesResponse::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> allWindowDisplayMesResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_allWindowDisplayMesResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::allWindowDisplayMesResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .MonitorWall.codeResponse code_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_.code_info_)}},
    // repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_.one_win_mes_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
    {PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_.one_win_mes_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.codeResponse code_info = 2;
    {PROTOBUF_FIELD_OFFSET(allWindowDisplayMesResponse, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::oneWindeosDispalyMes>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void allWindowDisplayMesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.allWindowDisplayMesResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.one_win_mes_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.code_info_ != nullptr);
    _impl_.code_info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* allWindowDisplayMesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.allWindowDisplayMesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_one_win_mes_size());
       i < n; i++) {
    const auto& repfield = this->_internal_one_win_mes().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.codeResponse code_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.code_info_, _impl_.code_info_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.allWindowDisplayMesResponse)
  return target;
}

::size_t allWindowDisplayMesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.allWindowDisplayMesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
  total_size += 1UL * this->_internal_one_win_mes_size();
  for (const auto& msg : this->_internal_one_win_mes()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .MonitorWall.codeResponse code_info = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.code_info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void allWindowDisplayMesResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<allWindowDisplayMesResponse*>(&to_msg);
  auto& from = static_cast<const allWindowDisplayMesResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.allWindowDisplayMesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_one_win_mes()->MergeFrom(
      from._internal_one_win_mes());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.code_info_ != nullptr);
    if (_this->_impl_.code_info_ == nullptr) {
      _this->_impl_.code_info_ =
          ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(arena, *from._impl_.code_info_);
    } else {
      _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void allWindowDisplayMesResponse::CopyFrom(const allWindowDisplayMesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.allWindowDisplayMesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void allWindowDisplayMesResponse::InternalSwap(allWindowDisplayMesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.one_win_mes_.InternalSwap(&other->_impl_.one_win_mes_);
  swap(_impl_.code_info_, other->_impl_.code_info_);
}

::google::protobuf::Metadata allWindowDisplayMesResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class windowStreamInfo::_Internal {
 public:
};

windowStreamInfo::windowStreamInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.windowStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE windowStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::windowStreamInfo& from_msg)
      : resolution_(arena, from.resolution_),
        compression_(arena, from.compression_),
        _cached_size_{0} {}

windowStreamInfo::windowStreamInfo(
    ::google::protobuf::Arena* arena,
    const windowStreamInfo& from)
    : ::google::protobuf::Message(arena) {
  windowStreamInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, window_id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, window_id_),
           offsetof(Impl_, frame_rate_) -
               offsetof(Impl_, window_id_) +
               sizeof(Impl_::frame_rate_));

  // @@protoc_insertion_point(copy_constructor:MonitorWall.windowStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE windowStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : resolution_(arena),
        compression_(arena),
        _cached_size_{0} {}

inline void windowStreamInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, window_id_),
           0,
           offsetof(Impl_, frame_rate_) -
               offsetof(Impl_, window_id_) +
               sizeof(Impl_::frame_rate_));
}
windowStreamInfo::~windowStreamInfo() {
  // @@protoc_insertion_point(destructor:MonitorWall.windowStreamInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void windowStreamInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.resolution_.Destroy();
  _impl_.compression_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
windowStreamInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_._cached_size_),
              false,
          },
          &windowStreamInfo::MergeImpl,
          &windowStreamInfo::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 58, 2> windowStreamInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_windowStreamInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::windowStreamInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 window_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(windowStreamInfo, _impl_.window_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.window_id_)}},
    // int32 bit_rate = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(windowStreamInfo, _impl_.bit_rate_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.bit_rate_)}},
    // int32 frame_rate = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(windowStreamInfo, _impl_.frame_rate_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.frame_rate_)}},
    // string resolution = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.resolution_)}},
    // string compression = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.compression_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 window_id = 1;
    {PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.window_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 bit_rate = 2;
    {PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.bit_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 frame_rate = 3;
    {PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.frame_rate_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string resolution = 4;
    {PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.resolution_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string compression = 5;
    {PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.compression_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\34\0\0\0\12\13\0\0"
    "MonitorWall.windowStreamInfo"
    "resolution"
    "compression"
  }},
};

PROTOBUF_NOINLINE void windowStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.windowStreamInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resolution_.ClearToEmpty();
  _impl_.compression_.ClearToEmpty();
  ::memset(&_impl_.window_id_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.frame_rate_) -
      reinterpret_cast<char*>(&_impl_.window_id_)) + sizeof(_impl_.frame_rate_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* windowStreamInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.windowStreamInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 window_id = 1;
  if (this->_internal_window_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_window_id(), target);
  }

  // int32 bit_rate = 2;
  if (this->_internal_bit_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_bit_rate(), target);
  }

  // int32 frame_rate = 3;
  if (this->_internal_frame_rate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_frame_rate(), target);
  }

  // string resolution = 4;
  if (!this->_internal_resolution().empty()) {
    const std::string& _s = this->_internal_resolution();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.windowStreamInfo.resolution");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string compression = 5;
  if (!this->_internal_compression().empty()) {
    const std::string& _s = this->_internal_compression();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "MonitorWall.windowStreamInfo.compression");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.windowStreamInfo)
  return target;
}

::size_t windowStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.windowStreamInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string resolution = 4;
  if (!this->_internal_resolution().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_resolution());
  }

  // string compression = 5;
  if (!this->_internal_compression().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_compression());
  }

  // int32 window_id = 1;
  if (this->_internal_window_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_window_id());
  }

  // int32 bit_rate = 2;
  if (this->_internal_bit_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_bit_rate());
  }

  // int32 frame_rate = 3;
  if (this->_internal_frame_rate() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_frame_rate());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void windowStreamInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<windowStreamInfo*>(&to_msg);
  auto& from = static_cast<const windowStreamInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.windowStreamInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_resolution().empty()) {
    _this->_internal_set_resolution(from._internal_resolution());
  }
  if (!from._internal_compression().empty()) {
    _this->_internal_set_compression(from._internal_compression());
  }
  if (from._internal_window_id() != 0) {
    _this->_impl_.window_id_ = from._impl_.window_id_;
  }
  if (from._internal_bit_rate() != 0) {
    _this->_impl_.bit_rate_ = from._impl_.bit_rate_;
  }
  if (from._internal_frame_rate() != 0) {
    _this->_impl_.frame_rate_ = from._impl_.frame_rate_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void windowStreamInfo::CopyFrom(const windowStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.windowStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void windowStreamInfo::InternalSwap(windowStreamInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.resolution_, &other->_impl_.resolution_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.compression_, &other->_impl_.compression_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.frame_rate_)
      + sizeof(windowStreamInfo::_impl_.frame_rate_)
      - PROTOBUF_FIELD_OFFSET(windowStreamInfo, _impl_.window_id_)>(
          reinterpret_cast<char*>(&_impl_.window_id_),
          reinterpret_cast<char*>(&other->_impl_.window_id_));
}

::google::protobuf::Metadata windowStreamInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class blockStreamInfo::_Internal {
 public:
};

blockStreamInfo::blockStreamInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.blockStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE blockStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::blockStreamInfo& from_msg)
      : win_stream_info_{visibility, arena, from.win_stream_info_},
        _cached_size_{0} {}

blockStreamInfo::blockStreamInfo(
    ::google::protobuf::Arena* arena,
    const blockStreamInfo& from)
    : ::google::protobuf::Message(arena) {
  blockStreamInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.tv_id_ = from._impl_.tv_id_;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.blockStreamInfo)
}
inline PROTOBUF_NDEBUG_INLINE blockStreamInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : win_stream_info_{visibility, arena},
        _cached_size_{0} {}

inline void blockStreamInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.tv_id_ = {};
}
blockStreamInfo::~blockStreamInfo() {
  // @@protoc_insertion_point(destructor:MonitorWall.blockStreamInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void blockStreamInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
blockStreamInfo::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(blockStreamInfo, _impl_._cached_size_),
              false,
          },
          &blockStreamInfo::MergeImpl,
          &blockStreamInfo::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> blockStreamInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_blockStreamInfo_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::blockStreamInfo>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(blockStreamInfo, _impl_.win_stream_info_)}},
    // int32 tv_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(blockStreamInfo, _impl_.tv_id_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(blockStreamInfo, _impl_.tv_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 tv_id = 1;
    {PROTOBUF_FIELD_OFFSET(blockStreamInfo, _impl_.tv_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
    {PROTOBUF_FIELD_OFFSET(blockStreamInfo, _impl_.win_stream_info_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::windowStreamInfo>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void blockStreamInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.blockStreamInfo)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.win_stream_info_.Clear();
  _impl_.tv_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* blockStreamInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.blockStreamInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 tv_id = 1;
  if (this->_internal_tv_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_tv_id(), target);
  }

  // repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_win_stream_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_win_stream_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            2, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.blockStreamInfo)
  return target;
}

::size_t blockStreamInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.blockStreamInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
  total_size += 1UL * this->_internal_win_stream_info_size();
  for (const auto& msg : this->_internal_win_stream_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // int32 tv_id = 1;
  if (this->_internal_tv_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_tv_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void blockStreamInfo::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<blockStreamInfo*>(&to_msg);
  auto& from = static_cast<const blockStreamInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.blockStreamInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_win_stream_info()->MergeFrom(
      from._internal_win_stream_info());
  if (from._internal_tv_id() != 0) {
    _this->_impl_.tv_id_ = from._impl_.tv_id_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void blockStreamInfo::CopyFrom(const blockStreamInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.blockStreamInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void blockStreamInfo::InternalSwap(blockStreamInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.win_stream_info_.InternalSwap(&other->_impl_.win_stream_info_);
        swap(_impl_.tv_id_, other->_impl_.tv_id_);
}

::google::protobuf::Metadata blockStreamInfo::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class windowSreamInfoResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<windowSreamInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_._has_bits_);
};

windowSreamInfoResponse::windowSreamInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:MonitorWall.windowSreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE windowSreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::MonitorWall::windowSreamInfoResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        block_stream_info_{visibility, arena, from.block_stream_info_} {}

windowSreamInfoResponse::windowSreamInfoResponse(
    ::google::protobuf::Arena* arena,
    const windowSreamInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  windowSreamInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.code_info_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(
                              arena, *from._impl_.code_info_)
                        : nullptr;
  _impl_.login_res_ = (cached_has_bits & 0x00000002u) ? ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(
                              arena, *from._impl_.login_res_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:MonitorWall.windowSreamInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE windowSreamInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        block_stream_info_{visibility, arena} {}

inline void windowSreamInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, code_info_),
           0,
           offsetof(Impl_, login_res_) -
               offsetof(Impl_, code_info_) +
               sizeof(Impl_::login_res_));
}
windowSreamInfoResponse::~windowSreamInfoResponse() {
  // @@protoc_insertion_point(destructor:MonitorWall.windowSreamInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void windowSreamInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.code_info_;
  delete _impl_.login_res_;
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
windowSreamInfoResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_._cached_size_),
              false,
          },
          &windowSreamInfoResponse::MergeImpl,
          &windowSreamInfoResponse::kDescriptorMethods,
          &descriptor_table_MonitorWall_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> windowSreamInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_windowSreamInfoResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::MonitorWall::windowSreamInfoResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.block_stream_info_)}},
    // .MonitorWall.codeResponse code_info = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 1, PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.code_info_)}},
    // .MonitorWall.loginRequest login_res = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 2, PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.login_res_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
    {PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.block_stream_info_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.codeResponse code_info = 2;
    {PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.code_info_), _Internal::kHasBitsOffset + 0, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .MonitorWall.loginRequest login_res = 3;
    {PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.login_res_), _Internal::kHasBitsOffset + 1, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::MonitorWall::blockStreamInfo>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::codeResponse>()},
    {::_pbi::TcParser::GetTable<::MonitorWall::loginRequest>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void windowSreamInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MonitorWall.windowSreamInfoResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.block_stream_info_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.code_info_ != nullptr);
      _impl_.code_info_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.login_res_ != nullptr);
      _impl_.login_res_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* windowSreamInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MonitorWall.windowSreamInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this->_internal_block_stream_info_size());
       i < n; i++) {
    const auto& repfield = this->_internal_block_stream_info().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .MonitorWall.codeResponse code_info = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, *_impl_.code_info_, _impl_.code_info_->GetCachedSize(), target, stream);
  }

  // .MonitorWall.loginRequest login_res = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *_impl_.login_res_, _impl_.login_res_->GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MonitorWall.windowSreamInfoResponse)
  return target;
}

::size_t windowSreamInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MonitorWall.windowSreamInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
  total_size += 1UL * this->_internal_block_stream_info_size();
  for (const auto& msg : this->_internal_block_stream_info()) {
    total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .MonitorWall.codeResponse code_info = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.code_info_);
    }

    // .MonitorWall.loginRequest login_res = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.login_res_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void windowSreamInfoResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<windowSreamInfoResponse*>(&to_msg);
  auto& from = static_cast<const windowSreamInfoResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:MonitorWall.windowSreamInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_block_stream_info()->MergeFrom(
      from._internal_block_stream_info());
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(from._impl_.code_info_ != nullptr);
      if (_this->_impl_.code_info_ == nullptr) {
        _this->_impl_.code_info_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::codeResponse>(arena, *from._impl_.code_info_);
      } else {
        _this->_impl_.code_info_->MergeFrom(*from._impl_.code_info_);
      }
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(from._impl_.login_res_ != nullptr);
      if (_this->_impl_.login_res_ == nullptr) {
        _this->_impl_.login_res_ =
            ::google::protobuf::Message::CopyConstruct<::MonitorWall::loginRequest>(arena, *from._impl_.login_res_);
      } else {
        _this->_impl_.login_res_->MergeFrom(*from._impl_.login_res_);
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void windowSreamInfoResponse::CopyFrom(const windowSreamInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MonitorWall.windowSreamInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void windowSreamInfoResponse::InternalSwap(windowSreamInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.block_stream_info_.InternalSwap(&other->_impl_.block_stream_info_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.login_res_)
      + sizeof(windowSreamInfoResponse::_impl_.login_res_)
      - PROTOBUF_FIELD_OFFSET(windowSreamInfoResponse, _impl_.code_info_)>(
          reinterpret_cast<char*>(&_impl_.code_info_),
          reinterpret_cast<char*>(&other->_impl_.code_info_));
}

::google::protobuf::Metadata windowSreamInfoResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace MonitorWall
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_MonitorWall_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
