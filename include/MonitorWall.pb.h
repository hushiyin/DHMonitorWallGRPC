// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: MonitorWall.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_MonitorWall_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_MonitorWall_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_MonitorWall_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_MonitorWall_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_MonitorWall_2eproto;
namespace MonitorWall {
class allWindowDisplayMesResponse;
struct allWindowDisplayMesResponseDefaultTypeInternal;
extern allWindowDisplayMesResponseDefaultTypeInternal _allWindowDisplayMesResponse_default_instance_;
class blockMes;
struct blockMesDefaultTypeInternal;
extern blockMesDefaultTypeInternal _blockMes_default_instance_;
class blockStreamInfo;
struct blockStreamInfoDefaultTypeInternal;
extern blockStreamInfoDefaultTypeInternal _blockStreamInfo_default_instance_;
class cameraMessage;
struct cameraMessageDefaultTypeInternal;
extern cameraMessageDefaultTypeInternal _cameraMessage_default_instance_;
class codeResponse;
struct codeResponseDefaultTypeInternal;
extern codeResponseDefaultTypeInternal _codeResponse_default_instance_;
class decoderOutTVNumResponse;
struct decoderOutTVNumResponseDefaultTypeInternal;
extern decoderOutTVNumResponseDefaultTypeInternal _decoderOutTVNumResponse_default_instance_;
class delSourceRequset;
struct delSourceRequsetDefaultTypeInternal;
extern delSourceRequsetDefaultTypeInternal _delSourceRequset_default_instance_;
class devMes;
struct devMesDefaultTypeInternal;
extern devMesDefaultTypeInternal _devMes_default_instance_;
class empty;
struct emptyDefaultTypeInternal;
extern emptyDefaultTypeInternal _empty_default_instance_;
class loginRequest;
struct loginRequestDefaultTypeInternal;
extern loginRequestDefaultTypeInternal _loginRequest_default_instance_;
class oneWindeosDispalyMes;
struct oneWindeosDispalyMesDefaultTypeInternal;
extern oneWindeosDispalyMesDefaultTypeInternal _oneWindeosDispalyMes_default_instance_;
class outTV;
struct outTVDefaultTypeInternal;
extern outTVDefaultTypeInternal _outTV_default_instance_;
class searchDevRequest;
struct searchDevRequestDefaultTypeInternal;
extern searchDevRequestDefaultTypeInternal _searchDevRequest_default_instance_;
class setSourceRequest;
struct setSourceRequestDefaultTypeInternal;
extern setSourceRequestDefaultTypeInternal _setSourceRequest_default_instance_;
class sourceCommonRequest;
struct sourceCommonRequestDefaultTypeInternal;
extern sourceCommonRequestDefaultTypeInternal _sourceCommonRequest_default_instance_;
class splitWindowRequest;
struct splitWindowRequestDefaultTypeInternal;
extern splitWindowRequestDefaultTypeInternal _splitWindowRequest_default_instance_;
class tvList;
struct tvListDefaultTypeInternal;
extern tvListDefaultTypeInternal _tvList_default_instance_;
class tvMesResponse;
struct tvMesResponseDefaultTypeInternal;
extern tvMesResponseDefaultTypeInternal _tvMesResponse_default_instance_;
class wallConfigRequest;
struct wallConfigRequestDefaultTypeInternal;
extern wallConfigRequestDefaultTypeInternal _wallConfigRequest_default_instance_;
class windowSreamInfoResponse;
struct windowSreamInfoResponseDefaultTypeInternal;
extern windowSreamInfoResponseDefaultTypeInternal _windowSreamInfoResponse_default_instance_;
class windowStreamInfo;
struct windowStreamInfoDefaultTypeInternal;
extern windowStreamInfoDefaultTypeInternal _windowStreamInfo_default_instance_;
}  // namespace MonitorWall
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace MonitorWall {

// ===================================================================


// -------------------------------------------------------------------

class windowStreamInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.windowStreamInfo) */ {
 public:
  inline windowStreamInfo() : windowStreamInfo(nullptr) {}
  ~windowStreamInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR windowStreamInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline windowStreamInfo(const windowStreamInfo& from) : windowStreamInfo(nullptr, from) {}
  inline windowStreamInfo(windowStreamInfo&& from) noexcept
      : windowStreamInfo(nullptr, std::move(from)) {}
  inline windowStreamInfo& operator=(const windowStreamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline windowStreamInfo& operator=(windowStreamInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const windowStreamInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const windowStreamInfo* internal_default_instance() {
    return reinterpret_cast<const windowStreamInfo*>(
        &_windowStreamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 18;
  friend void swap(windowStreamInfo& a, windowStreamInfo& b) { a.Swap(&b); }
  inline void Swap(windowStreamInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(windowStreamInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  windowStreamInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<windowStreamInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const windowStreamInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const windowStreamInfo& from) { windowStreamInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(windowStreamInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.windowStreamInfo"; }

 protected:
  explicit windowStreamInfo(::google::protobuf::Arena* arena);
  windowStreamInfo(::google::protobuf::Arena* arena, const windowStreamInfo& from);
  windowStreamInfo(::google::protobuf::Arena* arena, windowStreamInfo&& from) noexcept
      : windowStreamInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResolutionFieldNumber = 4,
    kCompressionFieldNumber = 5,
    kWindowIdFieldNumber = 1,
    kBitRateFieldNumber = 2,
    kFrameRateFieldNumber = 3,
  };
  // string resolution = 4;
  void clear_resolution() ;
  const std::string& resolution() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resolution(Arg_&& arg, Args_... args);
  std::string* mutable_resolution();
  PROTOBUF_NODISCARD std::string* release_resolution();
  void set_allocated_resolution(std::string* value);

  private:
  const std::string& _internal_resolution() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resolution(
      const std::string& value);
  std::string* _internal_mutable_resolution();

  public:
  // string compression = 5;
  void clear_compression() ;
  const std::string& compression() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_compression(Arg_&& arg, Args_... args);
  std::string* mutable_compression();
  PROTOBUF_NODISCARD std::string* release_compression();
  void set_allocated_compression(std::string* value);

  private:
  const std::string& _internal_compression() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_compression(
      const std::string& value);
  std::string* _internal_mutable_compression();

  public:
  // int32 window_id = 1;
  void clear_window_id() ;
  ::int32_t window_id() const;
  void set_window_id(::int32_t value);

  private:
  ::int32_t _internal_window_id() const;
  void _internal_set_window_id(::int32_t value);

  public:
  // int32 bit_rate = 2;
  void clear_bit_rate() ;
  ::int32_t bit_rate() const;
  void set_bit_rate(::int32_t value);

  private:
  ::int32_t _internal_bit_rate() const;
  void _internal_set_bit_rate(::int32_t value);

  public:
  // int32 frame_rate = 3;
  void clear_frame_rate() ;
  ::int32_t frame_rate() const;
  void set_frame_rate(::int32_t value);

  private:
  ::int32_t _internal_frame_rate() const;
  void _internal_set_frame_rate(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.windowStreamInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      58, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_windowStreamInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const windowStreamInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr resolution_;
    ::google::protobuf::internal::ArenaStringPtr compression_;
    ::int32_t window_id_;
    ::int32_t bit_rate_;
    ::int32_t frame_rate_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class tvList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.tvList) */ {
 public:
  inline tvList() : tvList(nullptr) {}
  ~tvList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR tvList(
      ::google::protobuf::internal::ConstantInitialized);

  inline tvList(const tvList& from) : tvList(nullptr, from) {}
  inline tvList(tvList&& from) noexcept
      : tvList(nullptr, std::move(from)) {}
  inline tvList& operator=(const tvList& from) {
    CopyFrom(from);
    return *this;
  }
  inline tvList& operator=(tvList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const tvList& default_instance() {
    return *internal_default_instance();
  }
  static inline const tvList* internal_default_instance() {
    return reinterpret_cast<const tvList*>(
        &_tvList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(tvList& a, tvList& b) { a.Swap(&b); }
  inline void Swap(tvList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(tvList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  tvList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<tvList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const tvList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const tvList& from) { tvList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(tvList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.tvList"; }

 protected:
  explicit tvList(::google::protobuf::Arena* arena);
  tvList(::google::protobuf::Arena* arena, const tvList& from);
  tvList(::google::protobuf::Arena* arena, tvList&& from) noexcept
      : tvList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutTvIdFieldNumber = 1,
    kIsBindFieldNumber = 2,
    kBlockLineFieldNumber = 3,
    kBlockColFieldNumber = 4,
  };
  // int32 out_tv_id = 1;
  void clear_out_tv_id() ;
  ::int32_t out_tv_id() const;
  void set_out_tv_id(::int32_t value);

  private:
  ::int32_t _internal_out_tv_id() const;
  void _internal_set_out_tv_id(::int32_t value);

  public:
  // bool is_bind = 2;
  void clear_is_bind() ;
  bool is_bind() const;
  void set_is_bind(bool value);

  private:
  bool _internal_is_bind() const;
  void _internal_set_is_bind(bool value);

  public:
  // int32 block_line = 3;
  void clear_block_line() ;
  ::int32_t block_line() const;
  void set_block_line(::int32_t value);

  private:
  ::int32_t _internal_block_line() const;
  void _internal_set_block_line(::int32_t value);

  public:
  // int32 block_col = 4;
  void clear_block_col() ;
  ::int32_t block_col() const;
  void set_block_col(::int32_t value);

  private:
  ::int32_t _internal_block_col() const;
  void _internal_set_block_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.tvList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_tvList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const tvList& from_msg);
    ::int32_t out_tv_id_;
    bool is_bind_;
    ::int32_t block_line_;
    ::int32_t block_col_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class sourceCommonRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.sourceCommonRequest) */ {
 public:
  inline sourceCommonRequest() : sourceCommonRequest(nullptr) {}
  ~sourceCommonRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR sourceCommonRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline sourceCommonRequest(const sourceCommonRequest& from) : sourceCommonRequest(nullptr, from) {}
  inline sourceCommonRequest(sourceCommonRequest&& from) noexcept
      : sourceCommonRequest(nullptr, std::move(from)) {}
  inline sourceCommonRequest& operator=(const sourceCommonRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline sourceCommonRequest& operator=(sourceCommonRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const sourceCommonRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const sourceCommonRequest* internal_default_instance() {
    return reinterpret_cast<const sourceCommonRequest*>(
        &_sourceCommonRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(sourceCommonRequest& a, sourceCommonRequest& b) { a.Swap(&b); }
  inline void Swap(sourceCommonRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(sourceCommonRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  sourceCommonRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<sourceCommonRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const sourceCommonRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const sourceCommonRequest& from) { sourceCommonRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(sourceCommonRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.sourceCommonRequest"; }

 protected:
  explicit sourceCommonRequest(::google::protobuf::Arena* arena);
  sourceCommonRequest(::google::protobuf::Arena* arena, const sourceCommonRequest& from);
  sourceCommonRequest(::google::protobuf::Arena* arena, sourceCommonRequest&& from) noexcept
      : sourceCommonRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChannelIdFieldNumber = 1,
    kWindowIdFieldNumber = 2,
  };
  // int32 channel_id = 1;
  void clear_channel_id() ;
  ::int32_t channel_id() const;
  void set_channel_id(::int32_t value);

  private:
  ::int32_t _internal_channel_id() const;
  void _internal_set_channel_id(::int32_t value);

  public:
  // int32 window_id = 2;
  void clear_window_id() ;
  ::int32_t window_id() const;
  void set_window_id(::int32_t value);

  private:
  ::int32_t _internal_window_id() const;
  void _internal_set_window_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.sourceCommonRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_sourceCommonRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const sourceCommonRequest& from_msg);
    ::int32_t channel_id_;
    ::int32_t window_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class outTV final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.outTV) */ {
 public:
  inline outTV() : outTV(nullptr) {}
  ~outTV() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR outTV(
      ::google::protobuf::internal::ConstantInitialized);

  inline outTV(const outTV& from) : outTV(nullptr, from) {}
  inline outTV(outTV&& from) noexcept
      : outTV(nullptr, std::move(from)) {}
  inline outTV& operator=(const outTV& from) {
    CopyFrom(from);
    return *this;
  }
  inline outTV& operator=(outTV&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const outTV& default_instance() {
    return *internal_default_instance();
  }
  static inline const outTV* internal_default_instance() {
    return reinterpret_cast<const outTV*>(
        &_outTV_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(outTV& a, outTV& b) { a.Swap(&b); }
  inline void Swap(outTV* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(outTV* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  outTV* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<outTV>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const outTV& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const outTV& from) { outTV::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(outTV* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.outTV"; }

 protected:
  explicit outTV(::google::protobuf::Arena* arena);
  outTV(::google::protobuf::Arena* arena, const outTV& from);
  outTV(::google::protobuf::Arena* arena, outTV&& from) noexcept
      : outTV(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTvNameFieldNumber = 1,
    kCnannelIdFieldNumber = 2,
  };
  // string tv_name = 1;
  void clear_tv_name() ;
  const std::string& tv_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_tv_name(Arg_&& arg, Args_... args);
  std::string* mutable_tv_name();
  PROTOBUF_NODISCARD std::string* release_tv_name();
  void set_allocated_tv_name(std::string* value);

  private:
  const std::string& _internal_tv_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_tv_name(
      const std::string& value);
  std::string* _internal_mutable_tv_name();

  public:
  // int32 cnannel_id = 2;
  void clear_cnannel_id() ;
  ::int32_t cnannel_id() const;
  void set_cnannel_id(::int32_t value);

  private:
  ::int32_t _internal_cnannel_id() const;
  void _internal_set_cnannel_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.outTV)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      33, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_outTV_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const outTV& from_msg);
    ::google::protobuf::internal::ArenaStringPtr tv_name_;
    ::int32_t cnannel_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class loginRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.loginRequest) */ {
 public:
  inline loginRequest() : loginRequest(nullptr) {}
  ~loginRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR loginRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline loginRequest(const loginRequest& from) : loginRequest(nullptr, from) {}
  inline loginRequest(loginRequest&& from) noexcept
      : loginRequest(nullptr, std::move(from)) {}
  inline loginRequest& operator=(const loginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline loginRequest& operator=(loginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const loginRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const loginRequest* internal_default_instance() {
    return reinterpret_cast<const loginRequest*>(
        &_loginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(loginRequest& a, loginRequest& b) { a.Swap(&b); }
  inline void Swap(loginRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(loginRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  loginRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<loginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const loginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const loginRequest& from) { loginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(loginRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.loginRequest"; }

 protected:
  explicit loginRequest(::google::protobuf::Arena* arena);
  loginRequest(::google::protobuf::Arena* arena, const loginRequest& from);
  loginRequest(::google::protobuf::Arena* arena, loginRequest&& from) noexcept
      : loginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDecoderIpFieldNumber = 1,
    kDecoderUsernameFieldNumber = 3,
    kDecoderPwdFieldNumber = 4,
    kDecoderPortFieldNumber = 2,
  };
  // string decoder_ip = 1;
  void clear_decoder_ip() ;
  const std::string& decoder_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_decoder_ip(Arg_&& arg, Args_... args);
  std::string* mutable_decoder_ip();
  PROTOBUF_NODISCARD std::string* release_decoder_ip();
  void set_allocated_decoder_ip(std::string* value);

  private:
  const std::string& _internal_decoder_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decoder_ip(
      const std::string& value);
  std::string* _internal_mutable_decoder_ip();

  public:
  // string decoder_username = 3;
  void clear_decoder_username() ;
  const std::string& decoder_username() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_decoder_username(Arg_&& arg, Args_... args);
  std::string* mutable_decoder_username();
  PROTOBUF_NODISCARD std::string* release_decoder_username();
  void set_allocated_decoder_username(std::string* value);

  private:
  const std::string& _internal_decoder_username() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decoder_username(
      const std::string& value);
  std::string* _internal_mutable_decoder_username();

  public:
  // string decoder_pwd = 4;
  void clear_decoder_pwd() ;
  const std::string& decoder_pwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_decoder_pwd(Arg_&& arg, Args_... args);
  std::string* mutable_decoder_pwd();
  PROTOBUF_NODISCARD std::string* release_decoder_pwd();
  void set_allocated_decoder_pwd(std::string* value);

  private:
  const std::string& _internal_decoder_pwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_decoder_pwd(
      const std::string& value);
  std::string* _internal_mutable_decoder_pwd();

  public:
  // uint32 decoder_port = 2;
  void clear_decoder_port() ;
  ::uint32_t decoder_port() const;
  void set_decoder_port(::uint32_t value);

  private:
  ::uint32_t _internal_decoder_port() const;
  void _internal_set_decoder_port(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.loginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_loginRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const loginRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr decoder_ip_;
    ::google::protobuf::internal::ArenaStringPtr decoder_username_;
    ::google::protobuf::internal::ArenaStringPtr decoder_pwd_;
    ::uint32_t decoder_port_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class empty final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:MonitorWall.empty) */ {
 public:
  inline empty() : empty(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR empty(
      ::google::protobuf::internal::ConstantInitialized);

  inline empty(const empty& from) : empty(nullptr, from) {}
  inline empty(empty&& from) noexcept
      : empty(nullptr, std::move(from)) {}
  inline empty& operator=(const empty& from) {
    CopyFrom(from);
    return *this;
  }
  inline empty& operator=(empty&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const empty& default_instance() {
    return *internal_default_instance();
  }
  static inline const empty* internal_default_instance() {
    return reinterpret_cast<const empty*>(
        &_empty_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(empty& a, empty& b) { a.Swap(&b); }
  inline void Swap(empty* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(empty* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  empty* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<empty>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const empty& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.empty"; }

 protected:
  explicit empty(::google::protobuf::Arena* arena);
  empty(::google::protobuf::Arena* arena, const empty& from);
  empty(::google::protobuf::Arena* arena, empty&& from) noexcept
      : empty(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:MonitorWall.empty)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_empty_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const empty& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class devMes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.devMes) */ {
 public:
  inline devMes() : devMes(nullptr) {}
  ~devMes() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR devMes(
      ::google::protobuf::internal::ConstantInitialized);

  inline devMes(const devMes& from) : devMes(nullptr, from) {}
  inline devMes(devMes&& from) noexcept
      : devMes(nullptr, std::move(from)) {}
  inline devMes& operator=(const devMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline devMes& operator=(devMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const devMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const devMes* internal_default_instance() {
    return reinterpret_cast<const devMes*>(
        &_devMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(devMes& a, devMes& b) { a.Swap(&b); }
  inline void Swap(devMes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(devMes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  devMes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<devMes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const devMes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const devMes& from) { devMes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(devMes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.devMes"; }

 protected:
  explicit devMes(::google::protobuf::Arena* arena);
  devMes(::google::protobuf::Arena* arena, const devMes& from);
  devMes(::google::protobuf::Arena* arena, devMes&& from) noexcept
      : devMes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevIpFieldNumber = 1,
    kDevUserFieldNumber = 3,
    kDevPwdFieldNumber = 4,
    kDevPortFieldNumber = 2,
    kDevChannelIdFieldNumber = 5,
  };
  // string dev_ip = 1;
  void clear_dev_ip() ;
  const std::string& dev_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dev_ip(Arg_&& arg, Args_... args);
  std::string* mutable_dev_ip();
  PROTOBUF_NODISCARD std::string* release_dev_ip();
  void set_allocated_dev_ip(std::string* value);

  private:
  const std::string& _internal_dev_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dev_ip(
      const std::string& value);
  std::string* _internal_mutable_dev_ip();

  public:
  // string dev_user = 3;
  void clear_dev_user() ;
  const std::string& dev_user() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dev_user(Arg_&& arg, Args_... args);
  std::string* mutable_dev_user();
  PROTOBUF_NODISCARD std::string* release_dev_user();
  void set_allocated_dev_user(std::string* value);

  private:
  const std::string& _internal_dev_user() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dev_user(
      const std::string& value);
  std::string* _internal_mutable_dev_user();

  public:
  // string dev_pwd = 4;
  void clear_dev_pwd() ;
  const std::string& dev_pwd() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_dev_pwd(Arg_&& arg, Args_... args);
  std::string* mutable_dev_pwd();
  PROTOBUF_NODISCARD std::string* release_dev_pwd();
  void set_allocated_dev_pwd(std::string* value);

  private:
  const std::string& _internal_dev_pwd() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_dev_pwd(
      const std::string& value);
  std::string* _internal_mutable_dev_pwd();

  public:
  // int32 dev_port = 2;
  void clear_dev_port() ;
  ::int32_t dev_port() const;
  void set_dev_port(::int32_t value);

  private:
  ::int32_t _internal_dev_port() const;
  void _internal_set_dev_port(::int32_t value);

  public:
  // int32 dev_channel_id = 5;
  void clear_dev_channel_id() ;
  ::int32_t dev_channel_id() const;
  void set_dev_channel_id(::int32_t value);

  private:
  ::int32_t _internal_dev_channel_id() const;
  void _internal_set_dev_channel_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.devMes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_devMes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const devMes& from_msg);
    ::google::protobuf::internal::ArenaStringPtr dev_ip_;
    ::google::protobuf::internal::ArenaStringPtr dev_user_;
    ::google::protobuf::internal::ArenaStringPtr dev_pwd_;
    ::int32_t dev_port_;
    ::int32_t dev_channel_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class codeResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.codeResponse) */ {
 public:
  inline codeResponse() : codeResponse(nullptr) {}
  ~codeResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR codeResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline codeResponse(const codeResponse& from) : codeResponse(nullptr, from) {}
  inline codeResponse(codeResponse&& from) noexcept
      : codeResponse(nullptr, std::move(from)) {}
  inline codeResponse& operator=(const codeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline codeResponse& operator=(codeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const codeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const codeResponse* internal_default_instance() {
    return reinterpret_cast<const codeResponse*>(
        &_codeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(codeResponse& a, codeResponse& b) { a.Swap(&b); }
  inline void Swap(codeResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(codeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  codeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<codeResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const codeResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const codeResponse& from) { codeResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(codeResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.codeResponse"; }

 protected:
  explicit codeResponse(::google::protobuf::Arena* arena);
  codeResponse(::google::protobuf::Arena* arena, const codeResponse& from);
  codeResponse(::google::protobuf::Arena* arena, codeResponse&& from) noexcept
      : codeResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeDescribeFieldNumber = 2,
    kCodeFieldNumber = 1,
  };
  // string code_describe = 2;
  void clear_code_describe() ;
  const std::string& code_describe() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code_describe(Arg_&& arg, Args_... args);
  std::string* mutable_code_describe();
  PROTOBUF_NODISCARD std::string* release_code_describe();
  void set_allocated_code_describe(std::string* value);

  private:
  const std::string& _internal_code_describe() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code_describe(
      const std::string& value);
  std::string* _internal_mutable_code_describe();

  public:
  // int32 code = 1;
  void clear_code() ;
  ::int32_t code() const;
  void set_code(::int32_t value);

  private:
  ::int32_t _internal_code() const;
  void _internal_set_code(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.codeResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_codeResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const codeResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr code_describe_;
    ::int32_t code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class cameraMessage final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.cameraMessage) */ {
 public:
  inline cameraMessage() : cameraMessage(nullptr) {}
  ~cameraMessage() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR cameraMessage(
      ::google::protobuf::internal::ConstantInitialized);

  inline cameraMessage(const cameraMessage& from) : cameraMessage(nullptr, from) {}
  inline cameraMessage(cameraMessage&& from) noexcept
      : cameraMessage(nullptr, std::move(from)) {}
  inline cameraMessage& operator=(const cameraMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline cameraMessage& operator=(cameraMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const cameraMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const cameraMessage* internal_default_instance() {
    return reinterpret_cast<const cameraMessage*>(
        &_cameraMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 15;
  friend void swap(cameraMessage& a, cameraMessage& b) { a.Swap(&b); }
  inline void Swap(cameraMessage* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(cameraMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  cameraMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<cameraMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const cameraMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const cameraMessage& from) { cameraMessage::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(cameraMessage* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.cameraMessage"; }

 protected:
  explicit cameraMessage(::google::protobuf::Arena* arena);
  cameraMessage(::google::protobuf::Arena* arena, const cameraMessage& from);
  cameraMessage(::google::protobuf::Arena* arena, cameraMessage&& from) noexcept
      : cameraMessage(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCameraNameFieldNumber = 1,
    kCameraIpFieldNumber = 3,
    kStreamTypeFieldNumber = 2,
    kCameraChannelFieldNumber = 4,
    kWinIdFieldNumber = 5,
  };
  // string camera_name = 1;
  void clear_camera_name() ;
  const std::string& camera_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_name(Arg_&& arg, Args_... args);
  std::string* mutable_camera_name();
  PROTOBUF_NODISCARD std::string* release_camera_name();
  void set_allocated_camera_name(std::string* value);

  private:
  const std::string& _internal_camera_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_name(
      const std::string& value);
  std::string* _internal_mutable_camera_name();

  public:
  // string camera_ip = 3;
  void clear_camera_ip() ;
  const std::string& camera_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_camera_ip(Arg_&& arg, Args_... args);
  std::string* mutable_camera_ip();
  PROTOBUF_NODISCARD std::string* release_camera_ip();
  void set_allocated_camera_ip(std::string* value);

  private:
  const std::string& _internal_camera_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_camera_ip(
      const std::string& value);
  std::string* _internal_mutable_camera_ip();

  public:
  // int32 stream_type = 2;
  void clear_stream_type() ;
  ::int32_t stream_type() const;
  void set_stream_type(::int32_t value);

  private:
  ::int32_t _internal_stream_type() const;
  void _internal_set_stream_type(::int32_t value);

  public:
  // int32 camera_channel = 4;
  void clear_camera_channel() ;
  ::int32_t camera_channel() const;
  void set_camera_channel(::int32_t value);

  private:
  ::int32_t _internal_camera_channel() const;
  void _internal_set_camera_channel(::int32_t value);

  public:
  // int32 win_id = 5;
  void clear_win_id() ;
  ::int32_t win_id() const;
  void set_win_id(::int32_t value);

  private:
  ::int32_t _internal_win_id() const;
  void _internal_set_win_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.cameraMessage)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_cameraMessage_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const cameraMessage& from_msg);
    ::google::protobuf::internal::ArenaStringPtr camera_name_;
    ::google::protobuf::internal::ArenaStringPtr camera_ip_;
    ::int32_t stream_type_;
    ::int32_t camera_channel_;
    ::int32_t win_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class blockMes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.blockMes) */ {
 public:
  inline blockMes() : blockMes(nullptr) {}
  ~blockMes() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR blockMes(
      ::google::protobuf::internal::ConstantInitialized);

  inline blockMes(const blockMes& from) : blockMes(nullptr, from) {}
  inline blockMes(blockMes&& from) noexcept
      : blockMes(nullptr, std::move(from)) {}
  inline blockMes& operator=(const blockMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline blockMes& operator=(blockMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const blockMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const blockMes* internal_default_instance() {
    return reinterpret_cast<const blockMes*>(
        &_blockMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(blockMes& a, blockMes& b) { a.Swap(&b); }
  inline void Swap(blockMes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(blockMes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  blockMes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<blockMes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const blockMes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const blockMes& from) { blockMes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(blockMes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.blockMes"; }

 protected:
  explicit blockMes(::google::protobuf::Arena* arena);
  blockMes(::google::protobuf::Arena* arena, const blockMes& from);
  blockMes(::google::protobuf::Arena* arena, blockMes&& from) noexcept
      : blockMes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBindLineFieldNumber = 1,
    kBindColFieldNumber = 2,
    kBindChFieldNumber = 3,
  };
  // int32 bind_line = 1;
  void clear_bind_line() ;
  ::int32_t bind_line() const;
  void set_bind_line(::int32_t value);

  private:
  ::int32_t _internal_bind_line() const;
  void _internal_set_bind_line(::int32_t value);

  public:
  // int32 bind_col = 2;
  void clear_bind_col() ;
  ::int32_t bind_col() const;
  void set_bind_col(::int32_t value);

  private:
  ::int32_t _internal_bind_col() const;
  void _internal_set_bind_col(::int32_t value);

  public:
  // int32 bind_ch = 3;
  void clear_bind_ch() ;
  ::int32_t bind_ch() const;
  void set_bind_ch(::int32_t value);

  private:
  ::int32_t _internal_bind_ch() const;
  void _internal_set_bind_ch(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.blockMes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_blockMes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const blockMes& from_msg);
    ::int32_t bind_line_;
    ::int32_t bind_col_;
    ::int32_t bind_ch_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class wallConfigRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.wallConfigRequest) */ {
 public:
  inline wallConfigRequest() : wallConfigRequest(nullptr) {}
  ~wallConfigRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR wallConfigRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline wallConfigRequest(const wallConfigRequest& from) : wallConfigRequest(nullptr, from) {}
  inline wallConfigRequest(wallConfigRequest&& from) noexcept
      : wallConfigRequest(nullptr, std::move(from)) {}
  inline wallConfigRequest& operator=(const wallConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline wallConfigRequest& operator=(wallConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const wallConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const wallConfigRequest* internal_default_instance() {
    return reinterpret_cast<const wallConfigRequest*>(
        &_wallConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(wallConfigRequest& a, wallConfigRequest& b) { a.Swap(&b); }
  inline void Swap(wallConfigRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(wallConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  wallConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<wallConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const wallConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const wallConfigRequest& from) { wallConfigRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(wallConfigRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.wallConfigRequest"; }

 protected:
  explicit wallConfigRequest(::google::protobuf::Arena* arena);
  wallConfigRequest(::google::protobuf::Arena* arena, const wallConfigRequest& from);
  wallConfigRequest(::google::protobuf::Arena* arena, wallConfigRequest&& from) noexcept
      : wallConfigRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockFieldNumber = 2,
    kLoginResFieldNumber = 3,
    kBlockNumFieldNumber = 1,
  };
  // repeated .MonitorWall.blockMes block = 2;
  int block_size() const;
  private:
  int _internal_block_size() const;

  public:
  void clear_block() ;
  ::MonitorWall::blockMes* mutable_block(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>* mutable_block();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>& _internal_block() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>* _internal_mutable_block();
  public:
  const ::MonitorWall::blockMes& block(int index) const;
  ::MonitorWall::blockMes* add_block();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>& block() const;
  // .MonitorWall.loginRequest login_res = 3;
  bool has_login_res() const;
  void clear_login_res() ;
  const ::MonitorWall::loginRequest& login_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::loginRequest* release_login_res();
  ::MonitorWall::loginRequest* mutable_login_res();
  void set_allocated_login_res(::MonitorWall::loginRequest* value);
  void unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value);
  ::MonitorWall::loginRequest* unsafe_arena_release_login_res();

  private:
  const ::MonitorWall::loginRequest& _internal_login_res() const;
  ::MonitorWall::loginRequest* _internal_mutable_login_res();

  public:
  // int32 block_num = 1;
  void clear_block_num() ;
  ::int32_t block_num() const;
  void set_block_num(::int32_t value);

  private:
  ::int32_t _internal_block_num() const;
  void _internal_set_block_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.wallConfigRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_wallConfigRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const wallConfigRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::blockMes > block_;
    ::MonitorWall::loginRequest* login_res_;
    ::int32_t block_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class tvMesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.tvMesResponse) */ {
 public:
  inline tvMesResponse() : tvMesResponse(nullptr) {}
  ~tvMesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR tvMesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline tvMesResponse(const tvMesResponse& from) : tvMesResponse(nullptr, from) {}
  inline tvMesResponse(tvMesResponse&& from) noexcept
      : tvMesResponse(nullptr, std::move(from)) {}
  inline tvMesResponse& operator=(const tvMesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline tvMesResponse& operator=(tvMesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const tvMesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const tvMesResponse* internal_default_instance() {
    return reinterpret_cast<const tvMesResponse*>(
        &_tvMesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(tvMesResponse& a, tvMesResponse& b) { a.Swap(&b); }
  inline void Swap(tvMesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(tvMesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  tvMesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<tvMesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const tvMesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const tvMesResponse& from) { tvMesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(tvMesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.tvMesResponse"; }

 protected:
  explicit tvMesResponse(::google::protobuf::Arena* arena);
  tvMesResponse(::google::protobuf::Arena* arena, const tvMesResponse& from);
  tvMesResponse(::google::protobuf::Arena* arena, tvMesResponse&& from) noexcept
      : tvMesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTvListFieldNumber = 1,
    kCodeInfoFieldNumber = 2,
  };
  // repeated .MonitorWall.tvList tv_list = 1;
  int tv_list_size() const;
  private:
  int _internal_tv_list_size() const;

  public:
  void clear_tv_list() ;
  ::MonitorWall::tvList* mutable_tv_list(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>* mutable_tv_list();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>& _internal_tv_list() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>* _internal_mutable_tv_list();
  public:
  const ::MonitorWall::tvList& tv_list(int index) const;
  ::MonitorWall::tvList* add_tv_list();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>& tv_list() const;
  // .MonitorWall.codeResponse code_info = 2;
  bool has_code_info() const;
  void clear_code_info() ;
  const ::MonitorWall::codeResponse& code_info() const;
  PROTOBUF_NODISCARD ::MonitorWall::codeResponse* release_code_info();
  ::MonitorWall::codeResponse* mutable_code_info();
  void set_allocated_code_info(::MonitorWall::codeResponse* value);
  void unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value);
  ::MonitorWall::codeResponse* unsafe_arena_release_code_info();

  private:
  const ::MonitorWall::codeResponse& _internal_code_info() const;
  ::MonitorWall::codeResponse* _internal_mutable_code_info();

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.tvMesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_tvMesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const tvMesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::tvList > tv_list_;
    ::MonitorWall::codeResponse* code_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class splitWindowRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.splitWindowRequest) */ {
 public:
  inline splitWindowRequest() : splitWindowRequest(nullptr) {}
  ~splitWindowRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR splitWindowRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline splitWindowRequest(const splitWindowRequest& from) : splitWindowRequest(nullptr, from) {}
  inline splitWindowRequest(splitWindowRequest&& from) noexcept
      : splitWindowRequest(nullptr, std::move(from)) {}
  inline splitWindowRequest& operator=(const splitWindowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline splitWindowRequest& operator=(splitWindowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const splitWindowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const splitWindowRequest* internal_default_instance() {
    return reinterpret_cast<const splitWindowRequest*>(
        &_splitWindowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(splitWindowRequest& a, splitWindowRequest& b) { a.Swap(&b); }
  inline void Swap(splitWindowRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(splitWindowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  splitWindowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<splitWindowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const splitWindowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const splitWindowRequest& from) { splitWindowRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(splitWindowRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.splitWindowRequest"; }

 protected:
  explicit splitWindowRequest(::google::protobuf::Arena* arena);
  splitWindowRequest(::google::protobuf::Arena* arena, const splitWindowRequest& from);
  splitWindowRequest(::google::protobuf::Arena* arena, splitWindowRequest&& from) noexcept
      : splitWindowRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLoginResFieldNumber = 3,
    kTvIdFieldNumber = 1,
    kSpiltNumFieldNumber = 2,
  };
  // .MonitorWall.loginRequest login_res = 3;
  bool has_login_res() const;
  void clear_login_res() ;
  const ::MonitorWall::loginRequest& login_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::loginRequest* release_login_res();
  ::MonitorWall::loginRequest* mutable_login_res();
  void set_allocated_login_res(::MonitorWall::loginRequest* value);
  void unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value);
  ::MonitorWall::loginRequest* unsafe_arena_release_login_res();

  private:
  const ::MonitorWall::loginRequest& _internal_login_res() const;
  ::MonitorWall::loginRequest* _internal_mutable_login_res();

  public:
  // int32 tv_id = 1;
  void clear_tv_id() ;
  ::int32_t tv_id() const;
  void set_tv_id(::int32_t value);

  private:
  ::int32_t _internal_tv_id() const;
  void _internal_set_tv_id(::int32_t value);

  public:
  // int32 spilt_num = 2;
  void clear_spilt_num() ;
  ::int32_t spilt_num() const;
  void set_spilt_num(::int32_t value);

  private:
  ::int32_t _internal_spilt_num() const;
  void _internal_set_spilt_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.splitWindowRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_splitWindowRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const splitWindowRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::MonitorWall::loginRequest* login_res_;
    ::int32_t tv_id_;
    ::int32_t spilt_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class setSourceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.setSourceRequest) */ {
 public:
  inline setSourceRequest() : setSourceRequest(nullptr) {}
  ~setSourceRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR setSourceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline setSourceRequest(const setSourceRequest& from) : setSourceRequest(nullptr, from) {}
  inline setSourceRequest(setSourceRequest&& from) noexcept
      : setSourceRequest(nullptr, std::move(from)) {}
  inline setSourceRequest& operator=(const setSourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline setSourceRequest& operator=(setSourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const setSourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const setSourceRequest* internal_default_instance() {
    return reinterpret_cast<const setSourceRequest*>(
        &_setSourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(setSourceRequest& a, setSourceRequest& b) { a.Swap(&b); }
  inline void Swap(setSourceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(setSourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  setSourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<setSourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const setSourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const setSourceRequest& from) { setSourceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(setSourceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.setSourceRequest"; }

 protected:
  explicit setSourceRequest(::google::protobuf::Arena* arena);
  setSourceRequest(::google::protobuf::Arena* arena, const setSourceRequest& from);
  setSourceRequest(::google::protobuf::Arena* arena, setSourceRequest&& from) noexcept
      : setSourceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLoginResFieldNumber = 1,
    kSourceResFieldNumber = 2,
    kDevMesFieldNumber = 3,
  };
  // .MonitorWall.loginRequest login_res = 1;
  bool has_login_res() const;
  void clear_login_res() ;
  const ::MonitorWall::loginRequest& login_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::loginRequest* release_login_res();
  ::MonitorWall::loginRequest* mutable_login_res();
  void set_allocated_login_res(::MonitorWall::loginRequest* value);
  void unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value);
  ::MonitorWall::loginRequest* unsafe_arena_release_login_res();

  private:
  const ::MonitorWall::loginRequest& _internal_login_res() const;
  ::MonitorWall::loginRequest* _internal_mutable_login_res();

  public:
  // .MonitorWall.sourceCommonRequest source_res = 2;
  bool has_source_res() const;
  void clear_source_res() ;
  const ::MonitorWall::sourceCommonRequest& source_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::sourceCommonRequest* release_source_res();
  ::MonitorWall::sourceCommonRequest* mutable_source_res();
  void set_allocated_source_res(::MonitorWall::sourceCommonRequest* value);
  void unsafe_arena_set_allocated_source_res(::MonitorWall::sourceCommonRequest* value);
  ::MonitorWall::sourceCommonRequest* unsafe_arena_release_source_res();

  private:
  const ::MonitorWall::sourceCommonRequest& _internal_source_res() const;
  ::MonitorWall::sourceCommonRequest* _internal_mutable_source_res();

  public:
  // .MonitorWall.devMes dev_mes = 3;
  bool has_dev_mes() const;
  void clear_dev_mes() ;
  const ::MonitorWall::devMes& dev_mes() const;
  PROTOBUF_NODISCARD ::MonitorWall::devMes* release_dev_mes();
  ::MonitorWall::devMes* mutable_dev_mes();
  void set_allocated_dev_mes(::MonitorWall::devMes* value);
  void unsafe_arena_set_allocated_dev_mes(::MonitorWall::devMes* value);
  ::MonitorWall::devMes* unsafe_arena_release_dev_mes();

  private:
  const ::MonitorWall::devMes& _internal_dev_mes() const;
  ::MonitorWall::devMes* _internal_mutable_dev_mes();

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.setSourceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_setSourceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const setSourceRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::MonitorWall::loginRequest* login_res_;
    ::MonitorWall::sourceCommonRequest* source_res_;
    ::MonitorWall::devMes* dev_mes_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class searchDevRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.searchDevRequest) */ {
 public:
  inline searchDevRequest() : searchDevRequest(nullptr) {}
  ~searchDevRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR searchDevRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline searchDevRequest(const searchDevRequest& from) : searchDevRequest(nullptr, from) {}
  inline searchDevRequest(searchDevRequest&& from) noexcept
      : searchDevRequest(nullptr, std::move(from)) {}
  inline searchDevRequest& operator=(const searchDevRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline searchDevRequest& operator=(searchDevRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const searchDevRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const searchDevRequest* internal_default_instance() {
    return reinterpret_cast<const searchDevRequest*>(
        &_searchDevRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(searchDevRequest& a, searchDevRequest& b) { a.Swap(&b); }
  inline void Swap(searchDevRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(searchDevRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  searchDevRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<searchDevRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const searchDevRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const searchDevRequest& from) { searchDevRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(searchDevRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.searchDevRequest"; }

 protected:
  explicit searchDevRequest(::google::protobuf::Arena* arena);
  searchDevRequest(::google::protobuf::Arena* arena, const searchDevRequest& from);
  searchDevRequest(::google::protobuf::Arena* arena, searchDevRequest&& from) noexcept
      : searchDevRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDevMesFieldNumber = 1,
    kCodeInfoFieldNumber = 2,
  };
  // repeated .MonitorWall.devMes dev_mes = 1;
  int dev_mes_size() const;
  private:
  int _internal_dev_mes_size() const;

  public:
  void clear_dev_mes() ;
  ::MonitorWall::devMes* mutable_dev_mes(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>* mutable_dev_mes();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>& _internal_dev_mes() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>* _internal_mutable_dev_mes();
  public:
  const ::MonitorWall::devMes& dev_mes(int index) const;
  ::MonitorWall::devMes* add_dev_mes();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>& dev_mes() const;
  // .MonitorWall.codeResponse code_info = 2;
  bool has_code_info() const;
  void clear_code_info() ;
  const ::MonitorWall::codeResponse& code_info() const;
  PROTOBUF_NODISCARD ::MonitorWall::codeResponse* release_code_info();
  ::MonitorWall::codeResponse* mutable_code_info();
  void set_allocated_code_info(::MonitorWall::codeResponse* value);
  void unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value);
  ::MonitorWall::codeResponse* unsafe_arena_release_code_info();

  private:
  const ::MonitorWall::codeResponse& _internal_code_info() const;
  ::MonitorWall::codeResponse* _internal_mutable_code_info();

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.searchDevRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_searchDevRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const searchDevRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::devMes > dev_mes_;
    ::MonitorWall::codeResponse* code_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class oneWindeosDispalyMes final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.oneWindeosDispalyMes) */ {
 public:
  inline oneWindeosDispalyMes() : oneWindeosDispalyMes(nullptr) {}
  ~oneWindeosDispalyMes() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR oneWindeosDispalyMes(
      ::google::protobuf::internal::ConstantInitialized);

  inline oneWindeosDispalyMes(const oneWindeosDispalyMes& from) : oneWindeosDispalyMes(nullptr, from) {}
  inline oneWindeosDispalyMes(oneWindeosDispalyMes&& from) noexcept
      : oneWindeosDispalyMes(nullptr, std::move(from)) {}
  inline oneWindeosDispalyMes& operator=(const oneWindeosDispalyMes& from) {
    CopyFrom(from);
    return *this;
  }
  inline oneWindeosDispalyMes& operator=(oneWindeosDispalyMes&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const oneWindeosDispalyMes& default_instance() {
    return *internal_default_instance();
  }
  static inline const oneWindeosDispalyMes* internal_default_instance() {
    return reinterpret_cast<const oneWindeosDispalyMes*>(
        &_oneWindeosDispalyMes_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 16;
  friend void swap(oneWindeosDispalyMes& a, oneWindeosDispalyMes& b) { a.Swap(&b); }
  inline void Swap(oneWindeosDispalyMes* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(oneWindeosDispalyMes* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  oneWindeosDispalyMes* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<oneWindeosDispalyMes>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const oneWindeosDispalyMes& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const oneWindeosDispalyMes& from) { oneWindeosDispalyMes::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(oneWindeosDispalyMes* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.oneWindeosDispalyMes"; }

 protected:
  explicit oneWindeosDispalyMes(::google::protobuf::Arena* arena);
  oneWindeosDispalyMes(::google::protobuf::Arena* arena, const oneWindeosDispalyMes& from);
  oneWindeosDispalyMes(::google::protobuf::Arena* arena, oneWindeosDispalyMes&& from) noexcept
      : oneWindeosDispalyMes(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCamMesFieldNumber = 6,
    kOutTvIdFieldNumber = 1,
    kWinNumFieldNumber = 2,
    kIsBindFieldNumber = 3,
    kBlockLineFieldNumber = 4,
    kBlockColFieldNumber = 5,
  };
  // repeated .MonitorWall.cameraMessage cam_mes = 6;
  int cam_mes_size() const;
  private:
  int _internal_cam_mes_size() const;

  public:
  void clear_cam_mes() ;
  ::MonitorWall::cameraMessage* mutable_cam_mes(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>* mutable_cam_mes();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>& _internal_cam_mes() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>* _internal_mutable_cam_mes();
  public:
  const ::MonitorWall::cameraMessage& cam_mes(int index) const;
  ::MonitorWall::cameraMessage* add_cam_mes();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>& cam_mes() const;
  // int32 out_tv_id = 1;
  void clear_out_tv_id() ;
  ::int32_t out_tv_id() const;
  void set_out_tv_id(::int32_t value);

  private:
  ::int32_t _internal_out_tv_id() const;
  void _internal_set_out_tv_id(::int32_t value);

  public:
  // int32 win_num = 2;
  void clear_win_num() ;
  ::int32_t win_num() const;
  void set_win_num(::int32_t value);

  private:
  ::int32_t _internal_win_num() const;
  void _internal_set_win_num(::int32_t value);

  public:
  // bool is_bind = 3;
  void clear_is_bind() ;
  bool is_bind() const;
  void set_is_bind(bool value);

  private:
  bool _internal_is_bind() const;
  void _internal_set_is_bind(bool value);

  public:
  // int32 block_line = 4;
  void clear_block_line() ;
  ::int32_t block_line() const;
  void set_block_line(::int32_t value);

  private:
  ::int32_t _internal_block_line() const;
  void _internal_set_block_line(::int32_t value);

  public:
  // int32 block_col = 5;
  void clear_block_col() ;
  ::int32_t block_col() const;
  void set_block_col(::int32_t value);

  private:
  ::int32_t _internal_block_col() const;
  void _internal_set_block_col(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.oneWindeosDispalyMes)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_oneWindeosDispalyMes_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const oneWindeosDispalyMes& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::cameraMessage > cam_mes_;
    ::int32_t out_tv_id_;
    ::int32_t win_num_;
    bool is_bind_;
    ::int32_t block_line_;
    ::int32_t block_col_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class delSourceRequset final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.delSourceRequset) */ {
 public:
  inline delSourceRequset() : delSourceRequset(nullptr) {}
  ~delSourceRequset() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR delSourceRequset(
      ::google::protobuf::internal::ConstantInitialized);

  inline delSourceRequset(const delSourceRequset& from) : delSourceRequset(nullptr, from) {}
  inline delSourceRequset(delSourceRequset&& from) noexcept
      : delSourceRequset(nullptr, std::move(from)) {}
  inline delSourceRequset& operator=(const delSourceRequset& from) {
    CopyFrom(from);
    return *this;
  }
  inline delSourceRequset& operator=(delSourceRequset&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const delSourceRequset& default_instance() {
    return *internal_default_instance();
  }
  static inline const delSourceRequset* internal_default_instance() {
    return reinterpret_cast<const delSourceRequset*>(
        &_delSourceRequset_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(delSourceRequset& a, delSourceRequset& b) { a.Swap(&b); }
  inline void Swap(delSourceRequset* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(delSourceRequset* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  delSourceRequset* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<delSourceRequset>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const delSourceRequset& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const delSourceRequset& from) { delSourceRequset::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(delSourceRequset* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.delSourceRequset"; }

 protected:
  explicit delSourceRequset(::google::protobuf::Arena* arena);
  delSourceRequset(::google::protobuf::Arena* arena, const delSourceRequset& from);
  delSourceRequset(::google::protobuf::Arena* arena, delSourceRequset&& from) noexcept
      : delSourceRequset(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceResFieldNumber = 1,
    kLoginResFieldNumber = 3,
    kDelModeFieldNumber = 2,
  };
  // .MonitorWall.sourceCommonRequest source_res = 1;
  bool has_source_res() const;
  void clear_source_res() ;
  const ::MonitorWall::sourceCommonRequest& source_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::sourceCommonRequest* release_source_res();
  ::MonitorWall::sourceCommonRequest* mutable_source_res();
  void set_allocated_source_res(::MonitorWall::sourceCommonRequest* value);
  void unsafe_arena_set_allocated_source_res(::MonitorWall::sourceCommonRequest* value);
  ::MonitorWall::sourceCommonRequest* unsafe_arena_release_source_res();

  private:
  const ::MonitorWall::sourceCommonRequest& _internal_source_res() const;
  ::MonitorWall::sourceCommonRequest* _internal_mutable_source_res();

  public:
  // .MonitorWall.loginRequest login_res = 3;
  bool has_login_res() const;
  void clear_login_res() ;
  const ::MonitorWall::loginRequest& login_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::loginRequest* release_login_res();
  ::MonitorWall::loginRequest* mutable_login_res();
  void set_allocated_login_res(::MonitorWall::loginRequest* value);
  void unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value);
  ::MonitorWall::loginRequest* unsafe_arena_release_login_res();

  private:
  const ::MonitorWall::loginRequest& _internal_login_res() const;
  ::MonitorWall::loginRequest* _internal_mutable_login_res();

  public:
  // int32 del_mode = 2;
  void clear_del_mode() ;
  ::int32_t del_mode() const;
  void set_del_mode(::int32_t value);

  private:
  ::int32_t _internal_del_mode() const;
  void _internal_set_del_mode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.delSourceRequset)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_delSourceRequset_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const delSourceRequset& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::MonitorWall::sourceCommonRequest* source_res_;
    ::MonitorWall::loginRequest* login_res_;
    ::int32_t del_mode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class decoderOutTVNumResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.decoderOutTVNumResponse) */ {
 public:
  inline decoderOutTVNumResponse() : decoderOutTVNumResponse(nullptr) {}
  ~decoderOutTVNumResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR decoderOutTVNumResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline decoderOutTVNumResponse(const decoderOutTVNumResponse& from) : decoderOutTVNumResponse(nullptr, from) {}
  inline decoderOutTVNumResponse(decoderOutTVNumResponse&& from) noexcept
      : decoderOutTVNumResponse(nullptr, std::move(from)) {}
  inline decoderOutTVNumResponse& operator=(const decoderOutTVNumResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline decoderOutTVNumResponse& operator=(decoderOutTVNumResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const decoderOutTVNumResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const decoderOutTVNumResponse* internal_default_instance() {
    return reinterpret_cast<const decoderOutTVNumResponse*>(
        &_decoderOutTVNumResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(decoderOutTVNumResponse& a, decoderOutTVNumResponse& b) { a.Swap(&b); }
  inline void Swap(decoderOutTVNumResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(decoderOutTVNumResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  decoderOutTVNumResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<decoderOutTVNumResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const decoderOutTVNumResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const decoderOutTVNumResponse& from) { decoderOutTVNumResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(decoderOutTVNumResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.decoderOutTVNumResponse"; }

 protected:
  explicit decoderOutTVNumResponse(::google::protobuf::Arena* arena);
  decoderOutTVNumResponse(::google::protobuf::Arena* arena, const decoderOutTVNumResponse& from);
  decoderOutTVNumResponse(::google::protobuf::Arena* arena, decoderOutTVNumResponse&& from) noexcept
      : decoderOutTVNumResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTvInfoFieldNumber = 2,
    kCodeInfoFieldNumber = 3,
    kTvNumFieldNumber = 1,
  };
  // repeated .MonitorWall.outTV tv_info = 2;
  int tv_info_size() const;
  private:
  int _internal_tv_info_size() const;

  public:
  void clear_tv_info() ;
  ::MonitorWall::outTV* mutable_tv_info(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>* mutable_tv_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>& _internal_tv_info() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>* _internal_mutable_tv_info();
  public:
  const ::MonitorWall::outTV& tv_info(int index) const;
  ::MonitorWall::outTV* add_tv_info();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>& tv_info() const;
  // .MonitorWall.codeResponse code_info = 3;
  bool has_code_info() const;
  void clear_code_info() ;
  const ::MonitorWall::codeResponse& code_info() const;
  PROTOBUF_NODISCARD ::MonitorWall::codeResponse* release_code_info();
  ::MonitorWall::codeResponse* mutable_code_info();
  void set_allocated_code_info(::MonitorWall::codeResponse* value);
  void unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value);
  ::MonitorWall::codeResponse* unsafe_arena_release_code_info();

  private:
  const ::MonitorWall::codeResponse& _internal_code_info() const;
  ::MonitorWall::codeResponse* _internal_mutable_code_info();

  public:
  // int32 tv_num = 1;
  void clear_tv_num() ;
  ::int32_t tv_num() const;
  void set_tv_num(::int32_t value);

  private:
  ::int32_t _internal_tv_num() const;
  void _internal_set_tv_num(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.decoderOutTVNumResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_decoderOutTVNumResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const decoderOutTVNumResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::outTV > tv_info_;
    ::MonitorWall::codeResponse* code_info_;
    ::int32_t tv_num_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class blockStreamInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.blockStreamInfo) */ {
 public:
  inline blockStreamInfo() : blockStreamInfo(nullptr) {}
  ~blockStreamInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR blockStreamInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline blockStreamInfo(const blockStreamInfo& from) : blockStreamInfo(nullptr, from) {}
  inline blockStreamInfo(blockStreamInfo&& from) noexcept
      : blockStreamInfo(nullptr, std::move(from)) {}
  inline blockStreamInfo& operator=(const blockStreamInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline blockStreamInfo& operator=(blockStreamInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const blockStreamInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const blockStreamInfo* internal_default_instance() {
    return reinterpret_cast<const blockStreamInfo*>(
        &_blockStreamInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 19;
  friend void swap(blockStreamInfo& a, blockStreamInfo& b) { a.Swap(&b); }
  inline void Swap(blockStreamInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(blockStreamInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  blockStreamInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<blockStreamInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const blockStreamInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const blockStreamInfo& from) { blockStreamInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(blockStreamInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.blockStreamInfo"; }

 protected:
  explicit blockStreamInfo(::google::protobuf::Arena* arena);
  blockStreamInfo(::google::protobuf::Arena* arena, const blockStreamInfo& from);
  blockStreamInfo(::google::protobuf::Arena* arena, blockStreamInfo&& from) noexcept
      : blockStreamInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWinStreamInfoFieldNumber = 2,
    kTvIdFieldNumber = 1,
  };
  // repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
  int win_stream_info_size() const;
  private:
  int _internal_win_stream_info_size() const;

  public:
  void clear_win_stream_info() ;
  ::MonitorWall::windowStreamInfo* mutable_win_stream_info(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>* mutable_win_stream_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>& _internal_win_stream_info() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>* _internal_mutable_win_stream_info();
  public:
  const ::MonitorWall::windowStreamInfo& win_stream_info(int index) const;
  ::MonitorWall::windowStreamInfo* add_win_stream_info();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>& win_stream_info() const;
  // int32 tv_id = 1;
  void clear_tv_id() ;
  ::int32_t tv_id() const;
  void set_tv_id(::int32_t value);

  private:
  ::int32_t _internal_tv_id() const;
  void _internal_set_tv_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.blockStreamInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_blockStreamInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const blockStreamInfo& from_msg);
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::windowStreamInfo > win_stream_info_;
    ::int32_t tv_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class windowSreamInfoResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.windowSreamInfoResponse) */ {
 public:
  inline windowSreamInfoResponse() : windowSreamInfoResponse(nullptr) {}
  ~windowSreamInfoResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR windowSreamInfoResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline windowSreamInfoResponse(const windowSreamInfoResponse& from) : windowSreamInfoResponse(nullptr, from) {}
  inline windowSreamInfoResponse(windowSreamInfoResponse&& from) noexcept
      : windowSreamInfoResponse(nullptr, std::move(from)) {}
  inline windowSreamInfoResponse& operator=(const windowSreamInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline windowSreamInfoResponse& operator=(windowSreamInfoResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const windowSreamInfoResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const windowSreamInfoResponse* internal_default_instance() {
    return reinterpret_cast<const windowSreamInfoResponse*>(
        &_windowSreamInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 20;
  friend void swap(windowSreamInfoResponse& a, windowSreamInfoResponse& b) { a.Swap(&b); }
  inline void Swap(windowSreamInfoResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(windowSreamInfoResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  windowSreamInfoResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<windowSreamInfoResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const windowSreamInfoResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const windowSreamInfoResponse& from) { windowSreamInfoResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(windowSreamInfoResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.windowSreamInfoResponse"; }

 protected:
  explicit windowSreamInfoResponse(::google::protobuf::Arena* arena);
  windowSreamInfoResponse(::google::protobuf::Arena* arena, const windowSreamInfoResponse& from);
  windowSreamInfoResponse(::google::protobuf::Arena* arena, windowSreamInfoResponse&& from) noexcept
      : windowSreamInfoResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBlockStreamInfoFieldNumber = 1,
    kCodeInfoFieldNumber = 2,
    kLoginResFieldNumber = 3,
  };
  // repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
  int block_stream_info_size() const;
  private:
  int _internal_block_stream_info_size() const;

  public:
  void clear_block_stream_info() ;
  ::MonitorWall::blockStreamInfo* mutable_block_stream_info(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>* mutable_block_stream_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>& _internal_block_stream_info() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>* _internal_mutable_block_stream_info();
  public:
  const ::MonitorWall::blockStreamInfo& block_stream_info(int index) const;
  ::MonitorWall::blockStreamInfo* add_block_stream_info();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>& block_stream_info() const;
  // .MonitorWall.codeResponse code_info = 2;
  bool has_code_info() const;
  void clear_code_info() ;
  const ::MonitorWall::codeResponse& code_info() const;
  PROTOBUF_NODISCARD ::MonitorWall::codeResponse* release_code_info();
  ::MonitorWall::codeResponse* mutable_code_info();
  void set_allocated_code_info(::MonitorWall::codeResponse* value);
  void unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value);
  ::MonitorWall::codeResponse* unsafe_arena_release_code_info();

  private:
  const ::MonitorWall::codeResponse& _internal_code_info() const;
  ::MonitorWall::codeResponse* _internal_mutable_code_info();

  public:
  // .MonitorWall.loginRequest login_res = 3;
  bool has_login_res() const;
  void clear_login_res() ;
  const ::MonitorWall::loginRequest& login_res() const;
  PROTOBUF_NODISCARD ::MonitorWall::loginRequest* release_login_res();
  ::MonitorWall::loginRequest* mutable_login_res();
  void set_allocated_login_res(::MonitorWall::loginRequest* value);
  void unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value);
  ::MonitorWall::loginRequest* unsafe_arena_release_login_res();

  private:
  const ::MonitorWall::loginRequest& _internal_login_res() const;
  ::MonitorWall::loginRequest* _internal_mutable_login_res();

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.windowSreamInfoResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_windowSreamInfoResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const windowSreamInfoResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::blockStreamInfo > block_stream_info_;
    ::MonitorWall::codeResponse* code_info_;
    ::MonitorWall::loginRequest* login_res_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};
// -------------------------------------------------------------------

class allWindowDisplayMesResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:MonitorWall.allWindowDisplayMesResponse) */ {
 public:
  inline allWindowDisplayMesResponse() : allWindowDisplayMesResponse(nullptr) {}
  ~allWindowDisplayMesResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR allWindowDisplayMesResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline allWindowDisplayMesResponse(const allWindowDisplayMesResponse& from) : allWindowDisplayMesResponse(nullptr, from) {}
  inline allWindowDisplayMesResponse(allWindowDisplayMesResponse&& from) noexcept
      : allWindowDisplayMesResponse(nullptr, std::move(from)) {}
  inline allWindowDisplayMesResponse& operator=(const allWindowDisplayMesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline allWindowDisplayMesResponse& operator=(allWindowDisplayMesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const allWindowDisplayMesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const allWindowDisplayMesResponse* internal_default_instance() {
    return reinterpret_cast<const allWindowDisplayMesResponse*>(
        &_allWindowDisplayMesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 17;
  friend void swap(allWindowDisplayMesResponse& a, allWindowDisplayMesResponse& b) { a.Swap(&b); }
  inline void Swap(allWindowDisplayMesResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(allWindowDisplayMesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  allWindowDisplayMesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<allWindowDisplayMesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const allWindowDisplayMesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const allWindowDisplayMesResponse& from) { allWindowDisplayMesResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(allWindowDisplayMesResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "MonitorWall.allWindowDisplayMesResponse"; }

 protected:
  explicit allWindowDisplayMesResponse(::google::protobuf::Arena* arena);
  allWindowDisplayMesResponse(::google::protobuf::Arena* arena, const allWindowDisplayMesResponse& from);
  allWindowDisplayMesResponse(::google::protobuf::Arena* arena, allWindowDisplayMesResponse&& from) noexcept
      : allWindowDisplayMesResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOneWinMesFieldNumber = 1,
    kCodeInfoFieldNumber = 2,
  };
  // repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
  int one_win_mes_size() const;
  private:
  int _internal_one_win_mes_size() const;

  public:
  void clear_one_win_mes() ;
  ::MonitorWall::oneWindeosDispalyMes* mutable_one_win_mes(int index);
  ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>* mutable_one_win_mes();

  private:
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>& _internal_one_win_mes() const;
  ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>* _internal_mutable_one_win_mes();
  public:
  const ::MonitorWall::oneWindeosDispalyMes& one_win_mes(int index) const;
  ::MonitorWall::oneWindeosDispalyMes* add_one_win_mes();
  const ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>& one_win_mes() const;
  // .MonitorWall.codeResponse code_info = 2;
  bool has_code_info() const;
  void clear_code_info() ;
  const ::MonitorWall::codeResponse& code_info() const;
  PROTOBUF_NODISCARD ::MonitorWall::codeResponse* release_code_info();
  ::MonitorWall::codeResponse* mutable_code_info();
  void set_allocated_code_info(::MonitorWall::codeResponse* value);
  void unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value);
  ::MonitorWall::codeResponse* unsafe_arena_release_code_info();

  private:
  const ::MonitorWall::codeResponse& _internal_code_info() const;
  ::MonitorWall::codeResponse* _internal_mutable_code_info();

  public:
  // @@protoc_insertion_point(class_scope:MonitorWall.allWindowDisplayMesResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_allWindowDisplayMesResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const allWindowDisplayMesResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::MonitorWall::oneWindeosDispalyMes > one_win_mes_;
    ::MonitorWall::codeResponse* code_info_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_MonitorWall_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// empty

// -------------------------------------------------------------------

// codeResponse

// int32 code = 1;
inline void codeResponse::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = 0;
}
inline ::int32_t codeResponse::code() const {
  // @@protoc_insertion_point(field_get:MonitorWall.codeResponse.code)
  return _internal_code();
}
inline void codeResponse::set_code(::int32_t value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:MonitorWall.codeResponse.code)
}
inline ::int32_t codeResponse::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_;
}
inline void codeResponse::_internal_set_code(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_ = value;
}

// string code_describe = 2;
inline void codeResponse::clear_code_describe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_describe_.ClearToEmpty();
}
inline const std::string& codeResponse::code_describe() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.codeResponse.code_describe)
  return _internal_code_describe();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void codeResponse::set_code_describe(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_describe_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.codeResponse.code_describe)
}
inline std::string* codeResponse::mutable_code_describe() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code_describe();
  // @@protoc_insertion_point(field_mutable:MonitorWall.codeResponse.code_describe)
  return _s;
}
inline const std::string& codeResponse::_internal_code_describe() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_describe_.Get();
}
inline void codeResponse::_internal_set_code_describe(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_describe_.Set(value, GetArena());
}
inline std::string* codeResponse::_internal_mutable_code_describe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_describe_.Mutable( GetArena());
}
inline std::string* codeResponse::release_code_describe() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.codeResponse.code_describe)
  return _impl_.code_describe_.Release();
}
inline void codeResponse::set_allocated_code_describe(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_describe_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_describe_.IsDefault()) {
          _impl_.code_describe_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.codeResponse.code_describe)
}

// -------------------------------------------------------------------

// loginRequest

// string decoder_ip = 1;
inline void loginRequest::clear_decoder_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_ip_.ClearToEmpty();
}
inline const std::string& loginRequest::decoder_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.loginRequest.decoder_ip)
  return _internal_decoder_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void loginRequest::set_decoder_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.loginRequest.decoder_ip)
}
inline std::string* loginRequest::mutable_decoder_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_decoder_ip();
  // @@protoc_insertion_point(field_mutable:MonitorWall.loginRequest.decoder_ip)
  return _s;
}
inline const std::string& loginRequest::_internal_decoder_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decoder_ip_.Get();
}
inline void loginRequest::_internal_set_decoder_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_ip_.Set(value, GetArena());
}
inline std::string* loginRequest::_internal_mutable_decoder_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.decoder_ip_.Mutable( GetArena());
}
inline std::string* loginRequest::release_decoder_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.loginRequest.decoder_ip)
  return _impl_.decoder_ip_.Release();
}
inline void loginRequest::set_allocated_decoder_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.decoder_ip_.IsDefault()) {
          _impl_.decoder_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.loginRequest.decoder_ip)
}

// uint32 decoder_port = 2;
inline void loginRequest::clear_decoder_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_port_ = 0u;
}
inline ::uint32_t loginRequest::decoder_port() const {
  // @@protoc_insertion_point(field_get:MonitorWall.loginRequest.decoder_port)
  return _internal_decoder_port();
}
inline void loginRequest::set_decoder_port(::uint32_t value) {
  _internal_set_decoder_port(value);
  // @@protoc_insertion_point(field_set:MonitorWall.loginRequest.decoder_port)
}
inline ::uint32_t loginRequest::_internal_decoder_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decoder_port_;
}
inline void loginRequest::_internal_set_decoder_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_port_ = value;
}

// string decoder_username = 3;
inline void loginRequest::clear_decoder_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_username_.ClearToEmpty();
}
inline const std::string& loginRequest::decoder_username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.loginRequest.decoder_username)
  return _internal_decoder_username();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void loginRequest::set_decoder_username(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.loginRequest.decoder_username)
}
inline std::string* loginRequest::mutable_decoder_username() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_decoder_username();
  // @@protoc_insertion_point(field_mutable:MonitorWall.loginRequest.decoder_username)
  return _s;
}
inline const std::string& loginRequest::_internal_decoder_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decoder_username_.Get();
}
inline void loginRequest::_internal_set_decoder_username(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_username_.Set(value, GetArena());
}
inline std::string* loginRequest::_internal_mutable_decoder_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.decoder_username_.Mutable( GetArena());
}
inline std::string* loginRequest::release_decoder_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.loginRequest.decoder_username)
  return _impl_.decoder_username_.Release();
}
inline void loginRequest::set_allocated_decoder_username(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_username_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.decoder_username_.IsDefault()) {
          _impl_.decoder_username_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.loginRequest.decoder_username)
}

// string decoder_pwd = 4;
inline void loginRequest::clear_decoder_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_pwd_.ClearToEmpty();
}
inline const std::string& loginRequest::decoder_pwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.loginRequest.decoder_pwd)
  return _internal_decoder_pwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void loginRequest::set_decoder_pwd(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_pwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.loginRequest.decoder_pwd)
}
inline std::string* loginRequest::mutable_decoder_pwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_decoder_pwd();
  // @@protoc_insertion_point(field_mutable:MonitorWall.loginRequest.decoder_pwd)
  return _s;
}
inline const std::string& loginRequest::_internal_decoder_pwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decoder_pwd_.Get();
}
inline void loginRequest::_internal_set_decoder_pwd(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_pwd_.Set(value, GetArena());
}
inline std::string* loginRequest::_internal_mutable_decoder_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.decoder_pwd_.Mutable( GetArena());
}
inline std::string* loginRequest::release_decoder_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.loginRequest.decoder_pwd)
  return _impl_.decoder_pwd_.Release();
}
inline void loginRequest::set_allocated_decoder_pwd(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decoder_pwd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.decoder_pwd_.IsDefault()) {
          _impl_.decoder_pwd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.loginRequest.decoder_pwd)
}

// -------------------------------------------------------------------

// outTV

// string tv_name = 1;
inline void outTV::clear_tv_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_name_.ClearToEmpty();
}
inline const std::string& outTV::tv_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.outTV.tv_name)
  return _internal_tv_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void outTV::set_tv_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.outTV.tv_name)
}
inline std::string* outTV::mutable_tv_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_tv_name();
  // @@protoc_insertion_point(field_mutable:MonitorWall.outTV.tv_name)
  return _s;
}
inline const std::string& outTV::_internal_tv_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_name_.Get();
}
inline void outTV::_internal_set_tv_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_name_.Set(value, GetArena());
}
inline std::string* outTV::_internal_mutable_tv_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.tv_name_.Mutable( GetArena());
}
inline std::string* outTV::release_tv_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.outTV.tv_name)
  return _impl_.tv_name_.Release();
}
inline void outTV::set_allocated_tv_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.tv_name_.IsDefault()) {
          _impl_.tv_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.outTV.tv_name)
}

// int32 cnannel_id = 2;
inline void outTV::clear_cnannel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cnannel_id_ = 0;
}
inline ::int32_t outTV::cnannel_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.outTV.cnannel_id)
  return _internal_cnannel_id();
}
inline void outTV::set_cnannel_id(::int32_t value) {
  _internal_set_cnannel_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.outTV.cnannel_id)
}
inline ::int32_t outTV::_internal_cnannel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cnannel_id_;
}
inline void outTV::_internal_set_cnannel_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cnannel_id_ = value;
}

// -------------------------------------------------------------------

// decoderOutTVNumResponse

// int32 tv_num = 1;
inline void decoderOutTVNumResponse::clear_tv_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_num_ = 0;
}
inline ::int32_t decoderOutTVNumResponse::tv_num() const {
  // @@protoc_insertion_point(field_get:MonitorWall.decoderOutTVNumResponse.tv_num)
  return _internal_tv_num();
}
inline void decoderOutTVNumResponse::set_tv_num(::int32_t value) {
  _internal_set_tv_num(value);
  // @@protoc_insertion_point(field_set:MonitorWall.decoderOutTVNumResponse.tv_num)
}
inline ::int32_t decoderOutTVNumResponse::_internal_tv_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_num_;
}
inline void decoderOutTVNumResponse::_internal_set_tv_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_num_ = value;
}

// repeated .MonitorWall.outTV tv_info = 2;
inline int decoderOutTVNumResponse::_internal_tv_info_size() const {
  return _internal_tv_info().size();
}
inline int decoderOutTVNumResponse::tv_info_size() const {
  return _internal_tv_info_size();
}
inline void decoderOutTVNumResponse::clear_tv_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_info_.Clear();
}
inline ::MonitorWall::outTV* decoderOutTVNumResponse::mutable_tv_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.decoderOutTVNumResponse.tv_info)
  return _internal_mutable_tv_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>* decoderOutTVNumResponse::mutable_tv_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.decoderOutTVNumResponse.tv_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tv_info();
}
inline const ::MonitorWall::outTV& decoderOutTVNumResponse::tv_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.decoderOutTVNumResponse.tv_info)
  return _internal_tv_info().Get(index);
}
inline ::MonitorWall::outTV* decoderOutTVNumResponse::add_tv_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::outTV* _add = _internal_mutable_tv_info()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.decoderOutTVNumResponse.tv_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>& decoderOutTVNumResponse::tv_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.decoderOutTVNumResponse.tv_info)
  return _internal_tv_info();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>&
decoderOutTVNumResponse::_internal_tv_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_info_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::outTV>*
decoderOutTVNumResponse::_internal_mutable_tv_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tv_info_;
}

// .MonitorWall.codeResponse code_info = 3;
inline bool decoderOutTVNumResponse::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void decoderOutTVNumResponse::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::codeResponse& decoderOutTVNumResponse::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::codeResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::codeResponse&>(::MonitorWall::_codeResponse_default_instance_);
}
inline const ::MonitorWall::codeResponse& decoderOutTVNumResponse::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.decoderOutTVNumResponse.code_info)
  return _internal_code_info();
}
inline void decoderOutTVNumResponse::unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.decoderOutTVNumResponse.code_info)
}
inline ::MonitorWall::codeResponse* decoderOutTVNumResponse::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::codeResponse* decoderOutTVNumResponse::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.decoderOutTVNumResponse.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::MonitorWall::codeResponse* decoderOutTVNumResponse::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::codeResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::MonitorWall::codeResponse* decoderOutTVNumResponse::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::codeResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:MonitorWall.decoderOutTVNumResponse.code_info)
  return _msg;
}
inline void decoderOutTVNumResponse::set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.decoderOutTVNumResponse.code_info)
}

// -------------------------------------------------------------------

// blockMes

// int32 bind_line = 1;
inline void blockMes::clear_bind_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_line_ = 0;
}
inline ::int32_t blockMes::bind_line() const {
  // @@protoc_insertion_point(field_get:MonitorWall.blockMes.bind_line)
  return _internal_bind_line();
}
inline void blockMes::set_bind_line(::int32_t value) {
  _internal_set_bind_line(value);
  // @@protoc_insertion_point(field_set:MonitorWall.blockMes.bind_line)
}
inline ::int32_t blockMes::_internal_bind_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bind_line_;
}
inline void blockMes::_internal_set_bind_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_line_ = value;
}

// int32 bind_col = 2;
inline void blockMes::clear_bind_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_col_ = 0;
}
inline ::int32_t blockMes::bind_col() const {
  // @@protoc_insertion_point(field_get:MonitorWall.blockMes.bind_col)
  return _internal_bind_col();
}
inline void blockMes::set_bind_col(::int32_t value) {
  _internal_set_bind_col(value);
  // @@protoc_insertion_point(field_set:MonitorWall.blockMes.bind_col)
}
inline ::int32_t blockMes::_internal_bind_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bind_col_;
}
inline void blockMes::_internal_set_bind_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_col_ = value;
}

// int32 bind_ch = 3;
inline void blockMes::clear_bind_ch() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ch_ = 0;
}
inline ::int32_t blockMes::bind_ch() const {
  // @@protoc_insertion_point(field_get:MonitorWall.blockMes.bind_ch)
  return _internal_bind_ch();
}
inline void blockMes::set_bind_ch(::int32_t value) {
  _internal_set_bind_ch(value);
  // @@protoc_insertion_point(field_set:MonitorWall.blockMes.bind_ch)
}
inline ::int32_t blockMes::_internal_bind_ch() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bind_ch_;
}
inline void blockMes::_internal_set_bind_ch(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bind_ch_ = value;
}

// -------------------------------------------------------------------

// wallConfigRequest

// int32 block_num = 1;
inline void wallConfigRequest::clear_block_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_num_ = 0;
}
inline ::int32_t wallConfigRequest::block_num() const {
  // @@protoc_insertion_point(field_get:MonitorWall.wallConfigRequest.block_num)
  return _internal_block_num();
}
inline void wallConfigRequest::set_block_num(::int32_t value) {
  _internal_set_block_num(value);
  // @@protoc_insertion_point(field_set:MonitorWall.wallConfigRequest.block_num)
}
inline ::int32_t wallConfigRequest::_internal_block_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_num_;
}
inline void wallConfigRequest::_internal_set_block_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_num_ = value;
}

// repeated .MonitorWall.blockMes block = 2;
inline int wallConfigRequest::_internal_block_size() const {
  return _internal_block().size();
}
inline int wallConfigRequest::block_size() const {
  return _internal_block_size();
}
inline void wallConfigRequest::clear_block() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_.Clear();
}
inline ::MonitorWall::blockMes* wallConfigRequest::mutable_block(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.wallConfigRequest.block)
  return _internal_mutable_block()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>* wallConfigRequest::mutable_block()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.wallConfigRequest.block)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_block();
}
inline const ::MonitorWall::blockMes& wallConfigRequest::block(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.wallConfigRequest.block)
  return _internal_block().Get(index);
}
inline ::MonitorWall::blockMes* wallConfigRequest::add_block() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::blockMes* _add = _internal_mutable_block()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.wallConfigRequest.block)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>& wallConfigRequest::block() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.wallConfigRequest.block)
  return _internal_block();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>&
wallConfigRequest::_internal_block() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::blockMes>*
wallConfigRequest::_internal_mutable_block() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.block_;
}

// .MonitorWall.loginRequest login_res = 3;
inline bool wallConfigRequest::has_login_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.login_res_ != nullptr);
  return value;
}
inline void wallConfigRequest::clear_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ != nullptr) _impl_.login_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::loginRequest& wallConfigRequest::_internal_login_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::loginRequest* p = _impl_.login_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::loginRequest&>(::MonitorWall::_loginRequest_default_instance_);
}
inline const ::MonitorWall::loginRequest& wallConfigRequest::login_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.wallConfigRequest.login_res)
  return _internal_login_res();
}
inline void wallConfigRequest::unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.login_res_);
  }
  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.wallConfigRequest.login_res)
}
inline ::MonitorWall::loginRequest* wallConfigRequest::release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* released = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::loginRequest* wallConfigRequest::unsafe_arena_release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.wallConfigRequest.login_res)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* temp = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::loginRequest* wallConfigRequest::_internal_mutable_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::loginRequest>(GetArena());
    _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(p);
  }
  return _impl_.login_res_;
}
inline ::MonitorWall::loginRequest* wallConfigRequest::mutable_login_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::loginRequest* _msg = _internal_mutable_login_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.wallConfigRequest.login_res)
  return _msg;
}
inline void wallConfigRequest::set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.login_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.wallConfigRequest.login_res)
}

// -------------------------------------------------------------------

// tvList

// int32 out_tv_id = 1;
inline void tvList::clear_out_tv_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.out_tv_id_ = 0;
}
inline ::int32_t tvList::out_tv_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.tvList.out_tv_id)
  return _internal_out_tv_id();
}
inline void tvList::set_out_tv_id(::int32_t value) {
  _internal_set_out_tv_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.tvList.out_tv_id)
}
inline ::int32_t tvList::_internal_out_tv_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.out_tv_id_;
}
inline void tvList::_internal_set_out_tv_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.out_tv_id_ = value;
}

// bool is_bind = 2;
inline void tvList::clear_is_bind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bind_ = false;
}
inline bool tvList::is_bind() const {
  // @@protoc_insertion_point(field_get:MonitorWall.tvList.is_bind)
  return _internal_is_bind();
}
inline void tvList::set_is_bind(bool value) {
  _internal_set_is_bind(value);
  // @@protoc_insertion_point(field_set:MonitorWall.tvList.is_bind)
}
inline bool tvList::_internal_is_bind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_bind_;
}
inline void tvList::_internal_set_is_bind(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bind_ = value;
}

// int32 block_line = 3;
inline void tvList::clear_block_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_line_ = 0;
}
inline ::int32_t tvList::block_line() const {
  // @@protoc_insertion_point(field_get:MonitorWall.tvList.block_line)
  return _internal_block_line();
}
inline void tvList::set_block_line(::int32_t value) {
  _internal_set_block_line(value);
  // @@protoc_insertion_point(field_set:MonitorWall.tvList.block_line)
}
inline ::int32_t tvList::_internal_block_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_line_;
}
inline void tvList::_internal_set_block_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_line_ = value;
}

// int32 block_col = 4;
inline void tvList::clear_block_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_col_ = 0;
}
inline ::int32_t tvList::block_col() const {
  // @@protoc_insertion_point(field_get:MonitorWall.tvList.block_col)
  return _internal_block_col();
}
inline void tvList::set_block_col(::int32_t value) {
  _internal_set_block_col(value);
  // @@protoc_insertion_point(field_set:MonitorWall.tvList.block_col)
}
inline ::int32_t tvList::_internal_block_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_col_;
}
inline void tvList::_internal_set_block_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_col_ = value;
}

// -------------------------------------------------------------------

// tvMesResponse

// repeated .MonitorWall.tvList tv_list = 1;
inline int tvMesResponse::_internal_tv_list_size() const {
  return _internal_tv_list().size();
}
inline int tvMesResponse::tv_list_size() const {
  return _internal_tv_list_size();
}
inline void tvMesResponse::clear_tv_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_list_.Clear();
}
inline ::MonitorWall::tvList* tvMesResponse::mutable_tv_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.tvMesResponse.tv_list)
  return _internal_mutable_tv_list()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>* tvMesResponse::mutable_tv_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.tvMesResponse.tv_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_tv_list();
}
inline const ::MonitorWall::tvList& tvMesResponse::tv_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.tvMesResponse.tv_list)
  return _internal_tv_list().Get(index);
}
inline ::MonitorWall::tvList* tvMesResponse::add_tv_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::tvList* _add = _internal_mutable_tv_list()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.tvMesResponse.tv_list)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>& tvMesResponse::tv_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.tvMesResponse.tv_list)
  return _internal_tv_list();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>&
tvMesResponse::_internal_tv_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_list_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::tvList>*
tvMesResponse::_internal_mutable_tv_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.tv_list_;
}

// .MonitorWall.codeResponse code_info = 2;
inline bool tvMesResponse::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void tvMesResponse::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::codeResponse& tvMesResponse::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::codeResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::codeResponse&>(::MonitorWall::_codeResponse_default_instance_);
}
inline const ::MonitorWall::codeResponse& tvMesResponse::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.tvMesResponse.code_info)
  return _internal_code_info();
}
inline void tvMesResponse::unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.tvMesResponse.code_info)
}
inline ::MonitorWall::codeResponse* tvMesResponse::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::codeResponse* tvMesResponse::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.tvMesResponse.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::MonitorWall::codeResponse* tvMesResponse::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::codeResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::MonitorWall::codeResponse* tvMesResponse::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::codeResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:MonitorWall.tvMesResponse.code_info)
  return _msg;
}
inline void tvMesResponse::set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.tvMesResponse.code_info)
}

// -------------------------------------------------------------------

// sourceCommonRequest

// int32 channel_id = 1;
inline void sourceCommonRequest::clear_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = 0;
}
inline ::int32_t sourceCommonRequest::channel_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.sourceCommonRequest.channel_id)
  return _internal_channel_id();
}
inline void sourceCommonRequest::set_channel_id(::int32_t value) {
  _internal_set_channel_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.sourceCommonRequest.channel_id)
}
inline ::int32_t sourceCommonRequest::_internal_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.channel_id_;
}
inline void sourceCommonRequest::_internal_set_channel_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.channel_id_ = value;
}

// int32 window_id = 2;
inline void sourceCommonRequest::clear_window_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_id_ = 0;
}
inline ::int32_t sourceCommonRequest::window_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.sourceCommonRequest.window_id)
  return _internal_window_id();
}
inline void sourceCommonRequest::set_window_id(::int32_t value) {
  _internal_set_window_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.sourceCommonRequest.window_id)
}
inline ::int32_t sourceCommonRequest::_internal_window_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.window_id_;
}
inline void sourceCommonRequest::_internal_set_window_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_id_ = value;
}

// -------------------------------------------------------------------

// devMes

// string dev_ip = 1;
inline void devMes::clear_dev_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_ip_.ClearToEmpty();
}
inline const std::string& devMes::dev_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.devMes.dev_ip)
  return _internal_dev_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void devMes::set_dev_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.devMes.dev_ip)
}
inline std::string* devMes::mutable_dev_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dev_ip();
  // @@protoc_insertion_point(field_mutable:MonitorWall.devMes.dev_ip)
  return _s;
}
inline const std::string& devMes::_internal_dev_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_ip_.Get();
}
inline void devMes::_internal_set_dev_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_ip_.Set(value, GetArena());
}
inline std::string* devMes::_internal_mutable_dev_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dev_ip_.Mutable( GetArena());
}
inline std::string* devMes::release_dev_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.devMes.dev_ip)
  return _impl_.dev_ip_.Release();
}
inline void devMes::set_allocated_dev_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dev_ip_.IsDefault()) {
          _impl_.dev_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.devMes.dev_ip)
}

// int32 dev_port = 2;
inline void devMes::clear_dev_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_port_ = 0;
}
inline ::int32_t devMes::dev_port() const {
  // @@protoc_insertion_point(field_get:MonitorWall.devMes.dev_port)
  return _internal_dev_port();
}
inline void devMes::set_dev_port(::int32_t value) {
  _internal_set_dev_port(value);
  // @@protoc_insertion_point(field_set:MonitorWall.devMes.dev_port)
}
inline ::int32_t devMes::_internal_dev_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_port_;
}
inline void devMes::_internal_set_dev_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_port_ = value;
}

// string dev_user = 3;
inline void devMes::clear_dev_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_user_.ClearToEmpty();
}
inline const std::string& devMes::dev_user() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.devMes.dev_user)
  return _internal_dev_user();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void devMes::set_dev_user(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_user_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.devMes.dev_user)
}
inline std::string* devMes::mutable_dev_user() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dev_user();
  // @@protoc_insertion_point(field_mutable:MonitorWall.devMes.dev_user)
  return _s;
}
inline const std::string& devMes::_internal_dev_user() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_user_.Get();
}
inline void devMes::_internal_set_dev_user(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_user_.Set(value, GetArena());
}
inline std::string* devMes::_internal_mutable_dev_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dev_user_.Mutable( GetArena());
}
inline std::string* devMes::release_dev_user() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.devMes.dev_user)
  return _impl_.dev_user_.Release();
}
inline void devMes::set_allocated_dev_user(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_user_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dev_user_.IsDefault()) {
          _impl_.dev_user_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.devMes.dev_user)
}

// string dev_pwd = 4;
inline void devMes::clear_dev_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_pwd_.ClearToEmpty();
}
inline const std::string& devMes::dev_pwd() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.devMes.dev_pwd)
  return _internal_dev_pwd();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void devMes::set_dev_pwd(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_pwd_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.devMes.dev_pwd)
}
inline std::string* devMes::mutable_dev_pwd() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_dev_pwd();
  // @@protoc_insertion_point(field_mutable:MonitorWall.devMes.dev_pwd)
  return _s;
}
inline const std::string& devMes::_internal_dev_pwd() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_pwd_.Get();
}
inline void devMes::_internal_set_dev_pwd(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_pwd_.Set(value, GetArena());
}
inline std::string* devMes::_internal_mutable_dev_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.dev_pwd_.Mutable( GetArena());
}
inline std::string* devMes::release_dev_pwd() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.devMes.dev_pwd)
  return _impl_.dev_pwd_.Release();
}
inline void devMes::set_allocated_dev_pwd(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_pwd_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.dev_pwd_.IsDefault()) {
          _impl_.dev_pwd_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.devMes.dev_pwd)
}

// int32 dev_channel_id = 5;
inline void devMes::clear_dev_channel_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_channel_id_ = 0;
}
inline ::int32_t devMes::dev_channel_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.devMes.dev_channel_id)
  return _internal_dev_channel_id();
}
inline void devMes::set_dev_channel_id(::int32_t value) {
  _internal_set_dev_channel_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.devMes.dev_channel_id)
}
inline ::int32_t devMes::_internal_dev_channel_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_channel_id_;
}
inline void devMes::_internal_set_dev_channel_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_channel_id_ = value;
}

// -------------------------------------------------------------------

// setSourceRequest

// .MonitorWall.loginRequest login_res = 1;
inline bool setSourceRequest::has_login_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.login_res_ != nullptr);
  return value;
}
inline void setSourceRequest::clear_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ != nullptr) _impl_.login_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::loginRequest& setSourceRequest::_internal_login_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::loginRequest* p = _impl_.login_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::loginRequest&>(::MonitorWall::_loginRequest_default_instance_);
}
inline const ::MonitorWall::loginRequest& setSourceRequest::login_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.setSourceRequest.login_res)
  return _internal_login_res();
}
inline void setSourceRequest::unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.login_res_);
  }
  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.setSourceRequest.login_res)
}
inline ::MonitorWall::loginRequest* setSourceRequest::release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* released = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::loginRequest* setSourceRequest::unsafe_arena_release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.setSourceRequest.login_res)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* temp = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::loginRequest* setSourceRequest::_internal_mutable_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::loginRequest>(GetArena());
    _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(p);
  }
  return _impl_.login_res_;
}
inline ::MonitorWall::loginRequest* setSourceRequest::mutable_login_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::loginRequest* _msg = _internal_mutable_login_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.setSourceRequest.login_res)
  return _msg;
}
inline void setSourceRequest::set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.login_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.setSourceRequest.login_res)
}

// .MonitorWall.sourceCommonRequest source_res = 2;
inline bool setSourceRequest::has_source_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_res_ != nullptr);
  return value;
}
inline void setSourceRequest::clear_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_res_ != nullptr) _impl_.source_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::MonitorWall::sourceCommonRequest& setSourceRequest::_internal_source_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::sourceCommonRequest* p = _impl_.source_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::sourceCommonRequest&>(::MonitorWall::_sourceCommonRequest_default_instance_);
}
inline const ::MonitorWall::sourceCommonRequest& setSourceRequest::source_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.setSourceRequest.source_res)
  return _internal_source_res();
}
inline void setSourceRequest::unsafe_arena_set_allocated_source_res(::MonitorWall::sourceCommonRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_res_);
  }
  _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.setSourceRequest.source_res)
}
inline ::MonitorWall::sourceCommonRequest* setSourceRequest::release_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::sourceCommonRequest* released = _impl_.source_res_;
  _impl_.source_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::sourceCommonRequest* setSourceRequest::unsafe_arena_release_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.setSourceRequest.source_res)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::sourceCommonRequest* temp = _impl_.source_res_;
  _impl_.source_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::sourceCommonRequest* setSourceRequest::_internal_mutable_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::sourceCommonRequest>(GetArena());
    _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(p);
  }
  return _impl_.source_res_;
}
inline ::MonitorWall::sourceCommonRequest* setSourceRequest::mutable_source_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::MonitorWall::sourceCommonRequest* _msg = _internal_mutable_source_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.setSourceRequest.source_res)
  return _msg;
}
inline void setSourceRequest::set_allocated_source_res(::MonitorWall::sourceCommonRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.setSourceRequest.source_res)
}

// .MonitorWall.devMes dev_mes = 3;
inline bool setSourceRequest::has_dev_mes() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.dev_mes_ != nullptr);
  return value;
}
inline void setSourceRequest::clear_dev_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dev_mes_ != nullptr) _impl_.dev_mes_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::MonitorWall::devMes& setSourceRequest::_internal_dev_mes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::devMes* p = _impl_.dev_mes_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::devMes&>(::MonitorWall::_devMes_default_instance_);
}
inline const ::MonitorWall::devMes& setSourceRequest::dev_mes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.setSourceRequest.dev_mes)
  return _internal_dev_mes();
}
inline void setSourceRequest::unsafe_arena_set_allocated_dev_mes(::MonitorWall::devMes* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.dev_mes_);
  }
  _impl_.dev_mes_ = reinterpret_cast<::MonitorWall::devMes*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.setSourceRequest.dev_mes)
}
inline ::MonitorWall::devMes* setSourceRequest::release_dev_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::MonitorWall::devMes* released = _impl_.dev_mes_;
  _impl_.dev_mes_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::devMes* setSourceRequest::unsafe_arena_release_dev_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.setSourceRequest.dev_mes)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::MonitorWall::devMes* temp = _impl_.dev_mes_;
  _impl_.dev_mes_ = nullptr;
  return temp;
}
inline ::MonitorWall::devMes* setSourceRequest::_internal_mutable_dev_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.dev_mes_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::devMes>(GetArena());
    _impl_.dev_mes_ = reinterpret_cast<::MonitorWall::devMes*>(p);
  }
  return _impl_.dev_mes_;
}
inline ::MonitorWall::devMes* setSourceRequest::mutable_dev_mes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::MonitorWall::devMes* _msg = _internal_mutable_dev_mes();
  // @@protoc_insertion_point(field_mutable:MonitorWall.setSourceRequest.dev_mes)
  return _msg;
}
inline void setSourceRequest::set_allocated_dev_mes(::MonitorWall::devMes* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.dev_mes_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.dev_mes_ = reinterpret_cast<::MonitorWall::devMes*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.setSourceRequest.dev_mes)
}

// -------------------------------------------------------------------

// delSourceRequset

// .MonitorWall.sourceCommonRequest source_res = 1;
inline bool delSourceRequset::has_source_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.source_res_ != nullptr);
  return value;
}
inline void delSourceRequset::clear_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_res_ != nullptr) _impl_.source_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::sourceCommonRequest& delSourceRequset::_internal_source_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::sourceCommonRequest* p = _impl_.source_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::sourceCommonRequest&>(::MonitorWall::_sourceCommonRequest_default_instance_);
}
inline const ::MonitorWall::sourceCommonRequest& delSourceRequset::source_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.delSourceRequset.source_res)
  return _internal_source_res();
}
inline void delSourceRequset::unsafe_arena_set_allocated_source_res(::MonitorWall::sourceCommonRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.source_res_);
  }
  _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.delSourceRequset.source_res)
}
inline ::MonitorWall::sourceCommonRequest* delSourceRequset::release_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::sourceCommonRequest* released = _impl_.source_res_;
  _impl_.source_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::sourceCommonRequest* delSourceRequset::unsafe_arena_release_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.delSourceRequset.source_res)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::sourceCommonRequest* temp = _impl_.source_res_;
  _impl_.source_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::sourceCommonRequest* delSourceRequset::_internal_mutable_source_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.source_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::sourceCommonRequest>(GetArena());
    _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(p);
  }
  return _impl_.source_res_;
}
inline ::MonitorWall::sourceCommonRequest* delSourceRequset::mutable_source_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::sourceCommonRequest* _msg = _internal_mutable_source_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.delSourceRequset.source_res)
  return _msg;
}
inline void delSourceRequset::set_allocated_source_res(::MonitorWall::sourceCommonRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.source_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.source_res_ = reinterpret_cast<::MonitorWall::sourceCommonRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.delSourceRequset.source_res)
}

// int32 del_mode = 2;
inline void delSourceRequset::clear_del_mode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.del_mode_ = 0;
}
inline ::int32_t delSourceRequset::del_mode() const {
  // @@protoc_insertion_point(field_get:MonitorWall.delSourceRequset.del_mode)
  return _internal_del_mode();
}
inline void delSourceRequset::set_del_mode(::int32_t value) {
  _internal_set_del_mode(value);
  // @@protoc_insertion_point(field_set:MonitorWall.delSourceRequset.del_mode)
}
inline ::int32_t delSourceRequset::_internal_del_mode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.del_mode_;
}
inline void delSourceRequset::_internal_set_del_mode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.del_mode_ = value;
}

// .MonitorWall.loginRequest login_res = 3;
inline bool delSourceRequset::has_login_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.login_res_ != nullptr);
  return value;
}
inline void delSourceRequset::clear_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ != nullptr) _impl_.login_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::MonitorWall::loginRequest& delSourceRequset::_internal_login_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::loginRequest* p = _impl_.login_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::loginRequest&>(::MonitorWall::_loginRequest_default_instance_);
}
inline const ::MonitorWall::loginRequest& delSourceRequset::login_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.delSourceRequset.login_res)
  return _internal_login_res();
}
inline void delSourceRequset::unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.login_res_);
  }
  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.delSourceRequset.login_res)
}
inline ::MonitorWall::loginRequest* delSourceRequset::release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::loginRequest* released = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::loginRequest* delSourceRequset::unsafe_arena_release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.delSourceRequset.login_res)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::loginRequest* temp = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::loginRequest* delSourceRequset::_internal_mutable_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::loginRequest>(GetArena());
    _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(p);
  }
  return _impl_.login_res_;
}
inline ::MonitorWall::loginRequest* delSourceRequset::mutable_login_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::MonitorWall::loginRequest* _msg = _internal_mutable_login_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.delSourceRequset.login_res)
  return _msg;
}
inline void delSourceRequset::set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.login_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.delSourceRequset.login_res)
}

// -------------------------------------------------------------------

// searchDevRequest

// repeated .MonitorWall.devMes dev_mes = 1;
inline int searchDevRequest::_internal_dev_mes_size() const {
  return _internal_dev_mes().size();
}
inline int searchDevRequest::dev_mes_size() const {
  return _internal_dev_mes_size();
}
inline void searchDevRequest::clear_dev_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dev_mes_.Clear();
}
inline ::MonitorWall::devMes* searchDevRequest::mutable_dev_mes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.searchDevRequest.dev_mes)
  return _internal_mutable_dev_mes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>* searchDevRequest::mutable_dev_mes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.searchDevRequest.dev_mes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dev_mes();
}
inline const ::MonitorWall::devMes& searchDevRequest::dev_mes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.searchDevRequest.dev_mes)
  return _internal_dev_mes().Get(index);
}
inline ::MonitorWall::devMes* searchDevRequest::add_dev_mes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::devMes* _add = _internal_mutable_dev_mes()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.searchDevRequest.dev_mes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>& searchDevRequest::dev_mes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.searchDevRequest.dev_mes)
  return _internal_dev_mes();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>&
searchDevRequest::_internal_dev_mes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dev_mes_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::devMes>*
searchDevRequest::_internal_mutable_dev_mes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dev_mes_;
}

// .MonitorWall.codeResponse code_info = 2;
inline bool searchDevRequest::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void searchDevRequest::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::codeResponse& searchDevRequest::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::codeResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::codeResponse&>(::MonitorWall::_codeResponse_default_instance_);
}
inline const ::MonitorWall::codeResponse& searchDevRequest::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.searchDevRequest.code_info)
  return _internal_code_info();
}
inline void searchDevRequest::unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.searchDevRequest.code_info)
}
inline ::MonitorWall::codeResponse* searchDevRequest::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::codeResponse* searchDevRequest::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.searchDevRequest.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::MonitorWall::codeResponse* searchDevRequest::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::codeResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::MonitorWall::codeResponse* searchDevRequest::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::codeResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:MonitorWall.searchDevRequest.code_info)
  return _msg;
}
inline void searchDevRequest::set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.searchDevRequest.code_info)
}

// -------------------------------------------------------------------

// splitWindowRequest

// int32 tv_id = 1;
inline void splitWindowRequest::clear_tv_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_id_ = 0;
}
inline ::int32_t splitWindowRequest::tv_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.splitWindowRequest.tv_id)
  return _internal_tv_id();
}
inline void splitWindowRequest::set_tv_id(::int32_t value) {
  _internal_set_tv_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.splitWindowRequest.tv_id)
}
inline ::int32_t splitWindowRequest::_internal_tv_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_id_;
}
inline void splitWindowRequest::_internal_set_tv_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_id_ = value;
}

// int32 spilt_num = 2;
inline void splitWindowRequest::clear_spilt_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spilt_num_ = 0;
}
inline ::int32_t splitWindowRequest::spilt_num() const {
  // @@protoc_insertion_point(field_get:MonitorWall.splitWindowRequest.spilt_num)
  return _internal_spilt_num();
}
inline void splitWindowRequest::set_spilt_num(::int32_t value) {
  _internal_set_spilt_num(value);
  // @@protoc_insertion_point(field_set:MonitorWall.splitWindowRequest.spilt_num)
}
inline ::int32_t splitWindowRequest::_internal_spilt_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.spilt_num_;
}
inline void splitWindowRequest::_internal_set_spilt_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.spilt_num_ = value;
}

// .MonitorWall.loginRequest login_res = 3;
inline bool splitWindowRequest::has_login_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.login_res_ != nullptr);
  return value;
}
inline void splitWindowRequest::clear_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ != nullptr) _impl_.login_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::loginRequest& splitWindowRequest::_internal_login_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::loginRequest* p = _impl_.login_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::loginRequest&>(::MonitorWall::_loginRequest_default_instance_);
}
inline const ::MonitorWall::loginRequest& splitWindowRequest::login_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.splitWindowRequest.login_res)
  return _internal_login_res();
}
inline void splitWindowRequest::unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.login_res_);
  }
  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.splitWindowRequest.login_res)
}
inline ::MonitorWall::loginRequest* splitWindowRequest::release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* released = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::loginRequest* splitWindowRequest::unsafe_arena_release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.splitWindowRequest.login_res)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::loginRequest* temp = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::loginRequest* splitWindowRequest::_internal_mutable_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::loginRequest>(GetArena());
    _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(p);
  }
  return _impl_.login_res_;
}
inline ::MonitorWall::loginRequest* splitWindowRequest::mutable_login_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::loginRequest* _msg = _internal_mutable_login_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.splitWindowRequest.login_res)
  return _msg;
}
inline void splitWindowRequest::set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.login_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.splitWindowRequest.login_res)
}

// -------------------------------------------------------------------

// cameraMessage

// string camera_name = 1;
inline void cameraMessage::clear_camera_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_name_.ClearToEmpty();
}
inline const std::string& cameraMessage::camera_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.cameraMessage.camera_name)
  return _internal_camera_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void cameraMessage::set_camera_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.cameraMessage.camera_name)
}
inline std::string* cameraMessage::mutable_camera_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_name();
  // @@protoc_insertion_point(field_mutable:MonitorWall.cameraMessage.camera_name)
  return _s;
}
inline const std::string& cameraMessage::_internal_camera_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_name_.Get();
}
inline void cameraMessage::_internal_set_camera_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_name_.Set(value, GetArena());
}
inline std::string* cameraMessage::_internal_mutable_camera_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.camera_name_.Mutable( GetArena());
}
inline std::string* cameraMessage::release_camera_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.cameraMessage.camera_name)
  return _impl_.camera_name_.Release();
}
inline void cameraMessage::set_allocated_camera_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_name_.IsDefault()) {
          _impl_.camera_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.cameraMessage.camera_name)
}

// int32 stream_type = 2;
inline void cameraMessage::clear_stream_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_type_ = 0;
}
inline ::int32_t cameraMessage::stream_type() const {
  // @@protoc_insertion_point(field_get:MonitorWall.cameraMessage.stream_type)
  return _internal_stream_type();
}
inline void cameraMessage::set_stream_type(::int32_t value) {
  _internal_set_stream_type(value);
  // @@protoc_insertion_point(field_set:MonitorWall.cameraMessage.stream_type)
}
inline ::int32_t cameraMessage::_internal_stream_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stream_type_;
}
inline void cameraMessage::_internal_set_stream_type(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stream_type_ = value;
}

// string camera_ip = 3;
inline void cameraMessage::clear_camera_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_ip_.ClearToEmpty();
}
inline const std::string& cameraMessage::camera_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.cameraMessage.camera_ip)
  return _internal_camera_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void cameraMessage::set_camera_ip(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.cameraMessage.camera_ip)
}
inline std::string* cameraMessage::mutable_camera_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_camera_ip();
  // @@protoc_insertion_point(field_mutable:MonitorWall.cameraMessage.camera_ip)
  return _s;
}
inline const std::string& cameraMessage::_internal_camera_ip() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_ip_.Get();
}
inline void cameraMessage::_internal_set_camera_ip(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_ip_.Set(value, GetArena());
}
inline std::string* cameraMessage::_internal_mutable_camera_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.camera_ip_.Mutable( GetArena());
}
inline std::string* cameraMessage::release_camera_ip() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.cameraMessage.camera_ip)
  return _impl_.camera_ip_.Release();
}
inline void cameraMessage::set_allocated_camera_ip(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.camera_ip_.IsDefault()) {
          _impl_.camera_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.cameraMessage.camera_ip)
}

// int32 camera_channel = 4;
inline void cameraMessage::clear_camera_channel() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_channel_ = 0;
}
inline ::int32_t cameraMessage::camera_channel() const {
  // @@protoc_insertion_point(field_get:MonitorWall.cameraMessage.camera_channel)
  return _internal_camera_channel();
}
inline void cameraMessage::set_camera_channel(::int32_t value) {
  _internal_set_camera_channel(value);
  // @@protoc_insertion_point(field_set:MonitorWall.cameraMessage.camera_channel)
}
inline ::int32_t cameraMessage::_internal_camera_channel() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.camera_channel_;
}
inline void cameraMessage::_internal_set_camera_channel(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.camera_channel_ = value;
}

// int32 win_id = 5;
inline void cameraMessage::clear_win_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_id_ = 0;
}
inline ::int32_t cameraMessage::win_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.cameraMessage.win_id)
  return _internal_win_id();
}
inline void cameraMessage::set_win_id(::int32_t value) {
  _internal_set_win_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.cameraMessage.win_id)
}
inline ::int32_t cameraMessage::_internal_win_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.win_id_;
}
inline void cameraMessage::_internal_set_win_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_id_ = value;
}

// -------------------------------------------------------------------

// oneWindeosDispalyMes

// int32 out_tv_id = 1;
inline void oneWindeosDispalyMes::clear_out_tv_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.out_tv_id_ = 0;
}
inline ::int32_t oneWindeosDispalyMes::out_tv_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.out_tv_id)
  return _internal_out_tv_id();
}
inline void oneWindeosDispalyMes::set_out_tv_id(::int32_t value) {
  _internal_set_out_tv_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.oneWindeosDispalyMes.out_tv_id)
}
inline ::int32_t oneWindeosDispalyMes::_internal_out_tv_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.out_tv_id_;
}
inline void oneWindeosDispalyMes::_internal_set_out_tv_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.out_tv_id_ = value;
}

// int32 win_num = 2;
inline void oneWindeosDispalyMes::clear_win_num() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_num_ = 0;
}
inline ::int32_t oneWindeosDispalyMes::win_num() const {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.win_num)
  return _internal_win_num();
}
inline void oneWindeosDispalyMes::set_win_num(::int32_t value) {
  _internal_set_win_num(value);
  // @@protoc_insertion_point(field_set:MonitorWall.oneWindeosDispalyMes.win_num)
}
inline ::int32_t oneWindeosDispalyMes::_internal_win_num() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.win_num_;
}
inline void oneWindeosDispalyMes::_internal_set_win_num(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_num_ = value;
}

// bool is_bind = 3;
inline void oneWindeosDispalyMes::clear_is_bind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bind_ = false;
}
inline bool oneWindeosDispalyMes::is_bind() const {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.is_bind)
  return _internal_is_bind();
}
inline void oneWindeosDispalyMes::set_is_bind(bool value) {
  _internal_set_is_bind(value);
  // @@protoc_insertion_point(field_set:MonitorWall.oneWindeosDispalyMes.is_bind)
}
inline bool oneWindeosDispalyMes::_internal_is_bind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_bind_;
}
inline void oneWindeosDispalyMes::_internal_set_is_bind(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_bind_ = value;
}

// int32 block_line = 4;
inline void oneWindeosDispalyMes::clear_block_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_line_ = 0;
}
inline ::int32_t oneWindeosDispalyMes::block_line() const {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.block_line)
  return _internal_block_line();
}
inline void oneWindeosDispalyMes::set_block_line(::int32_t value) {
  _internal_set_block_line(value);
  // @@protoc_insertion_point(field_set:MonitorWall.oneWindeosDispalyMes.block_line)
}
inline ::int32_t oneWindeosDispalyMes::_internal_block_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_line_;
}
inline void oneWindeosDispalyMes::_internal_set_block_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_line_ = value;
}

// int32 block_col = 5;
inline void oneWindeosDispalyMes::clear_block_col() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_col_ = 0;
}
inline ::int32_t oneWindeosDispalyMes::block_col() const {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.block_col)
  return _internal_block_col();
}
inline void oneWindeosDispalyMes::set_block_col(::int32_t value) {
  _internal_set_block_col(value);
  // @@protoc_insertion_point(field_set:MonitorWall.oneWindeosDispalyMes.block_col)
}
inline ::int32_t oneWindeosDispalyMes::_internal_block_col() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_col_;
}
inline void oneWindeosDispalyMes::_internal_set_block_col(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_col_ = value;
}

// repeated .MonitorWall.cameraMessage cam_mes = 6;
inline int oneWindeosDispalyMes::_internal_cam_mes_size() const {
  return _internal_cam_mes().size();
}
inline int oneWindeosDispalyMes::cam_mes_size() const {
  return _internal_cam_mes_size();
}
inline void oneWindeosDispalyMes::clear_cam_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cam_mes_.Clear();
}
inline ::MonitorWall::cameraMessage* oneWindeosDispalyMes::mutable_cam_mes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.oneWindeosDispalyMes.cam_mes)
  return _internal_mutable_cam_mes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>* oneWindeosDispalyMes::mutable_cam_mes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.oneWindeosDispalyMes.cam_mes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_cam_mes();
}
inline const ::MonitorWall::cameraMessage& oneWindeosDispalyMes::cam_mes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.oneWindeosDispalyMes.cam_mes)
  return _internal_cam_mes().Get(index);
}
inline ::MonitorWall::cameraMessage* oneWindeosDispalyMes::add_cam_mes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::cameraMessage* _add = _internal_mutable_cam_mes()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.oneWindeosDispalyMes.cam_mes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>& oneWindeosDispalyMes::cam_mes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.oneWindeosDispalyMes.cam_mes)
  return _internal_cam_mes();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>&
oneWindeosDispalyMes::_internal_cam_mes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cam_mes_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::cameraMessage>*
oneWindeosDispalyMes::_internal_mutable_cam_mes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.cam_mes_;
}

// -------------------------------------------------------------------

// allWindowDisplayMesResponse

// repeated .MonitorWall.oneWindeosDispalyMes one_win_mes = 1;
inline int allWindowDisplayMesResponse::_internal_one_win_mes_size() const {
  return _internal_one_win_mes().size();
}
inline int allWindowDisplayMesResponse::one_win_mes_size() const {
  return _internal_one_win_mes_size();
}
inline void allWindowDisplayMesResponse::clear_one_win_mes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.one_win_mes_.Clear();
}
inline ::MonitorWall::oneWindeosDispalyMes* allWindowDisplayMesResponse::mutable_one_win_mes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.allWindowDisplayMesResponse.one_win_mes)
  return _internal_mutable_one_win_mes()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>* allWindowDisplayMesResponse::mutable_one_win_mes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.allWindowDisplayMesResponse.one_win_mes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_one_win_mes();
}
inline const ::MonitorWall::oneWindeosDispalyMes& allWindowDisplayMesResponse::one_win_mes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.allWindowDisplayMesResponse.one_win_mes)
  return _internal_one_win_mes().Get(index);
}
inline ::MonitorWall::oneWindeosDispalyMes* allWindowDisplayMesResponse::add_one_win_mes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::oneWindeosDispalyMes* _add = _internal_mutable_one_win_mes()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.allWindowDisplayMesResponse.one_win_mes)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>& allWindowDisplayMesResponse::one_win_mes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.allWindowDisplayMesResponse.one_win_mes)
  return _internal_one_win_mes();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>&
allWindowDisplayMesResponse::_internal_one_win_mes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.one_win_mes_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::oneWindeosDispalyMes>*
allWindowDisplayMesResponse::_internal_mutable_one_win_mes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.one_win_mes_;
}

// .MonitorWall.codeResponse code_info = 2;
inline bool allWindowDisplayMesResponse::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void allWindowDisplayMesResponse::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::codeResponse& allWindowDisplayMesResponse::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::codeResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::codeResponse&>(::MonitorWall::_codeResponse_default_instance_);
}
inline const ::MonitorWall::codeResponse& allWindowDisplayMesResponse::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.allWindowDisplayMesResponse.code_info)
  return _internal_code_info();
}
inline void allWindowDisplayMesResponse::unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.allWindowDisplayMesResponse.code_info)
}
inline ::MonitorWall::codeResponse* allWindowDisplayMesResponse::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::codeResponse* allWindowDisplayMesResponse::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.allWindowDisplayMesResponse.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::MonitorWall::codeResponse* allWindowDisplayMesResponse::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::codeResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::MonitorWall::codeResponse* allWindowDisplayMesResponse::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::codeResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:MonitorWall.allWindowDisplayMesResponse.code_info)
  return _msg;
}
inline void allWindowDisplayMesResponse::set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.allWindowDisplayMesResponse.code_info)
}

// -------------------------------------------------------------------

// windowStreamInfo

// int32 window_id = 1;
inline void windowStreamInfo::clear_window_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_id_ = 0;
}
inline ::int32_t windowStreamInfo::window_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.windowStreamInfo.window_id)
  return _internal_window_id();
}
inline void windowStreamInfo::set_window_id(::int32_t value) {
  _internal_set_window_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.windowStreamInfo.window_id)
}
inline ::int32_t windowStreamInfo::_internal_window_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.window_id_;
}
inline void windowStreamInfo::_internal_set_window_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.window_id_ = value;
}

// int32 bit_rate = 2;
inline void windowStreamInfo::clear_bit_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_ = 0;
}
inline ::int32_t windowStreamInfo::bit_rate() const {
  // @@protoc_insertion_point(field_get:MonitorWall.windowStreamInfo.bit_rate)
  return _internal_bit_rate();
}
inline void windowStreamInfo::set_bit_rate(::int32_t value) {
  _internal_set_bit_rate(value);
  // @@protoc_insertion_point(field_set:MonitorWall.windowStreamInfo.bit_rate)
}
inline ::int32_t windowStreamInfo::_internal_bit_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bit_rate_;
}
inline void windowStreamInfo::_internal_set_bit_rate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bit_rate_ = value;
}

// int32 frame_rate = 3;
inline void windowStreamInfo::clear_frame_rate() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_ = 0;
}
inline ::int32_t windowStreamInfo::frame_rate() const {
  // @@protoc_insertion_point(field_get:MonitorWall.windowStreamInfo.frame_rate)
  return _internal_frame_rate();
}
inline void windowStreamInfo::set_frame_rate(::int32_t value) {
  _internal_set_frame_rate(value);
  // @@protoc_insertion_point(field_set:MonitorWall.windowStreamInfo.frame_rate)
}
inline ::int32_t windowStreamInfo::_internal_frame_rate() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.frame_rate_;
}
inline void windowStreamInfo::_internal_set_frame_rate(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.frame_rate_ = value;
}

// string resolution = 4;
inline void windowStreamInfo::clear_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_.ClearToEmpty();
}
inline const std::string& windowStreamInfo::resolution() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.windowStreamInfo.resolution)
  return _internal_resolution();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void windowStreamInfo::set_resolution(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.windowStreamInfo.resolution)
}
inline std::string* windowStreamInfo::mutable_resolution() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resolution();
  // @@protoc_insertion_point(field_mutable:MonitorWall.windowStreamInfo.resolution)
  return _s;
}
inline const std::string& windowStreamInfo::_internal_resolution() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolution_.Get();
}
inline void windowStreamInfo::_internal_set_resolution(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_.Set(value, GetArena());
}
inline std::string* windowStreamInfo::_internal_mutable_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.resolution_.Mutable( GetArena());
}
inline std::string* windowStreamInfo::release_resolution() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.windowStreamInfo.resolution)
  return _impl_.resolution_.Release();
}
inline void windowStreamInfo::set_allocated_resolution(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolution_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resolution_.IsDefault()) {
          _impl_.resolution_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.windowStreamInfo.resolution)
}

// string compression = 5;
inline void windowStreamInfo::clear_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_.ClearToEmpty();
}
inline const std::string& windowStreamInfo::compression() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.windowStreamInfo.compression)
  return _internal_compression();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void windowStreamInfo::set_compression(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:MonitorWall.windowStreamInfo.compression)
}
inline std::string* windowStreamInfo::mutable_compression() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_compression();
  // @@protoc_insertion_point(field_mutable:MonitorWall.windowStreamInfo.compression)
  return _s;
}
inline const std::string& windowStreamInfo::_internal_compression() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compression_.Get();
}
inline void windowStreamInfo::_internal_set_compression(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_.Set(value, GetArena());
}
inline std::string* windowStreamInfo::_internal_mutable_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.compression_.Mutable( GetArena());
}
inline std::string* windowStreamInfo::release_compression() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.windowStreamInfo.compression)
  return _impl_.compression_.Release();
}
inline void windowStreamInfo::set_allocated_compression(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compression_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.compression_.IsDefault()) {
          _impl_.compression_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.windowStreamInfo.compression)
}

// -------------------------------------------------------------------

// blockStreamInfo

// int32 tv_id = 1;
inline void blockStreamInfo::clear_tv_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_id_ = 0;
}
inline ::int32_t blockStreamInfo::tv_id() const {
  // @@protoc_insertion_point(field_get:MonitorWall.blockStreamInfo.tv_id)
  return _internal_tv_id();
}
inline void blockStreamInfo::set_tv_id(::int32_t value) {
  _internal_set_tv_id(value);
  // @@protoc_insertion_point(field_set:MonitorWall.blockStreamInfo.tv_id)
}
inline ::int32_t blockStreamInfo::_internal_tv_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.tv_id_;
}
inline void blockStreamInfo::_internal_set_tv_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.tv_id_ = value;
}

// repeated .MonitorWall.windowStreamInfo win_stream_info = 2;
inline int blockStreamInfo::_internal_win_stream_info_size() const {
  return _internal_win_stream_info().size();
}
inline int blockStreamInfo::win_stream_info_size() const {
  return _internal_win_stream_info_size();
}
inline void blockStreamInfo::clear_win_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.win_stream_info_.Clear();
}
inline ::MonitorWall::windowStreamInfo* blockStreamInfo::mutable_win_stream_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.blockStreamInfo.win_stream_info)
  return _internal_mutable_win_stream_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>* blockStreamInfo::mutable_win_stream_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.blockStreamInfo.win_stream_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_win_stream_info();
}
inline const ::MonitorWall::windowStreamInfo& blockStreamInfo::win_stream_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.blockStreamInfo.win_stream_info)
  return _internal_win_stream_info().Get(index);
}
inline ::MonitorWall::windowStreamInfo* blockStreamInfo::add_win_stream_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::windowStreamInfo* _add = _internal_mutable_win_stream_info()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.blockStreamInfo.win_stream_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>& blockStreamInfo::win_stream_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.blockStreamInfo.win_stream_info)
  return _internal_win_stream_info();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>&
blockStreamInfo::_internal_win_stream_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.win_stream_info_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::windowStreamInfo>*
blockStreamInfo::_internal_mutable_win_stream_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.win_stream_info_;
}

// -------------------------------------------------------------------

// windowSreamInfoResponse

// repeated .MonitorWall.blockStreamInfo block_stream_info = 1;
inline int windowSreamInfoResponse::_internal_block_stream_info_size() const {
  return _internal_block_stream_info().size();
}
inline int windowSreamInfoResponse::block_stream_info_size() const {
  return _internal_block_stream_info_size();
}
inline void windowSreamInfoResponse::clear_block_stream_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.block_stream_info_.Clear();
}
inline ::MonitorWall::blockStreamInfo* windowSreamInfoResponse::mutable_block_stream_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:MonitorWall.windowSreamInfoResponse.block_stream_info)
  return _internal_mutable_block_stream_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>* windowSreamInfoResponse::mutable_block_stream_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:MonitorWall.windowSreamInfoResponse.block_stream_info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_block_stream_info();
}
inline const ::MonitorWall::blockStreamInfo& windowSreamInfoResponse::block_stream_info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.windowSreamInfoResponse.block_stream_info)
  return _internal_block_stream_info().Get(index);
}
inline ::MonitorWall::blockStreamInfo* windowSreamInfoResponse::add_block_stream_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::MonitorWall::blockStreamInfo* _add = _internal_mutable_block_stream_info()->Add();
  // @@protoc_insertion_point(field_add:MonitorWall.windowSreamInfoResponse.block_stream_info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>& windowSreamInfoResponse::block_stream_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:MonitorWall.windowSreamInfoResponse.block_stream_info)
  return _internal_block_stream_info();
}
inline const ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>&
windowSreamInfoResponse::_internal_block_stream_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.block_stream_info_;
}
inline ::google::protobuf::RepeatedPtrField<::MonitorWall::blockStreamInfo>*
windowSreamInfoResponse::_internal_mutable_block_stream_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.block_stream_info_;
}

// .MonitorWall.codeResponse code_info = 2;
inline bool windowSreamInfoResponse::has_code_info() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.code_info_ != nullptr);
  return value;
}
inline void windowSreamInfoResponse::clear_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ != nullptr) _impl_.code_info_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::MonitorWall::codeResponse& windowSreamInfoResponse::_internal_code_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::codeResponse* p = _impl_.code_info_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::codeResponse&>(::MonitorWall::_codeResponse_default_instance_);
}
inline const ::MonitorWall::codeResponse& windowSreamInfoResponse::code_info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.windowSreamInfoResponse.code_info)
  return _internal_code_info();
}
inline void windowSreamInfoResponse::unsafe_arena_set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.code_info_);
  }
  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.windowSreamInfoResponse.code_info)
}
inline ::MonitorWall::codeResponse* windowSreamInfoResponse::release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* released = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::codeResponse* windowSreamInfoResponse::unsafe_arena_release_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.windowSreamInfoResponse.code_info)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::MonitorWall::codeResponse* temp = _impl_.code_info_;
  _impl_.code_info_ = nullptr;
  return temp;
}
inline ::MonitorWall::codeResponse* windowSreamInfoResponse::_internal_mutable_code_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.code_info_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::codeResponse>(GetArena());
    _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(p);
  }
  return _impl_.code_info_;
}
inline ::MonitorWall::codeResponse* windowSreamInfoResponse::mutable_code_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::MonitorWall::codeResponse* _msg = _internal_mutable_code_info();
  // @@protoc_insertion_point(field_mutable:MonitorWall.windowSreamInfoResponse.code_info)
  return _msg;
}
inline void windowSreamInfoResponse::set_allocated_code_info(::MonitorWall::codeResponse* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.code_info_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.code_info_ = reinterpret_cast<::MonitorWall::codeResponse*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.windowSreamInfoResponse.code_info)
}

// .MonitorWall.loginRequest login_res = 3;
inline bool windowSreamInfoResponse::has_login_res() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.login_res_ != nullptr);
  return value;
}
inline void windowSreamInfoResponse::clear_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ != nullptr) _impl_.login_res_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::MonitorWall::loginRequest& windowSreamInfoResponse::_internal_login_res() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::MonitorWall::loginRequest* p = _impl_.login_res_;
  return p != nullptr ? *p : reinterpret_cast<const ::MonitorWall::loginRequest&>(::MonitorWall::_loginRequest_default_instance_);
}
inline const ::MonitorWall::loginRequest& windowSreamInfoResponse::login_res() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:MonitorWall.windowSreamInfoResponse.login_res)
  return _internal_login_res();
}
inline void windowSreamInfoResponse::unsafe_arena_set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.login_res_);
  }
  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:MonitorWall.windowSreamInfoResponse.login_res)
}
inline ::MonitorWall::loginRequest* windowSreamInfoResponse::release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::loginRequest* released = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::MonitorWall::loginRequest* windowSreamInfoResponse::unsafe_arena_release_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:MonitorWall.windowSreamInfoResponse.login_res)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::MonitorWall::loginRequest* temp = _impl_.login_res_;
  _impl_.login_res_ = nullptr;
  return temp;
}
inline ::MonitorWall::loginRequest* windowSreamInfoResponse::_internal_mutable_login_res() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.login_res_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::MonitorWall::loginRequest>(GetArena());
    _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(p);
  }
  return _impl_.login_res_;
}
inline ::MonitorWall::loginRequest* windowSreamInfoResponse::mutable_login_res() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::MonitorWall::loginRequest* _msg = _internal_mutable_login_res();
  // @@protoc_insertion_point(field_mutable:MonitorWall.windowSreamInfoResponse.login_res)
  return _msg;
}
inline void windowSreamInfoResponse::set_allocated_login_res(::MonitorWall::loginRequest* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.login_res_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.login_res_ = reinterpret_cast<::MonitorWall::loginRequest*>(value);
  // @@protoc_insertion_point(field_set_allocated:MonitorWall.windowSreamInfoResponse.login_res)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace MonitorWall


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_MonitorWall_2eproto_2epb_2eh
